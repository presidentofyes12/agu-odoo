impromise@impromise-OptiPlex-990:~/oldhome/home/impromise/Downloads/Telegram Desktop/nostr-w-relay-main/agu-app/src/odoo-nostr-project$ sudo gitlab-ctl stop
sudo apt-get remove --purge gitlab-ce
sudo apt-get remove --purge gitlab-ee
sudo apt-get remove --purge gitlab-rails
sudo apt-get remove --purge gitlab-rake
sudo apt-get remove --purge gitlab-ctl
sudo rm -rf /etc/gitlab
sudo rm -rf /var/opt/gitlab
sudo rm -rf /var/log/gitlab
sudo ./gitlab_setup.sh
ok: down: alertmanager: 0s, normally up
ok: down: gitaly: 0s, normally up
ok: down: gitlab-exporter: 1s, normally up
ok: down: gitlab-kas: 0s, normally up
ok: down: gitlab-workhorse: 0s, normally up
ok: down: logrotate: 1s, normally up
ok: down: nginx: 0s, normally up
ok: down: node-exporter: 1s, normally up
ok: down: postgres-exporter: 0s, normally up
ok: down: postgresql: 0s, normally up
ok: down: prometheus: 0s, normally up
ok: down: puma: 0s, normally up
ok: down: redis: 0s, normally up
ok: down: redis-exporter: 1s, normally up
ok: down: sidekiq: 1s, normally up
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
Package 'gitlab-ce' is not installed, so not removed
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following packages will be REMOVED:
  gitlab-ee*
0 upgraded, 0 newly installed, 1 to remove and 0 not upgraded.
After this operation, 3,973 MB disk space will be freed.
Do you want to continue? [Y/n] y
(Reading database ... 350029 files and directories currently installed.)
Removing gitlab-ee (17.5.1-ee.0) ...
(Reading database ... 238022 files and directories currently installed.)
Purging configuration files for gitlab-ee (17.5.1-ee.0) ...
dpkg: warning: while removing gitlab-ee, directory '/opt/gitlab/sv' not empty so not removed
dpkg: warning: while removing gitlab-ee, directory '/opt/gitlab/service' not empty so not removed
dpkg: warning: while removing gitlab-ee, directory '/opt/gitlab/init' not empty so not removed
dpkg: warning: while removing gitlab-ee, directory '/opt/gitlab/etc' not empty so not removed
dpkg: warning: while removing gitlab-ee, directory '/opt/gitlab/embedded/ssl/certs' not empty so not removed
dpkg: warning: while removing gitlab-ee, directory '/opt/gitlab/embedded/service/gitlab-shell' not empty so not removed
dpkg: warning: while removing gitlab-ee, directory '/opt/gitlab/embedded/service/gitlab-rails/public' not empty so not removed
dpkg: warning: while removing gitlab-ee, directory '/opt/gitlab/embedded/service/gitlab-rails/config' not empty so not removed
dpkg: warning: while removing gitlab-ee, directory '/opt/gitlab/embedded/cookbooks' not empty so not removed
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
E: Unable to locate package gitlab-rails
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
E: Unable to locate package gitlab-rake
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
E: Unable to locate package gitlab-ctl
Hit:1 http://us.archive.ubuntu.com/ubuntu jammy InRelease
Hit:2 http://us.archive.ubuntu.com/ubuntu jammy-updates InRelease                                                                                            
Hit:3 http://us.archive.ubuntu.com/ubuntu jammy-backports InRelease                                                                                          
Hit:4 https://download.docker.com/linux/ubuntu jammy InRelease      
Hit:5 http://security.ubuntu.com/ubuntu jammy-security InRelease    
Hit:6 https://packages.gitlab.com/gitlab/gitlab-ee/ubuntu jammy InRelease
Reading package lists... Done
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
ca-certificates is already the newest version (20240203~22.04.1).
curl is already the newest version (7.81.0-1ubuntu1.18).
git is already the newest version (1:2.34.1-1ubuntu1.11).
openssh-server is already the newest version (1:8.9p1-3ubuntu0.10).
perl is already the newest version (5.34.0-3ubuntu1.3).
tzdata is already the newest version (2024a-0ubuntu0.22.04.1).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
postfix is already the newest version (3.6.4-1ubuntu1.3).
0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following NEW packages will be installed:
  gitlab-ee
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 1,428 MB of archives.
After this operation, 3,973 MB of additional disk space will be used.
Get:1 https://packages.gitlab.com/gitlab/gitlab-ee/ubuntu jammy/main amd64 gitlab-ee amd64 17.5.1-ee.0 [1,428 MB]
Fetched 1,428 MB in 3min 0s (7,923 kB/s)                                                                                                                                                                          
Selecting previously unselected package gitlab-ee.
(Reading database ... 238009 files and directories currently installed.)
Preparing to unpack .../gitlab-ee_17.5.1-ee.0_amd64.deb ...
Unpacking gitlab-ee (17.5.1-ee.0) ...
Setting up gitlab-ee (17.5.1-ee.0) ...
[2024-11-03T19:51:02-05:00] INFO: Started Cinc Zero at chefzero://localhost:1 with repository at /opt/gitlab/embedded (One version per cookbook)
Cinc Client, version 18.3.0
Patents: https://www.chef.io/patents
Infra Phase starting
[2024-11-03T19:51:02-05:00] INFO: *** Cinc Client 18.3.0 ***
[2024-11-03T19:51:02-05:00] INFO: Platform: x86_64-linux
[2024-11-03T19:51:02-05:00] INFO: Cinc-client pid: 3861563
/opt/gitlab/embedded/lib/ruby/gems/3.2.0/gems/ffi-yajl-2.6.0/lib/ffi_yajl/encoder.rb:42: warning: undefining the allocator of T_DATA class FFI_Yajl::Ext::Encoder::YajlGen
[2024-11-03T19:51:04-05:00] INFO: Setting the run_list to ["recipe[gitlab-ee]"] from CLI options
[2024-11-03T19:51:04-05:00] INFO: Run List is [recipe[gitlab-ee]]
[2024-11-03T19:51:04-05:00] INFO: Run List expands to [gitlab-ee]
[2024-11-03T19:51:04-05:00] INFO: Starting Cinc Client Run for impromise-OptiPlex-990
[2024-11-03T19:51:04-05:00] INFO: Running start handlers
[2024-11-03T19:51:04-05:00] INFO: Start handlers complete.
Resolving cookbooks for run list: ["gitlab-ee"]
[2024-11-03T19:51:05-05:00] INFO: Loading cookbooks [gitlab-ee@0.0.1, package@0.1.0, gitlab@0.0.1, consul@0.1.0, patroni@0.1.0, pgbouncer@0.1.0, spamcheck@0.1.0, runit@5.1.7, logrotate@0.1.0, postgresql@0.1.0, r
edis@0.1.0, monitoring@0.1.0, registry@0.1.0, mattermost@0.1.0, gitaly@0.1.0, praefect@0.1.0, gitlab-kas@0.1.0, gitlab-pages@0.1.0, letsencrypt@0.1.0, nginx@0.1.0, acme@4.1.6, crond@0.1.0]
Synchronizing cookbooks:
  - gitlab-ee (0.0.1)
  - package (0.1.0)
  - gitlab (0.0.1)
  - consul (0.1.0)
  - patroni (0.1.0)
  - pgbouncer (0.1.0)
  - spamcheck (0.1.0)
  - runit (5.1.7)
  - logrotate (0.1.0)
  - postgresql (0.1.0)
  - redis (0.1.0)
  - monitoring (0.1.0)
  - registry (0.1.0)
  - mattermost (0.1.0)
  - gitaly (0.1.0)
  - praefect (0.1.0)
  - gitlab-kas (0.1.0)
  - gitlab-pages (0.1.0)
  - letsencrypt (0.1.0)
  - nginx (0.1.0)
  - acme (4.1.6)
  - crond (0.1.0)
Installing cookbook gem dependencies:
Compiling cookbooks...
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/helpers/selinux_distro_helper.rb:2: warning: already initialized constant SELinuxDistroHelper::REDHAT_RELEASE_FILE
/opt/gitlab/embedded/cookbooks/package/libraries/helpers/selinux_distro_helper.rb:2: warning: previous definition of REDHAT_RELEASE_FILE was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/helpers/selinux_distro_helper.rb:3: warning: already initialized constant SELinuxDistroHelper::OS_RELEASE_FILE
/opt/gitlab/embedded/cookbooks/package/libraries/helpers/selinux_distro_helper.rb:3: warning: previous definition of OS_RELEASE_FILE was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/helpers/secrets_helper.rb:4: warning: already initialized constant SecretsHelper::SECRETS_FILE
/opt/gitlab/embedded/cookbooks/package/libraries/helpers/secrets_helper.rb:4: warning: previous definition of SECRETS_FILE was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/helpers/secrets_helper.rb:5: warning: already initialized constant SecretsHelper::SECRETS_FILE_CHEF_ATTR
/opt/gitlab/embedded/cookbooks/package/libraries/helpers/secrets_helper.rb:5: warning: previous definition of SECRETS_FILE_CHEF_ATTR was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/helpers/secrets_helper.rb:6: warning: already initialized constant SecretsHelper::SKIP_GENERATE_SECRETS_CHEF_ATTR
/opt/gitlab/embedded/cookbooks/package/libraries/helpers/secrets_helper.rb:6: warning: previous definition of SKIP_GENERATE_SECRETS_CHEF_ATTR was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/gitlab_cluster.rb:16: warning: already initialized constant GitlabCluster::CONFIG_PATH
/opt/gitlab/embedded/cookbooks/package/libraries/gitlab_cluster.rb:16: warning: previous definition of CONFIG_PATH was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/gitlab_cluster.rb:17: warning: already initialized constant GitlabCluster::JSON_FILE
/opt/gitlab/embedded/cookbooks/package/libraries/gitlab_cluster.rb:17: warning: previous definition of JSON_FILE was here
Loading Cinc Auditor profile files:
Loading Cinc Auditor input files:
Loading Cinc Auditor waiver files:
[2024-11-03T19:51:06-05:00] INFO: Generating default secrets
[2024-11-03T19:51:08-05:00] INFO: Generating /etc/gitlab/gitlab-secrets.json file
Recipe: gitlab::default
  * directory[/etc/gitlab] action create[2024-11-03T19:51:08-05:00] INFO: directory[/etc/gitlab] mode changed to 775

    - change mode from '0755' to '0775'
[2024-11-03T19:51:08-05:00] WARN: gitlab-rails does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:08-05:00] WARN: Selected systemd because /run/systemd/system/ exists
[2024-11-03T19:51:08-05:00] WARN: gitlab-shell does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:08-05:00] WARN: gitlab-sshd does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: logrotate does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: logrotate does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: puma does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: gitlab-rails does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: gitlab-shell does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: gitlab-workhorse does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: gitlab-pages does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: gitlab-kas does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: gitaly does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: mailroom does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: gitaly does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: postgresql does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: postgresql does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: gitlab-kas does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: puma does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: sidekiq does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: gitlab-workhorse does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: node-exporter does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: gitlab-exporter does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: redis-exporter does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: prometheus does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: alertmanager does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:51:09-05:00] WARN: postgres-exporter does not have a log_group or default logdir mode defined. Setting to 0700.
  Converging 312 resources
  * directory[/etc/gitlab] action create (up to date)
  * directory[Create /var/opt/gitlab] action create[2024-11-03T19:51:09-05:00] INFO: directory[Create /var/opt/gitlab] created directory /var/opt/gitlab

    - create new directory /var/opt/gitlab[2024-11-03T19:51:09-05:00] INFO: directory[Create /var/opt/gitlab] owner changed to 0
[2024-11-03T19:51:09-05:00] INFO: directory[Create /var/opt/gitlab] group changed to 0
[2024-11-03T19:51:09-05:00] INFO: directory[Create /var/opt/gitlab] mode changed to 755

    - change mode from '' to '0755'
    - change owner from '' to 'root'
    - change group from '' to 'root'
  * directory[Create /var/log/gitlab] action create (up to date)
  * directory[/opt/gitlab/embedded/etc] action create (up to date)
  * template[/opt/gitlab/embedded/etc/gitconfig] action create (up to date)
Recipe: gitlab::web-server
  * account[Webserver user and group] action create
    * group[Webserver user and group] action create (up to date)
    * linux_user[Webserver user and group] action create (up to date)
     (up to date)
Recipe: gitlab::users
  * directory[/var/opt/gitlab] action create (up to date)
  * account[GitLab user and group] action create
    * group[GitLab user and group] action create (up to date)
    * linux_user[GitLab user and group] action create (up to date)
     (up to date)
  * template[/var/opt/gitlab/.gitconfig] action create[2024-11-03T19:51:09-05:00] INFO: template[/var/opt/gitlab/.gitconfig] created file /var/opt/gitlab/.gitconfig

    - create new file /var/opt/gitlab/.gitconfig[2024-11-03T19:51:09-05:00] INFO: template[/var/opt/gitlab/.gitconfig] updated file contents /var/opt/gitlab/.gitconfig

    - update content in file /var/opt/gitlab/.gitconfig from none to 732e0b
    --- /var/opt/gitlab/.gitconfig	2024-11-03 19:51:09.831475101 -0500
    +++ /var/opt/gitlab/.chef-.gitconfig20241103-3861563-hqnb4e.gitconfig	2024-11-03 19:51:09.831475101 -0500
    @@ -1,12 +1,24 @@
    +# This file is managed by gitlab-ctl. Manual changes will be
    +# erased! To change the contents below, edit /etc/gitlab/gitlab.rb
    +# and run `sudo gitlab-ctl reconfigure`.
    +
    +[user]
    +        name = GitLab
    +        email = gitlab@localhost
    +[core]
    +        autocrlf = input
    +        
    +[gc]
    +        auto = 0[2024-11-03T19:51:09-05:00] INFO: template[/var/opt/gitlab/.gitconfig] owner changed to 998
[2024-11-03T19:51:09-05:00] INFO: template[/var/opt/gitlab/.gitconfig] group changed to 997
[2024-11-03T19:51:09-05:00] INFO: template[/var/opt/gitlab/.gitconfig] mode changed to 644

    - change mode from '' to '0644'
    - change owner from '' to 'git'
    - change group from '' to 'git'
  * directory[/var/opt/gitlab/.bundle] action create[2024-11-03T19:51:09-05:00] INFO: directory[/var/opt/gitlab/.bundle] created directory /var/opt/gitlab/.bundle

    - create new directory /var/opt/gitlab/.bundle[2024-11-03T19:51:09-05:00] INFO: directory[/var/opt/gitlab/.bundle] owner changed to 998
[2024-11-03T19:51:09-05:00] INFO: directory[/var/opt/gitlab/.bundle] group changed to 997

    - change owner from '' to 'git'
    - change group from '' to 'git'
Recipe: gitaly::git_data_dirs
  * storage_directory[/var/opt/gitlab/git-data] action create
    * ruby_block[directory resource: /var/opt/gitlab/git-data] action run[2024-11-03T19:51:10-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/git-data] called

      - execute the ruby block directory resource: /var/opt/gitlab/git-data
  
  * storage_directory[/var/opt/gitlab/git-data/repositories] action create
    * ruby_block[directory resource: /var/opt/gitlab/git-data/repositories] action run[2024-11-03T19:51:10-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/git-data/repositories] called

      - execute the ruby block directory resource: /var/opt/gitlab/git-data/repositories
  
Recipe: gitlab::rails_pages_shared_path
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared] action run[2024-11-03T19:51:10-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared] called

      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared
  
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/pages] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/pages] action run[2024-11-03T19:51:10-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/pages] called

      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/pages
  
Recipe: gitlab::gitlab-rails
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/artifacts] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/artifacts] action run[2024-11-03T19:51:10-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/artifacts] calle
d

      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/artifacts
  
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/external-diffs] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/external-diffs] action run[2024-11-03T19:51:10-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/external-di
ffs] called

      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/external-diffs
  
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/lfs-objects] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/lfs-objects] action run[2024-11-03T19:51:11-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/lfs-objects] c
alled

      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/lfs-objects
  
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/packages] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/packages] action run[2024-11-03T19:51:11-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/packages] called

      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/packages
  
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action run[2024-11-03T19:51:11-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/dependenc
y_proxy] called

      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/dependency_proxy
  
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/terraform_state] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/terraform_state] action run[2024-11-03T19:51:11-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/terraform_
state] called

      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/terraform_state
  
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/ci_secure_files] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/ci_secure_files] action run[2024-11-03T19:51:11-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/ci_secure_
files] called

      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/ci_secure_files
  
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/encrypted_settings] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/encrypted_settings] action run[2024-11-03T19:51:11-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/encrypt
ed_settings] called

      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/encrypted_settings
  
  * storage_directory[/var/opt/gitlab/gitlab-rails/uploads] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/uploads] action run[2024-11-03T19:51:12-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/uploads] called

      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/uploads
  
  * storage_directory[/var/opt/gitlab/gitlab-ci/builds] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-ci/builds] action run[2024-11-03T19:51:12-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/gitlab-ci/builds] called

      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-ci/builds
  
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/cache] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/cache] action run[2024-11-03T19:51:12-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/cache] called

      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/cache
  
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/tmp] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/tmp] action run[2024-11-03T19:51:12-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/tmp] called

      - execute the ruby block directory resource: /var/opt/gitlab/gitlab-rails/shared/tmp
  
  * storage_directory[/opt/gitlab/embedded/service/gitlab-rails/public] action create (skipped due to only_if)
  * directory[create /var/opt/gitlab/gitlab-rails/etc] action create[2024-11-03T19:51:12-05:00] INFO: directory[create /var/opt/gitlab/gitlab-rails/etc] created directory /var/opt/gitlab/gitlab-rails/etc

    - create new directory /var/opt/gitlab/gitlab-rails/etc[2024-11-03T19:51:12-05:00] INFO: directory[create /var/opt/gitlab/gitlab-rails/etc] owner changed to 998
[2024-11-03T19:51:12-05:00] INFO: directory[create /var/opt/gitlab/gitlab-rails/etc] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'git'
  * directory[create /opt/gitlab/etc/gitlab-rails] action create (up to date)
  * directory[create /var/opt/gitlab/gitlab-rails/working] action create[2024-11-03T19:51:12-05:00] INFO: directory[create /var/opt/gitlab/gitlab-rails/working] created directory /var/opt/gitlab/gitlab-rails/wor
king

    - create new directory /var/opt/gitlab/gitlab-rails/working[2024-11-03T19:51:12-05:00] INFO: directory[create /var/opt/gitlab/gitlab-rails/working] owner changed to 998
[2024-11-03T19:51:12-05:00] INFO: directory[create /var/opt/gitlab/gitlab-rails/working] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'git'
  * directory[create /var/opt/gitlab/gitlab-rails/tmp] action create[2024-11-03T19:51:12-05:00] INFO: directory[create /var/opt/gitlab/gitlab-rails/tmp] created directory /var/opt/gitlab/gitlab-rails/tmp

    - create new directory /var/opt/gitlab/gitlab-rails/tmp[2024-11-03T19:51:12-05:00] INFO: directory[create /var/opt/gitlab/gitlab-rails/tmp] owner changed to 998
[2024-11-03T19:51:12-05:00] INFO: directory[create /var/opt/gitlab/gitlab-rails/tmp] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'git'
  * directory[create /var/opt/gitlab/gitlab-rails/upgrade-status] action create[2024-11-03T19:51:12-05:00] INFO: directory[create /var/opt/gitlab/gitlab-rails/upgrade-status] created directory /var/opt/gitlab/gi
tlab-rails/upgrade-status

    - create new directory /var/opt/gitlab/gitlab-rails/upgrade-status[2024-11-03T19:51:12-05:00] INFO: directory[create /var/opt/gitlab/gitlab-rails/upgrade-status] owner changed to 998
[2024-11-03T19:51:12-05:00] INFO: directory[create /var/opt/gitlab/gitlab-rails/upgrade-status] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'git'
  * directory[/var/log/gitlab/gitlab-rails] action create[2024-11-03T19:51:12-05:00] INFO: directory[/var/log/gitlab/gitlab-rails] created directory /var/log/gitlab/gitlab-rails

    - create new directory /var/log/gitlab/gitlab-rails[2024-11-03T19:51:12-05:00] INFO: directory[/var/log/gitlab/gitlab-rails] owner changed to 998
[2024-11-03T19:51:12-05:00] INFO: directory[/var/log/gitlab/gitlab-rails] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'git'
  * storage_directory[/var/opt/gitlab/backups] action create
    * ruby_block[directory resource: /var/opt/gitlab/backups] action run[2024-11-03T19:51:12-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/backups] called

      - execute the ruby block directory resource: /var/opt/gitlab/backups
  
  * directory[/var/opt/gitlab/gitlab-rails] action create[2024-11-03T19:51:12-05:00] INFO: directory[/var/opt/gitlab/gitlab-rails] owner changed to 998

    - change owner from 'root' to 'git'
  * directory[/var/opt/gitlab/gitlab-ci] action create[2024-11-03T19:51:12-05:00] INFO: directory[/var/opt/gitlab/gitlab-ci] owner changed to 998

    - change owner from 'root' to 'git'
  * file[/var/opt/gitlab/gitlab-rails/etc/gitlab-registry.key] action create (skipped due to only_if)
  * template[/opt/gitlab/etc/gitlab-rails-rc] action create (up to date)
  * file[/opt/gitlab/embedded/service/gitlab-rails/.secret] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/secret] action delete (up to date)
  * templatesymlink[Create a database.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/database.yml] action create[2024-11-03T19:51:12-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/database.yml] created file /var/opt/gitlab/gitlab-rails/etc/
database.yml

      - create new file /var/opt/gitlab/gitlab-rails/etc/database.yml[2024-11-03T19:51:12-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/database.yml] updated file contents /var/opt/gitlab/gitlab-rails/e
tc/database.yml

      - update content in file /var/opt/gitlab/gitlab-rails/etc/database.yml from none to 9c495c
      - suppressed sensitive resource[2024-11-03T19:51:12-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/database.yml] owner changed to 0
[2024-11-03T19:51:12-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/database.yml] group changed to 997
[2024-11-03T19:51:12-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/database.yml] mode changed to 640

      - change mode from '' to '0640'
      - change owner from '' to 'root'
      - change group from '' to 'git'
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/database.yml to /var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)
  
  * templatesymlink[Create a clickhouse.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/click_house.yml] action create[2024-11-03T19:51:12-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/click_house.yml] created file /var/opt/gitlab/gitlab-rail
s/etc/click_house.yml

      - create new file /var/opt/gitlab/gitlab-rails/etc/click_house.yml[2024-11-03T19:51:12-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/click_house.yml] updated file contents /var/opt/gitlab/gitlab-r
ails/etc/click_house.yml

      - update content in file /var/opt/gitlab/gitlab-rails/etc/click_house.yml from none to 460e0a
      - suppressed sensitive resource[2024-11-03T19:51:12-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/click_house.yml] owner changed to 0
[2024-11-03T19:51:12-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/click_house.yml] group changed to 997
[2024-11-03T19:51:12-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/click_house.yml] mode changed to 640

      - change mode from '' to '0640'
      - change owner from '' to 'root'
      - change group from '' to 'git'
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/click_house.yml to /var/opt/gitlab/gitlab-rails/etc/click_house.yml] action create (up to date)
  
  * templatesymlink[Create a secrets.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create[2024-11-03T19:51:12-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/secrets.yml] created file /var/opt/gitlab/gitlab-rails/etc/se
crets.yml

      - create new file /var/opt/gitlab/gitlab-rails/etc/secrets.yml[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/secrets.yml] updated file contents /var/opt/gitlab/gitlab-rails/etc
/secrets.yml

      - update content in file /var/opt/gitlab/gitlab-rails/etc/secrets.yml from none to 4e5655
      - suppressed sensitive resource[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/secrets.yml] owner changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/secrets.yml] group changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/secrets.yml] mode changed to 644

      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml to /var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create (up to date)
  
  * templatesymlink[Create a resque.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/resque.yml] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/resque.yml] created file /var/opt/gitlab/gitlab-rails/etc/resq
ue.yml

      - create new file /var/opt/gitlab/gitlab-rails/etc/resque.yml[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/resque.yml] updated file contents /var/opt/gitlab/gitlab-rails/etc/r
esque.yml

      - update content in file /var/opt/gitlab/gitlab-rails/etc/resque.yml from none to 213e3b
      - suppressed sensitive resource[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/resque.yml] owner changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/resque.yml] group changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/resque.yml] mode changed to 644

      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/resque.yml to /var/opt/gitlab/gitlab-rails/etc/resque.yml] action create (up to date)
  
  * templatesymlink[Create an override redis.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/redis.yml] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/redis.yml] created file /var/opt/gitlab/gitlab-rails/etc/redis.
yml

      - create new file /var/opt/gitlab/gitlab-rails/etc/redis.yml[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/redis.yml] updated file contents /var/opt/gitlab/gitlab-rails/etc/red
is.yml

      - update content in file /var/opt/gitlab/gitlab-rails/etc/redis.yml from none to e3b0c4
      - suppressed sensitive resource[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/redis.yml] owner changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/redis.yml] group changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/redis.yml] mode changed to 644

      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/redis.yml to /var/opt/gitlab/gitlab-rails/etc/redis.yml] action create (up to date)
  
  * templatesymlink[Create a cable.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/cable.yml] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/cable.yml] created file /var/opt/gitlab/gitlab-rails/etc/cable.
yml

      - create new file /var/opt/gitlab/gitlab-rails/etc/cable.yml[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/cable.yml] updated file contents /var/opt/gitlab/gitlab-rails/etc/cab
le.yml

      - update content in file /var/opt/gitlab/gitlab-rails/etc/cable.yml from none to 50bd4b
      - suppressed sensitive resource[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/cable.yml] owner changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/cable.yml] group changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/cable.yml] mode changed to 644

      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/cable.yml to /var/opt/gitlab/gitlab-rails/etc/cable.yml] action create (up to date)
  
  * templatesymlink[Create a redis.cache.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.cache.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.cache.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.queues.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.queues.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.queues.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.shared_state.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.shared_state.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.shared_state.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.trace_chunks.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.trace_chunks.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.trace_chunks.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.rate_limiting.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.rate_limiting.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.rate_limiting.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.sessions.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.sessions.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.sessions.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.repository_cache.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.repository_cache.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.repository_cache.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.cluster_rate_limiting.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.cluster_rate_limiting.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.cluster_rate_limiting.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.workhorse.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.workhorse.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.workhorse.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a session_store.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/session_store.yml] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/session_store.yml] created file /var/opt/gitlab/gitlab-
rails/etc/session_store.yml

      - create new file /var/opt/gitlab/gitlab-rails/etc/session_store.yml[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/session_store.yml] updated file contents /var/opt/gitlab/gitl
ab-rails/etc/session_store.yml

      - update content in file /var/opt/gitlab/gitlab-rails/etc/session_store.yml from none to c362aa
      - suppressed sensitive resource[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/session_store.yml] owner changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/session_store.yml] group changed to 997
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/session_store.yml] mode changed to 640

      - change mode from '' to '0640'
      - change owner from '' to 'root'
      - change group from '' to 'git'
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/session_store.yml to /var/opt/gitlab/gitlab-rails/etc/session_store.yml] action create (up to date)
  
  * templatesymlink[Create a smtp_settings.rb and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/smtp_settings.rb] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/smtp_settings.rb] action delete (up to date)
     (up to date)
  * templatesymlink[Create a gitlab.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab.yml] created file /var/opt/gitlab/gitlab-rails/etc/gitl
ab.yml

      - create new file /var/opt/gitlab/gitlab-rails/etc/gitlab.yml[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab.yml] updated file contents /var/opt/gitlab/gitlab-rails/etc/g
itlab.yml

      - update content in file /var/opt/gitlab/gitlab-rails/etc/gitlab.yml from none to 744935
      - suppressed sensitive resource[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab.yml] owner changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab.yml] group changed to 997
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab.yml] mode changed to 640

      - change mode from '' to '0640'
      - change owner from '' to 'root'
      - change group from '' to 'git'
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml to /var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create (up to date)
  
  * templatesymlink[Create a gitlab_workhorse_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] created file /var/opt/gi
tlab/gitlab-rails/etc/gitlab_workhorse_secret

      - create new file /var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] updated file contents /var/opt
/gitlab/gitlab-rails/etc/gitlab_workhorse_secret

      - update content in file /var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret from none to 6ba5fe
      - suppressed sensitive resource[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] owner changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] group changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] mode changed to 644

      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_workhorse_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create (up to date)
  
  * templatesymlink[Create a gitlab_shell_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] created file /var/opt/gitlab/git
lab-rails/etc/gitlab_shell_secret

      - create new file /var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] updated file contents /var/opt/gitlab/
gitlab-rails/etc/gitlab_shell_secret

      - update content in file /var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret from none to c2d5a7
      - suppressed sensitive resource[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] owner changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] group changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] mode changed to 644

      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_shell_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create (up to date)
  
  * templatesymlink[Create a gitlab_incoming_email_secret and create a symlink to Rails root] action create (skipped due to only_if)
  * templatesymlink[Create a gitlab_service_desk_email_secret and create a symlink to Rails root] action create (skipped due to only_if)
  * templatesymlink[Create a gitlab_pages_secret and create a symlink to Rails root] action create[2024-11-03T19:51:13-05:00] WARN: only_if block for templatesymlink[Create a gitlab_pages_secret and create a sym
link to Rails root] returned a string, did you mean to run a command?

    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] created file /var/opt/gitlab/git
lab-rails/etc/gitlab_pages_secret

      - create new file /var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] updated file contents /var/opt/gitlab/
gitlab-rails/etc/gitlab_pages_secret

      - update content in file /var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret from none to a453f4
      - suppressed sensitive resource[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] owner changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] group changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] mode changed to 644

      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_pages_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create (up to date)
  
  * templatesymlink[Create a gitlab_kas_secret and create a symlink to Rails root] action create[2024-11-03T19:51:13-05:00] WARN: only_if block for templatesymlink[Create a gitlab_kas_secret and create a symlink
 to Rails root] returned a string, did you mean to run a command?

    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] created file /var/opt/gitlab/gitlab-
rails/etc/gitlab_kas_secret

      - create new file /var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] updated file contents /var/opt/gitlab/gitl
ab-rails/etc/gitlab_kas_secret

      - update content in file /var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret from none to ab00c9
      - suppressed sensitive resource[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] owner changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] group changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] mode changed to 644

      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_kas_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] action create (up to date)
  
  * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/relative_url.rb] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/relative_url.rb] action delete (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-rails/env] action create
    * directory[/opt/gitlab/etc/gitlab-rails/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/RAILS_ENV] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/BUNDLE_GEMFILE] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/PUMA_WORKER_MAX_MEMORY] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/SIDEKIQ_MEMORY_KILLER_MAX_RSS] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/ICU_DATA] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/PYTHONPATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/EXECJS_RUNTIME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/TZ] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/SSL_CERT_FILE] action create (up to date)
     (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/tmp] action create (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/public/uploads] action create (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/log] action create (up to date)
  * link[/var/log/gitlab/gitlab-rails/sidekiq.log] action delete (skipped due to only_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/db/structure.sql] action create[2024-11-03T19:51:13-05:00] INFO: file[/opt/gitlab/embedded/service/gitlab-rails/db/structure.sql] owner changed to 998

    - change owner from 'root' to 'git'
  * remote_file[/var/opt/gitlab/gitlab-rails/VERSION] action create[2024-11-03T19:51:13-05:00] INFO: remote_file[/var/opt/gitlab/gitlab-rails/VERSION] created file /var/opt/gitlab/gitlab-rails/VERSION

    - create new file /var/opt/gitlab/gitlab-rails/VERSION[2024-11-03T19:51:13-05:00] INFO: remote_file[/var/opt/gitlab/gitlab-rails/VERSION] updated file contents /var/opt/gitlab/gitlab-rails/VERSION

    - update content in file /var/opt/gitlab/gitlab-rails/VERSION from none to 9d7ccf
    --- /var/opt/gitlab/gitlab-rails/VERSION	2024-11-03 19:51:13.163340991 -0500
    +++ /var/opt/gitlab/gitlab-rails/.chef-VERSION20241103-3861563-unhe5i	2024-11-03 19:51:13.162341031 -0500
    @@ -1 +1,2 @@
    +17.5.1-ee
  * remote_file[/var/opt/gitlab/gitlab-rails/REVISION] action create[2024-11-03T19:51:13-05:00] INFO: remote_file[/var/opt/gitlab/gitlab-rails/REVISION] created file /var/opt/gitlab/gitlab-rails/REVISION

    - create new file /var/opt/gitlab/gitlab-rails/REVISION[2024-11-03T19:51:13-05:00] INFO: remote_file[/var/opt/gitlab/gitlab-rails/REVISION] updated file contents /var/opt/gitlab/gitlab-rails/REVISION

    - update content in file /var/opt/gitlab/gitlab-rails/REVISION from none to b599f1
    --- /var/opt/gitlab/gitlab-rails/REVISION	2024-11-03 19:51:13.166340870 -0500
    +++ /var/opt/gitlab/gitlab-rails/.chef-REVISION20241103-3861563-9ewmcl	2024-11-03 19:51:13.165340911 -0500
    @@ -1 +1,2 @@
    +e4e13234b2d
  * version_file[Create version file for Rails] action create
    * file[/var/opt/gitlab/gitlab-rails/RUBY_VERSION] action create[2024-11-03T19:51:13-05:00] INFO: file[/var/opt/gitlab/gitlab-rails/RUBY_VERSION] created file /var/opt/gitlab/gitlab-rails/RUBY_VERSION

      - create new file /var/opt/gitlab/gitlab-rails/RUBY_VERSION[2024-11-03T19:51:13-05:00] INFO: file[/var/opt/gitlab/gitlab-rails/RUBY_VERSION] updated file contents /var/opt/gitlab/gitlab-rails/RUBY_VERSION

      - update content in file /var/opt/gitlab/gitlab-rails/RUBY_VERSION from none to a57ad3
      --- /var/opt/gitlab/gitlab-rails/RUBY_VERSION	2024-11-03 19:51:13.205339306 -0500
      +++ /var/opt/gitlab/gitlab-rails/.chef-RUBY_VERSION20241103-3861563-7o0w2m	2024-11-03 19:51:13.205339306 -0500
      @@ -1 +1,2 @@
      +ruby 3.2.5 (2024-07-26 revision 31d0f1a2e7) [x86_64-linux]
  
  * execute[clear the gitlab-rails cache] action nothing (skipped due to action :nothing)
  * file[/var/opt/gitlab/gitlab-rails/config.ru] action delete (up to date)
Recipe: gitlab::selinux
  * bash[Set proper security context on ssh files for selinux] action nothing (skipped due to action :nothing)
Recipe: gitlab::add_trusted_certs
  * directory[/etc/gitlab/trusted-certs] action create[2024-11-03T19:51:13-05:00] INFO: directory[/etc/gitlab/trusted-certs] created directory /etc/gitlab/trusted-certs

    - create new directory /etc/gitlab/trusted-certs[2024-11-03T19:51:13-05:00] INFO: directory[/etc/gitlab/trusted-certs] mode changed to 755

    - change mode from '' to '0755'
  * directory[/opt/gitlab/embedded/ssl/certs] action create (up to date)
  * file[/opt/gitlab/embedded/ssl/certs/README] action create (up to date)
  * ruby_block[Move existing certs and link to /opt/gitlab/embedded/ssl/certs] action run

  * Moving existing certificates found in /opt/gitlab/embedded/ssl/certs

  * Symlinking existing certificates found in /etc/gitlab/trusted-certs
[2024-11-03T19:51:13-05:00] INFO: ruby_block[Move existing certs and link to /opt/gitlab/embedded/ssl/certs] called

    - execute the ruby block Move existing certs and link to /opt/gitlab/embedded/ssl/certs
Recipe: gitlab::default
  * service[create a temporary puma service] action nothing (skipped due to action :nothing)
  * service[create a temporary sidekiq service] action nothing (skipped due to action :nothing)
  * service[create a temporary mailroom service] action nothing (skipped due to action :nothing)
Recipe: package::runit_systemd
  * directory[/usr/lib/systemd/system] action create (up to date)
  * template[/usr/lib/systemd/system/gitlab-runsvdir.service] action create (up to date)
  * file[/etc/systemd/system/default.target.wants/gitlab-runsvdir.service] action delete (up to date)
  * file[/etc/systemd/system/basic.target.wants/gitlab-runsvdir.service] action delete (up to date)
  * execute[systemctl daemon-reload] action nothing (skipped due to action :nothing)
  * execute[systemctl enable gitlab-runsvdir] action nothing (skipped due to action :nothing)
  * execute[systemctl start gitlab-runsvdir] action nothing (skipped due to action :nothing)
Recipe: gitlab::gitlab-shell
  * storage_directory[/var/opt/gitlab/.ssh] action create
    * ruby_block[directory resource: /var/opt/gitlab/.ssh] action run[2024-11-03T19:51:13-05:00] INFO: ruby_block[directory resource: /var/opt/gitlab/.ssh] called

      - execute the ruby block directory resource: /var/opt/gitlab/.ssh
  
  * directory[/var/opt/gitlab/gitlab-shell] action create[2024-11-03T19:51:13-05:00] INFO: directory[/var/opt/gitlab/gitlab-shell] created directory /var/opt/gitlab/gitlab-shell

    - create new directory /var/opt/gitlab/gitlab-shell[2024-11-03T19:51:13-05:00] INFO: directory[/var/opt/gitlab/gitlab-shell] owner changed to 998
[2024-11-03T19:51:13-05:00] INFO: directory[/var/opt/gitlab/gitlab-shell] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'git'
  * directory[/var/log/gitlab/gitlab-shell] action create[2024-11-03T19:51:13-05:00] INFO: directory[/var/log/gitlab/gitlab-shell] created directory /var/log/gitlab/gitlab-shell

    - create new directory /var/log/gitlab/gitlab-shell[2024-11-03T19:51:13-05:00] INFO: directory[/var/log/gitlab/gitlab-shell] owner changed to 998
[2024-11-03T19:51:13-05:00] INFO: directory[/var/log/gitlab/gitlab-shell] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'git'
  * bash[generate gitlab-sshd host keys] action run (skipped due to only_if)
  * templatesymlink[Create a config.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-shell/config.yml] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-shell/config.yml] created file /var/opt/gitlab/gitlab-shell/config.yml

      - create new file /var/opt/gitlab/gitlab-shell/config.yml[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-shell/config.yml] updated file contents /var/opt/gitlab/gitlab-shell/config.yml

      - update content in file /var/opt/gitlab/gitlab-shell/config.yml from none to 79ee9e
      - suppressed sensitive resource[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-shell/config.yml] owner changed to 0
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-shell/config.yml] group changed to 997
[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/gitlab-shell/config.yml] mode changed to 640

      - change mode from '' to '0640'
      - change owner from '' to 'root'
      - change group from '' to 'git'
    * link[Link /opt/gitlab/embedded/service/gitlab-shell/config.yml to /var/opt/gitlab/gitlab-shell/config.yml] action create (up to date)
  
  * link[/opt/gitlab/embedded/service/gitlab-shell/.gitlab_shell_secret] action create (up to date)
  * file[/var/opt/gitlab/.ssh/authorized_keys] action create_if_missing[2024-11-03T19:51:13-05:00] INFO: file[/var/opt/gitlab/.ssh/authorized_keys] created file /var/opt/gitlab/.ssh/authorized_keys

    - create new file /var/opt/gitlab/.ssh/authorized_keys[2024-11-03T19:51:13-05:00] INFO: file[/var/opt/gitlab/.ssh/authorized_keys] owner changed to 998
[2024-11-03T19:51:13-05:00] INFO: file[/var/opt/gitlab/.ssh/authorized_keys] group changed to 997
[2024-11-03T19:51:13-05:00] INFO: file[/var/opt/gitlab/.ssh/authorized_keys] mode changed to 600

    - change mode from '' to '0600'
    - change owner from '' to 'git'
    - change group from '' to 'git'
  * env_dir[/opt/gitlab/etc/gitlab-sshd/env] action nothing (skipped due to action :nothing)
  * service[gitlab-sshd] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-sshd] action disable
    * ruby_block[disable gitlab-sshd] action run (skipped due to only_if)
     (up to date)
Recipe: package::sysctl
  * execute[reload all sysctl conf] action nothing (skipped due to action :nothing)
Recipe: logrotate::folders_and_configs
  * directory[/var/opt/gitlab/logrotate] action create[2024-11-03T19:51:13-05:00] INFO: directory[/var/opt/gitlab/logrotate] created directory /var/opt/gitlab/logrotate

    - create new directory /var/opt/gitlab/logrotate[2024-11-03T19:51:13-05:00] INFO: directory[/var/opt/gitlab/logrotate] mode changed to 700

    - change mode from '' to '0700'
  * directory[/var/opt/gitlab/logrotate/logrotate.d] action create[2024-11-03T19:51:13-05:00] INFO: directory[/var/opt/gitlab/logrotate/logrotate.d] created directory /var/opt/gitlab/logrotate/logrotate.d

    - create new directory /var/opt/gitlab/logrotate/logrotate.d[2024-11-03T19:51:13-05:00] INFO: directory[/var/opt/gitlab/logrotate/logrotate.d] mode changed to 700

    - change mode from '' to '0700'
  * directory[/var/log/gitlab/logrotate] action create[2024-11-03T19:51:13-05:00] INFO: directory[/var/log/gitlab/logrotate] created directory /var/log/gitlab/logrotate

    - create new directory /var/log/gitlab/logrotate[2024-11-03T19:51:13-05:00] INFO: directory[/var/log/gitlab/logrotate] owner changed to 0
[2024-11-03T19:51:13-05:00] INFO: directory[/var/log/gitlab/logrotate] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'root'
  * template[/var/opt/gitlab/logrotate/logrotate.conf] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.conf] created file /var/opt/gitlab/logrotate/logrotate.conf

    - create new file /var/opt/gitlab/logrotate/logrotate.conf[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.conf] updated file contents /var/opt/gitlab/logrotate/logrotate.conf

    - update content in file /var/opt/gitlab/logrotate/logrotate.conf from none to c1c320
    --- /var/opt/gitlab/logrotate/logrotate.conf	2024-11-03 19:51:13.500327470 -0500
    +++ /var/opt/gitlab/logrotate/.chef-logrotate20241103-3861563-30mr7s.conf	2024-11-03 19:51:13.500327470 -0500
    @@ -1,12 +1,24 @@
    +# Generated by 'gitlab-ctl reconfigure'.
    +# Modifications will be overwritten!
    +
    +include /var/opt/gitlab/logrotate/logrotate.d/nginx
    +include /var/opt/gitlab/logrotate/logrotate.d/puma
    +include /var/opt/gitlab/logrotate/logrotate.d/gitlab-rails
    +include /var/opt/gitlab/logrotate/logrotate.d/gitlab-shell
    +include /var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse
    +include /var/opt/gitlab/logrotate/logrotate.d/gitlab-pages
    +include /var/opt/gitlab/logrotate/logrotate.d/gitlab-kas
    +include /var/opt/gitlab/logrotate/logrotate.d/gitaly
    +include /var/opt/gitlab/logrotate/logrotate.d/mailroom[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.conf] mode changed to 644

    - change mode from '' to '0644'
  * template[/var/opt/gitlab/logrotate/logrotate.d/nginx] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/nginx] created file /var/opt/gitlab/logrotate/logrotate.d/n
ginx

    - create new file /var/opt/gitlab/logrotate/logrotate.d/nginx[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/nginx] updated file contents /var/opt/gitlab/logrotate/logrotate.
d/nginx

    - update content in file /var/opt/gitlab/logrotate/logrotate.d/nginx from none to e17e19
    --- /var/opt/gitlab/logrotate/logrotate.d/nginx	2024-11-03 19:51:13.506327229 -0500
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-nginx20241103-3861563-u1ovv8	2024-11-03 19:51:13.506327229 -0500
    @@ -1,17 +1,34 @@
    +# Generated by gitlab-ctl reconfigure
    +# Modifications will be overwritten!
    +
    +/var/log/gitlab/nginx/*.log {
    +  su root root
    +  daily
    +  
    +  
    +  rotate 30
    +  compress
    +  copytruncate
    +  missingok
    +  notifempty
    +  postrotate
    +    
    +  endscript
    +}
  * template[/var/opt/gitlab/logrotate/logrotate.d/puma] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/puma] created file /var/opt/gitlab/logrotate/logrotate.d/pum
a

    - create new file /var/opt/gitlab/logrotate/logrotate.d/puma[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/puma] updated file contents /var/opt/gitlab/logrotate/logrotate.d/
puma

    - update content in file /var/opt/gitlab/logrotate/logrotate.d/puma from none to 44ad27
    --- /var/opt/gitlab/logrotate/logrotate.d/puma	2024-11-03 19:51:13.513326948 -0500
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-puma20241103-3861563-lufhsh	2024-11-03 19:51:13.513326948 -0500
    @@ -1,17 +1,34 @@
    +# Generated by gitlab-ctl reconfigure
    +# Modifications will be overwritten!
    +
    +/var/log/gitlab/puma/*.log {
    +  su git git
    +  daily
    +  
    +  
    +  rotate 30
    +  compress
    +  copytruncate
    +  missingok
    +  notifempty
    +  postrotate
    +    
    +  endscript
    +}
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-rails] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-rails] created file /var/opt/gitlab/logrotate
/logrotate.d/gitlab-rails

    - create new file /var/opt/gitlab/logrotate/logrotate.d/gitlab-rails[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-rails] updated file contents /var/opt/gitlab/logrot
ate/logrotate.d/gitlab-rails

    - update content in file /var/opt/gitlab/logrotate/logrotate.d/gitlab-rails from none to 26254a
    --- /var/opt/gitlab/logrotate/logrotate.d/gitlab-rails	2024-11-03 19:51:13.520326668 -0500
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-gitlab-rails20241103-3861563-4eqpyc	2024-11-03 19:51:13.519326708 -0500
    @@ -1,17 +1,34 @@
    +# Generated by gitlab-ctl reconfigure
    +# Modifications will be overwritten!
    +
    +/var/log/gitlab/gitlab-rails/*.log {
    +  su git git
    +  daily
    +  
    +  
    +  rotate 30
    +  compress
    +  copytruncate
    +  missingok
    +  notifempty
    +  postrotate
    +    
    +  endscript
    +}
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-shell] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-shell] created file /var/opt/gitlab/logrotate
/logrotate.d/gitlab-shell

    - create new file /var/opt/gitlab/logrotate/logrotate.d/gitlab-shell[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-shell] updated file contents /var/opt/gitlab/logrot
ate/logrotate.d/gitlab-shell

    - update content in file /var/opt/gitlab/logrotate/logrotate.d/gitlab-shell from none to 859f56
    --- /var/opt/gitlab/logrotate/logrotate.d/gitlab-shell	2024-11-03 19:51:13.524326507 -0500
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-gitlab-shell20241103-3861563-mq2349	2024-11-03 19:51:13.524326507 -0500
    @@ -1,17 +1,34 @@
    +# Generated by gitlab-ctl reconfigure
    +# Modifications will be overwritten!
    +
    +/var/log/gitlab/gitlab-shell/*.log {
    +  su git git
    +  daily
    +  
    +  
    +  rotate 30
    +  compress
    +  copytruncate
    +  missingok
    +  notifempty
    +  postrotate
    +    
    +  endscript
    +}
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse] created file /var/opt/gitlab/l
ogrotate/logrotate.d/gitlab-workhorse

    - create new file /var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse] updated file contents /var/opt/gitla
b/logrotate/logrotate.d/gitlab-workhorse

    - update content in file /var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse from none to 3453f6
    --- /var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse	2024-11-03 19:51:13.528326346 -0500
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-gitlab-workhorse20241103-3861563-cyi961	2024-11-03 19:51:13.528326346 -0500
    @@ -1,17 +1,34 @@
    +# Generated by gitlab-ctl reconfigure
    +# Modifications will be overwritten!
    +
    +/var/log/gitlab/gitlab-workhorse/*.log {
    +  su git git
    +  daily
    +  
    +  
    +  rotate 30
    +  compress
    +  copytruncate
    +  missingok
    +  notifempty
    +  postrotate
    +    
    +  endscript
    +}
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-pages] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-pages] created file /var/opt/gitlab/logrotate
/logrotate.d/gitlab-pages

    - create new file /var/opt/gitlab/logrotate/logrotate.d/gitlab-pages[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-pages] updated file contents /var/opt/gitlab/logrot
ate/logrotate.d/gitlab-pages

    - update content in file /var/opt/gitlab/logrotate/logrotate.d/gitlab-pages from none to 3c118a
    --- /var/opt/gitlab/logrotate/logrotate.d/gitlab-pages	2024-11-03 19:51:13.532326186 -0500
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-gitlab-pages20241103-3861563-udz4bc	2024-11-03 19:51:13.532326186 -0500
    @@ -1,17 +1,34 @@
    +# Generated by gitlab-ctl reconfigure
    +# Modifications will be overwritten!
    +
    +/var/log/gitlab/gitlab-pages/*.log {
    +  su git git
    +  daily
    +  
    +  
    +  rotate 30
    +  compress
    +  copytruncate
    +  missingok
    +  notifempty
    +  postrotate
    +    
    +  endscript
    +}
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-kas] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-kas] created file /var/opt/gitlab/logrotate/log
rotate.d/gitlab-kas

    - create new file /var/opt/gitlab/logrotate/logrotate.d/gitlab-kas[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-kas] updated file contents /var/opt/gitlab/logrotate/
logrotate.d/gitlab-kas

    - update content in file /var/opt/gitlab/logrotate/logrotate.d/gitlab-kas from none to 0ba4f0
    --- /var/opt/gitlab/logrotate/logrotate.d/gitlab-kas	2024-11-03 19:51:13.536326026 -0500
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-gitlab-kas20241103-3861563-xjpl8s	2024-11-03 19:51:13.536326026 -0500
    @@ -1,17 +1,34 @@
    +# Generated by gitlab-ctl reconfigure
    +# Modifications will be overwritten!
    +
    +/var/log/gitlab/gitlab-kas/*.log {
    +  su git git
    +  daily
    +  
    +  
    +  rotate 30
    +  compress
    +  copytruncate
    +  missingok
    +  notifempty
    +  postrotate
    +    
    +  endscript
    +}
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitaly] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/gitaly] created file /var/opt/gitlab/logrotate/logrotate.d
/gitaly

    - create new file /var/opt/gitlab/logrotate/logrotate.d/gitaly[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/gitaly] updated file contents /var/opt/gitlab/logrotate/logrotat
e.d/gitaly

    - update content in file /var/opt/gitlab/logrotate/logrotate.d/gitaly from none to 02bda7
    --- /var/opt/gitlab/logrotate/logrotate.d/gitaly	2024-11-03 19:51:13.543325745 -0500
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-gitaly20241103-3861563-xax3c8	2024-11-03 19:51:13.542325785 -0500
    @@ -1,17 +1,34 @@
    +# Generated by gitlab-ctl reconfigure
    +# Modifications will be overwritten!
    +
    +/var/log/gitlab/gitaly/*.log {
    +  su git git
    +  daily
    +  
    +  
    +  rotate 30
    +  compress
    +  copytruncate
    +  missingok
    +  notifempty
    +  postrotate
    +    
    +  endscript
    +}
  * template[/var/opt/gitlab/logrotate/logrotate.d/mailroom] action create[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/mailroom] created file /var/opt/gitlab/logrotate/logrota
te.d/mailroom

    - create new file /var/opt/gitlab/logrotate/logrotate.d/mailroom[2024-11-03T19:51:13-05:00] INFO: template[/var/opt/gitlab/logrotate/logrotate.d/mailroom] updated file contents /var/opt/gitlab/logrotate/logr
otate.d/mailroom

    - update content in file /var/opt/gitlab/logrotate/logrotate.d/mailroom from none to 8fcea3
    --- /var/opt/gitlab/logrotate/logrotate.d/mailroom	2024-11-03 19:51:13.548325544 -0500
    +++ /var/opt/gitlab/logrotate/logrotate.d/.chef-mailroom20241103-3861563-r5ouo1	2024-11-03 19:51:13.548325544 -0500
    @@ -1,17 +1,34 @@
    +# Generated by gitlab-ctl reconfigure
    +# Modifications will be overwritten!
    +
    +/var/log/gitlab/mailroom/*.log {
    +  su git git
    +  daily
    +  
    +  
    +  rotate 30
    +  compress
    +  copytruncate
    +  missingok
    +  notifempty
    +  postrotate
    +    
    +  endscript
    +}
Recipe: logrotate::enable
  * service[logrotate] action nothing (skipped due to action :nothing)
  * runit_service[logrotate] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/logrotate] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/run] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/log] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/log/main] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_logrotate] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/logrotate/config] action create[2024-11-03T19:51:13-05:00] INFO: link[/var/log/gitlab/logrotate/config] created

      - create symlink at /var/log/gitlab/logrotate/config to /opt/gitlab/sv/logrotate/log/config
    * template[/opt/gitlab/sv/logrotate/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for logrotate service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/logrotate/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/logrotate/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/logrotate/control] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/control/t] action create (up to date)
    * link[/opt/gitlab/init/logrotate] action create (up to date)
    * file[/opt/gitlab/sv/logrotate/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/logrotate] action create (up to date)
    * ruby_block[wait for logrotate service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/logrotate/current] action touch (skipped due to only_if)
  
  * execute[/opt/gitlab/bin/gitlab-ctl start logrotate] action run
    [execute] ok: run: logrotate: (pid 3862102) 1s
[2024-11-03T19:51:15-05:00] INFO: execute[/opt/gitlab/bin/gitlab-ctl start logrotate] ran successfully
    - execute /opt/gitlab/bin/gitlab-ctl start logrotate
Recipe: redis::enable
  * redis_service[redis] action create[2024-11-03T19:51:15-05:00] WARN: redis does not have a log_group or default logdir mode defined. Setting to 0700.

    * account[user and group for redis] action create
      * group[user and group for redis] action create (up to date)
      * linux_user[user and group for redis] action create (up to date)
       (up to date)
    * group[Socket group] action create (up to date)
    * directory[/var/opt/gitlab/redis] action create[2024-11-03T19:51:15-05:00] INFO: directory[/var/opt/gitlab/redis] created directory /var/opt/gitlab/redis

      - create new directory /var/opt/gitlab/redis[2024-11-03T19:51:15-05:00] INFO: directory[/var/opt/gitlab/redis] owner changed to 997
[2024-11-03T19:51:15-05:00] INFO: directory[/var/opt/gitlab/redis] group changed to 997
[2024-11-03T19:51:15-05:00] INFO: directory[/var/opt/gitlab/redis] mode changed to 750

      - change mode from '' to '0750'
      - change owner from '' to 'gitlab-redis'
      - change group from '' to 'git'
    * directory[/var/log/gitlab/redis] action create[2024-11-03T19:51:15-05:00] INFO: directory[/var/log/gitlab/redis] created directory /var/log/gitlab/redis

      - create new directory /var/log/gitlab/redis[2024-11-03T19:51:15-05:00] INFO: directory[/var/log/gitlab/redis] owner changed to 997
[2024-11-03T19:51:15-05:00] INFO: directory[/var/log/gitlab/redis] mode changed to 700

      - change mode from '' to '0700'
      - change owner from '' to 'gitlab-redis'
    * template[/var/opt/gitlab/redis/redis.conf] action create[2024-11-03T19:51:15-05:00] INFO: template[/var/opt/gitlab/redis/redis.conf] created file /var/opt/gitlab/redis/redis.conf

      - create new file /var/opt/gitlab/redis/redis.conf[2024-11-03T19:51:15-05:00] INFO: template[/var/opt/gitlab/redis/redis.conf] updated file contents /var/opt/gitlab/redis/redis.conf

      - update content in file /var/opt/gitlab/redis/redis.conf from none to df6658
      - suppressed sensitive resource[2024-11-03T19:51:15-05:00] INFO: template[/var/opt/gitlab/redis/redis.conf] owner changed to 997
[2024-11-03T19:51:15-05:00] INFO: template[/var/opt/gitlab/redis/redis.conf] mode changed to 644

      - change mode from '' to '0644'
      - change owner from '' to 'gitlab-redis'
    * service[redis] action nothing (skipped due to action :nothing)
    * runit_service[redis] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/redis] action create (up to date)
      * template[/opt/gitlab/sv/redis/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis/log] action create (up to date)
      * directory[/opt/gitlab/sv/redis/log/main] action create (up to date)
      * template[/opt/gitlab/sv/redis/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_redis] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/redis/config] action create[2024-11-03T19:51:15-05:00] INFO: link[/var/log/gitlab/redis/config] created

        - create symlink at /var/log/gitlab/redis/config to /opt/gitlab/sv/redis/log/config
      * template[/opt/gitlab/sv/redis/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for redis service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/redis/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/redis/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/redis/control] action create (up to date)
      * link[/opt/gitlab/init/redis] action create (up to date)
      * file[/opt/gitlab/sv/redis/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/redis] action create (up to date)
      * ruby_block[wait for redis service socket] action run (skipped due to not_if)
      * file[/var/log/gitlab/redis/current] action touch (skipped due to only_if)
    
    * execute[/opt/gitlab/bin/gitlab-ctl start redis] action run
      [execute] ok: run: redis: (pid 3862114) 0s
[2024-11-03T19:51:16-05:00] INFO: execute[/opt/gitlab/bin/gitlab-ctl start redis] ran successfully
      - execute /opt/gitlab/bin/gitlab-ctl start redis
    * ruby_block[warn pending redis restart] action run (skipped due to only_if)
  
  * template[/opt/gitlab/etc/gitlab-redis-cli-rc] action create (up to date)
Recipe: gitaly::enable
  * directory[/var/opt/gitlab/gitaly] action create[2024-11-03T19:51:16-05:00] INFO: directory[/var/opt/gitlab/gitaly] created directory /var/opt/gitlab/gitaly

    - create new directory /var/opt/gitlab/gitaly[2024-11-03T19:51:16-05:00] INFO: directory[/var/opt/gitlab/gitaly] owner changed to 998
[2024-11-03T19:51:16-05:00] INFO: directory[/var/opt/gitlab/gitaly] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'git'
  * directory[/var/opt/gitlab/gitaly/run] action create[2024-11-03T19:51:16-05:00] INFO: directory[/var/opt/gitlab/gitaly/run] created directory /var/opt/gitlab/gitaly/run

    - create new directory /var/opt/gitlab/gitaly/run[2024-11-03T19:51:16-05:00] INFO: directory[/var/opt/gitlab/gitaly/run] owner changed to 998
[2024-11-03T19:51:16-05:00] INFO: directory[/var/opt/gitlab/gitaly/run] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'git'
  * directory[/var/log/gitlab/gitaly] action create[2024-11-03T19:51:16-05:00] INFO: directory[/var/log/gitlab/gitaly] created directory /var/log/gitlab/gitaly

    - create new directory /var/log/gitlab/gitaly[2024-11-03T19:51:16-05:00] INFO: directory[/var/log/gitlab/gitaly] owner changed to 998
[2024-11-03T19:51:16-05:00] INFO: directory[/var/log/gitlab/gitaly] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'git'
  * directory[/var/opt/gitlab/gitaly/internal_sockets] action delete (up to date)
  * env_dir[/opt/gitlab/etc/gitaly/env] action create
    * directory[/opt/gitlab/etc/gitaly/env] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/TZ] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/PYTHONPATH] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/ICU_DATA] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/GITALY_PID_FILE] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/WRAPPER_JSON_LOGGING] action create (up to date)
     (up to date)
  * file[/var/opt/gitlab/gitaly/.gitlab_secret] action create[2024-11-03T19:51:16-05:00] INFO: file[/var/opt/gitlab/gitaly/.gitlab_secret] created file /var/opt/gitlab/gitaly/.gitlab_secret

    - create new file /var/opt/gitlab/gitaly/.gitlab_secret[2024-11-03T19:51:16-05:00] INFO: file[/var/opt/gitlab/gitaly/.gitlab_secret] updated file contents /var/opt/gitlab/gitaly/.gitlab_secret

    - update content in file /var/opt/gitlab/gitaly/.gitlab_secret from none to 0d7634
    - suppressed sensitive resource[2024-11-03T19:51:16-05:00] INFO: file[/var/opt/gitlab/gitaly/.gitlab_secret] owner changed to 0
[2024-11-03T19:51:16-05:00] INFO: file[/var/opt/gitlab/gitaly/.gitlab_secret] group changed to 0
[2024-11-03T19:51:16-05:00] INFO: file[/var/opt/gitlab/gitaly/.gitlab_secret] mode changed to 644

    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
  * template[Create Gitaly config.toml] action create[2024-11-03T19:51:16-05:00] INFO: template[Create Gitaly config.toml] created file /var/opt/gitlab/gitaly/config.toml

    - create new file /var/opt/gitlab/gitaly/config.toml[2024-11-03T19:51:16-05:00] INFO: template[Create Gitaly config.toml] updated file contents /var/opt/gitlab/gitaly/config.toml

    - update content in file /var/opt/gitlab/gitaly/config.toml from none to f64239
    - suppressed sensitive resource[2024-11-03T19:51:16-05:00] INFO: template[Create Gitaly config.toml] owner changed to 0
[2024-11-03T19:51:16-05:00] INFO: template[Create Gitaly config.toml] group changed to 997
[2024-11-03T19:51:16-05:00] INFO: template[Create Gitaly config.toml] mode changed to 640

    - change mode from '' to '0640'
    - change owner from '' to 'root'
    - change group from '' to 'git'
  * service[gitaly] action nothing (skipped due to action :nothing)
  * runit_service[gitaly] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitaly] action create (up to date)
    * template[/opt/gitlab/sv/gitaly/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitaly/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitaly] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitaly/config] action create[2024-11-03T19:51:16-05:00] INFO: link[/var/log/gitlab/gitaly/config] created

      - create symlink at /var/log/gitlab/gitaly/config to /opt/gitlab/sv/gitaly/log/config
    * template[/opt/gitlab/sv/gitaly/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitaly service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitaly/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitaly/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitaly/control] action create (up to date)
    * link[/opt/gitlab/init/gitaly] action create (up to date)
    * file[/opt/gitlab/sv/gitaly/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitaly] action create (up to date)
    * ruby_block[wait for gitaly service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/gitaly/current] action touch (skipped due to only_if)
  
  * execute[/opt/gitlab/bin/gitlab-ctl start gitaly] action run
    [execute] ok: run: gitaly: (pid 3862131) 1s
[2024-11-03T19:51:18-05:00] INFO: execute[/opt/gitlab/bin/gitlab-ctl start gitaly] ran successfully
    - execute /opt/gitlab/bin/gitlab-ctl start gitaly
  * version_file[Create version file for Gitaly] action create
    * file[/var/opt/gitlab/gitaly/VERSION] action create[2024-11-03T19:51:20-05:00] INFO: file[/var/opt/gitlab/gitaly/VERSION] created file /var/opt/gitlab/gitaly/VERSION

      - create new file /var/opt/gitlab/gitaly/VERSION[2024-11-03T19:51:20-05:00] INFO: file[/var/opt/gitlab/gitaly/VERSION] updated file contents /var/opt/gitlab/gitaly/VERSION

      - update content in file /var/opt/gitlab/gitaly/VERSION from none to 015f12
      --- /var/opt/gitlab/gitaly/VERSION	2024-11-03 19:51:20.614043654 -0500
      +++ /var/opt/gitlab/gitaly/.chef-VERSION20241103-3861563-moy1ze	2024-11-03 19:51:20.613043694 -0500
      @@ -1 +1,2 @@
      +sha256:dd44328d8afd3a1558353482f0bb203e80656ebb5176a2276b93f6cf8f5ba1e7
  
  * consul_service[gitaly] action delete
    * file[/var/opt/gitlab/consul/config.d/gitaly-service.json] action delete (up to date)
     (up to date)
Recipe: postgresql::bin
  * ruby_block[check_postgresql_version] action run (skipped due to not_if)
  * ruby_block[check_postgresql_version_is_deprecated] action run (skipped due to not_if)
  * ruby_block[Link postgresql bin files to the correct version] action run[2024-11-03T19:51:20-05:00] INFO: ruby_block[Link postgresql bin files to the correct version] called

    - execute the ruby block Link postgresql bin files to the correct version
  * template[/opt/gitlab/etc/gitlab-psql-rc] action create (up to date)
Recipe: postgresql::user
  * account[Postgresql user and group] action create
    * group[Postgresql user and group] action create (up to date)
    * linux_user[Postgresql user and group] action create (up to date)
     (up to date)
  * directory[/var/opt/gitlab/postgresql] action create[2024-11-03T19:51:20-05:00] INFO: directory[/var/opt/gitlab/postgresql] created directory /var/opt/gitlab/postgresql

    - create new directory /var/opt/gitlab/postgresql[2024-11-03T19:51:20-05:00] INFO: directory[/var/opt/gitlab/postgresql] owner changed to 996
[2024-11-03T19:51:20-05:00] INFO: directory[/var/opt/gitlab/postgresql] group changed to 995
[2024-11-03T19:51:20-05:00] INFO: directory[/var/opt/gitlab/postgresql] mode changed to 2775

    - change mode from '' to '02775'
    - change owner from '' to 'gitlab-psql'
    - change group from '' to 'gitlab-psql'
  * file[/var/opt/gitlab/postgresql/.profile] action create[2024-11-03T19:51:20-05:00] INFO: file[/var/opt/gitlab/postgresql/.profile] created file /var/opt/gitlab/postgresql/.profile

    - create new file /var/opt/gitlab/postgresql/.profile[2024-11-03T19:51:20-05:00] INFO: file[/var/opt/gitlab/postgresql/.profile] updated file contents /var/opt/gitlab/postgresql/.profile

    - update content in file /var/opt/gitlab/postgresql/.profile from none to 3b0387
    --- /var/opt/gitlab/postgresql/.profile	2024-11-03 19:51:20.655042027 -0500
    +++ /var/opt/gitlab/postgresql/.chef-.profile20241103-3861563-3rqlfp.profile	2024-11-03 19:51:20.655042027 -0500
    @@ -1 +1,2 @@
    +PATH=/opt/gitlab/embedded/bin:/opt/gitlab/bin:$PATH[2024-11-03T19:51:20-05:00] INFO: file[/var/opt/gitlab/postgresql/.profile] owner changed to 996
[2024-11-03T19:51:20-05:00] INFO: file[/var/opt/gitlab/postgresql/.profile] mode changed to 600

    - change mode from '' to '0600'
    - change owner from '' to 'gitlab-psql'
Recipe: postgresql::sysctl
  * gitlab_sysctl[kernel.shmmax] action create
    * directory[create /etc/sysctl.d for kernel.shmmax] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmmax.conf kernel.shmmax] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmmax.conf] action create (up to date)
    * execute[load sysctl conf kernel.shmmax] action nothing (skipped due to action :nothing)
     (up to date)
  * gitlab_sysctl[kernel.shmall] action create
    * directory[create /etc/sysctl.d for kernel.shmall] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmall.conf kernel.shmall] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmall.conf] action create (up to date)
    * execute[load sysctl conf kernel.shmall] action nothing (skipped due to action :nothing)
     (up to date)
  * gitlab_sysctl[kernel.sem] action create
    * directory[create /etc/sysctl.d for kernel.sem] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.sem.conf kernel.sem] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.sem.conf] action create (up to date)
    * execute[load sysctl conf kernel.sem] action nothing (skipped due to action :nothing)
     (up to date)
Recipe: postgresql::enable
  * directory[/var/opt/gitlab/postgresql] action create (up to date)
  * directory[/var/opt/gitlab/postgresql/data] action create[2024-11-03T19:51:20-05:00] INFO: directory[/var/opt/gitlab/postgresql/data] created directory /var/opt/gitlab/postgresql/data

    - create new directory /var/opt/gitlab/postgresql/data[2024-11-03T19:51:20-05:00] INFO: directory[/var/opt/gitlab/postgresql/data] owner changed to 996
[2024-11-03T19:51:20-05:00] INFO: directory[/var/opt/gitlab/postgresql/data] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'gitlab-psql'
  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)
  * directory[/var/log/gitlab/postgresql] action create[2024-11-03T19:51:20-05:00] INFO: directory[/var/log/gitlab/postgresql] created directory /var/log/gitlab/postgresql

    - create new directory /var/log/gitlab/postgresql[2024-11-03T19:51:20-05:00] INFO: directory[/var/log/gitlab/postgresql] owner changed to 996
[2024-11-03T19:51:20-05:00] INFO: directory[/var/log/gitlab/postgresql] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'gitlab-psql'
  * execute[/opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8] action run
    [execute] The files belonging to this database system will be owned by user "gitlab-psql".
              This user must also own the server process.
              
              The database cluster will be initialized with locale "en_US.UTF-8".
              The default text search configuration will be set to "english".
              
              Data page checksums are disabled.
              
              fixing permissions on existing directory /var/opt/gitlab/postgresql/data ... ok
              creating subdirectories ... ok
              selecting dynamic shared memory implementation ... posix
              selecting default max_connections ... 100
              selecting default shared_buffers ... 128MB
              selecting default time zone ... America/New_York
              creating configuration files ... ok
              running bootstrap script ... ok
              performing post-bootstrap initialization ... ok
              syncing data to disk ... ok
              
              
              Success. You can now start the database server using:
              
                  /opt/gitlab/embedded/bin/pg_ctl -D /var/opt/gitlab/postgresql/data -l logfile start
              
              initdb: warning: enabling "trust" authentication for local connections
              You can change this by editing pg_hba.conf or using the option -A, or
              --auth-local and --auth-host, the next time you run initdb.
[2024-11-03T19:51:21-05:00] INFO: execute[/opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8] ran successfully
    - execute /opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8
  * file[/var/opt/gitlab/postgresql/data/server.crt] action create[2024-11-03T19:51:21-05:00] INFO: file[/var/opt/gitlab/postgresql/data/server.crt] created file /var/opt/gitlab/postgresql/data/server.crt

    - create new file /var/opt/gitlab/postgresql/data/server.crt[2024-11-03T19:51:21-05:00] INFO: file[/var/opt/gitlab/postgresql/data/server.crt] updated file contents /var/opt/gitlab/postgresql/data/server.crt

    - update content in file /var/opt/gitlab/postgresql/data/server.crt from none to 70e0a6
    - suppressed sensitive resource[2024-11-03T19:51:21-05:00] INFO: file[/var/opt/gitlab/postgresql/data/server.crt] owner changed to 996
[2024-11-03T19:51:21-05:00] INFO: file[/var/opt/gitlab/postgresql/data/server.crt] group changed to 995
[2024-11-03T19:51:21-05:00] INFO: file[/var/opt/gitlab/postgresql/data/server.crt] mode changed to 600

    - change mode from '' to '0600'
    - change owner from '' to 'gitlab-psql'
    - change group from '' to 'gitlab-psql'
  * file[/var/opt/gitlab/postgresql/data/server.key] action create[2024-11-03T19:51:21-05:00] INFO: file[/var/opt/gitlab/postgresql/data/server.key] created file /var/opt/gitlab/postgresql/data/server.key

    - create new file /var/opt/gitlab/postgresql/data/server.key[2024-11-03T19:51:21-05:00] INFO: file[/var/opt/gitlab/postgresql/data/server.key] updated file contents /var/opt/gitlab/postgresql/data/server.key

    - update content in file /var/opt/gitlab/postgresql/data/server.key from none to cd1fc8
    - suppressed sensitive resource[2024-11-03T19:51:21-05:00] INFO: file[/var/opt/gitlab/postgresql/data/server.key] owner changed to 996
[2024-11-03T19:51:21-05:00] INFO: file[/var/opt/gitlab/postgresql/data/server.key] group changed to 995
[2024-11-03T19:51:21-05:00] INFO: file[/var/opt/gitlab/postgresql/data/server.key] mode changed to 600

    - change mode from '' to '0600'
    - change owner from '' to 'gitlab-psql'
    - change group from '' to 'gitlab-psql'
  * postgresql_config[gitlab] action create
    * template[/var/opt/gitlab/postgresql/data/postgresql.conf] action create[2024-11-03T19:51:21-05:00] INFO: template[/var/opt/gitlab/postgresql/data/postgresql.conf] backed up to /opt/gitlab/embedded/cookbook
s/cache/backup/var/opt/gitlab/postgresql/data/postgresql.conf.chef-20241103195121.515125
[2024-11-03T19:51:21-05:00] INFO: template[/var/opt/gitlab/postgresql/data/postgresql.conf] updated file contents /var/opt/gitlab/postgresql/data/postgresql.conf

      - update content in file /var/opt/gitlab/postgresql/data/postgresql.conf from e9ab25 to 24bc1b
      --- /var/opt/gitlab/postgresql/data/postgresql.conf	2024-11-03 19:51:20.732038972 -0500
      +++ /var/opt/gitlab/postgresql/data/.chef-postgresql20241103-3861563-tbi0zf.conf	2024-11-03 19:51:21.492008848 -0500
      @@ -1,3 +1,7 @@
      +# This file is managed by gitlab-ctl. Manual changes will be
      +# erased! To change the contents below, edit /etc/gitlab/gitlab.rb
      +# and run `sudo gitlab-ctl reconfigure`.
      +
       # -----------------------------
       # PostgreSQL configuration file
       # -----------------------------
      @@ -16,19 +20,18 @@
       #
       # This file is read on server startup and when the server receives a SIGHUP
       # signal.  If you edit the file on a running system, you have to SIGHUP the
      -# server for the changes to take effect, run "pg_ctl reload", or execute
      -# "SELECT pg_reload_conf()".  Some parameters, which are marked below,
      -# require a server shutdown and restart to take effect.
      +# server for the changes to take effect, or use "pg_ctl reload".  Some
      +# parameters, which are marked below, require a server shutdown and restart to
      +# take effect.
       #
       # Any parameter can also be given as a command-line option to the server, e.g.,
       # "postgres -c log_connections=on".  Some parameters can be changed at run time
       # with the "SET" SQL command.
       #
      -# Memory units:  B  = bytes            Time units:  us  = microseconds
      -#                kB = kilobytes                     ms  = milliseconds
      +# Memory units:  kB = kilobytes        Time units:  ms  = milliseconds
       #                MB = megabytes                     s   = seconds
       #                GB = gigabytes                     min = minutes
      -#                TB = terabytes                     h   = hours
      +#                                                   h   = hours
       #                                                   d   = days
       
       
      @@ -39,16 +42,16 @@
       # The default values of these variables are driven from the -D command-line
       # option or PGDATA environment variable, represented here as ConfigDir.
       
      -#data_directory = 'ConfigDir'		# use data in another directory
      -					# (change requires restart)
      -#hba_file = 'ConfigDir/pg_hba.conf'	# host-based authentication file
      -					# (change requires restart)
      -#ident_file = 'ConfigDir/pg_ident.conf'	# ident configuration file
      -					# (change requires restart)
      +#data_directory = 'ConfigDir'   # use data in another directory
      +          # (change requires restart)
      +#hba_file = 'ConfigDir/pg_hba.conf' # host-based authentication file
      +          # (change requires restart)
      +#ident_file = 'ConfigDir/pg_ident.conf' # ident configuration file
      +          # (change requires restart)
       
       # If external_pid_file is not explicitly set, no extra PID file is written.
      -#external_pid_file = ''			# write an extra PID file
      -					# (change requires restart)
      +#external_pid_file = '(none)'   # write an extra PID file
      +          # (change requires restart)
       
       
       #------------------------------------------------------------------------------
      @@ -57,65 +60,57 @@
       
       # - Connection Settings -
       
      -#listen_addresses = 'localhost'		# what IP address(es) to listen on;
      -					# comma-separated list of addresses;
      -					# defaults to 'localhost'; use '*' for all
      -					# (change requires restart)
      -#port = 5432				# (change requires restart)
      -max_connections = 100			# (change requires restart)
      -#superuser_reserved_connections = 3	# (change requires restart)
      -#unix_socket_directories = '/tmp'	# comma-separated list of directories
      -					# (change requires restart)
      -#unix_socket_group = ''			# (change requires restart)
      -#unix_socket_permissions = 0777		# begin with 0 to use octal notation
      -					# (change requires restart)
      -#bonjour = off				# advertise server via Bonjour
      -					# (change requires restart)
      -#bonjour_name = ''			# defaults to the computer name
      -					# (change requires restart)
      +listen_addresses = ''    # what IP address(es) to listen on;
      +          # comma-separated list of addresses;
      +          # defaults to 'localhost', '*' = all
      +          # (change requires restart)
      +port = 5432        # (change requires restart)
      +max_connections = 400      # (change requires restart)
      +# Note:  Increasing max_connections costs ~400 bytes of shared memory per
      +# connection slot, plus lock space (see max_locks_per_transaction).
      +#superuser_reserved_connections = 3 # (change requires restart)
      +unix_socket_directories = '/var/opt/gitlab/postgresql'   # (change requires restart)
      +#unix_socket_group = ''     # (change requires restart)
      +#unix_socket_permissions = 0777   # begin with 0 to use octal notation
      +          # (change requires restart)
      +#bonjour = off        # advertise server via Bonjour
      +          # (change requires restart)
      +#bonjour_name = ''      # defaults to the computer name
      +          # (change requires restart)
       
      -# - TCP settings -
      -# see "man tcp" for details
      +# - Security and Authentication -
       
      -#tcp_keepalives_idle = 0		# TCP_KEEPIDLE, in seconds;
      -					# 0 selects the system default
      -#tcp_keepalives_interval = 0		# TCP_KEEPINTVL, in seconds;
      -					# 0 selects the system default
      -#tcp_keepalives_count = 0		# TCP_KEEPCNT;
      -					# 0 selects the system default
      -#tcp_user_timeout = 0			# TCP_USER_TIMEOUT, in milliseconds;
      -					# 0 selects the system default
      +#authentication_timeout = 1min    # 1s-600s
       
      -#client_connection_check_interval = 0	# time between checks for client
      -					# disconnection while running queries;
      -					# 0 for never
      +# change requires restart
      +ssl = on
       
      -# - Authentication -
      +# allowed SSL ciphers
      +ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL:!SSLv3:!TLSv1'
       
      -#authentication_timeout = 1min		# 1s-600s
      -#password_encryption = scram-sha-256	# scram-sha-256 or md5
      +ssl_cert_file = 'server.crt'
      +ssl_key_file = 'server.key'
      +ssl_ca_file = '/opt/gitlab/embedded/ssl/certs/cacert.pem'
      +
      +
      +#ssl_renegotiation_limit = 512MB  # amount of data between renegotiations
      +#password_encryption = on
       #db_user_namespace = off
       
      -# GSSAPI using Kerberos
      -#krb_server_keyfile = 'FILE:${sysconfdir}/krb5.keytab'
      +# Kerberos and GSSAPI
      +#krb_server_keyfile = ''
      +#krb_srvname = 'postgres'   # (Kerberos only)
       #krb_caseins_users = off
       
      -# - SSL -
      +# - TCP Keepalives -
      +# see "man 7 tcp" for details
       
      -#ssl = off
      -#ssl_ca_file = ''
      -#ssl_cert_file = 'server.crt'
      -#ssl_crl_file = ''
      -#ssl_crl_dir = ''
      -#ssl_key_file = 'server.key'
      -#ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL' # allowed SSL ciphers
      -#ssl_prefer_server_ciphers = on
      -#ssl_ecdh_curve = 'prime256v1'
      -#ssl_min_protocol_version = 'TLSv1.2'
      -#ssl_max_protocol_version = ''
      -#ssl_dh_params_file = ''
      -#ssl_passphrase_command = ''
      -#ssl_passphrase_command_supports_reload = off
      +#tcp_keepalives_idle = 0    # TCP_KEEPIDLE, in seconds;
      +          # 0 selects the system default
      +#tcp_keepalives_interval = 0    # TCP_KEEPINTVL, in seconds;
      +          # 0 selects the system default
      +#tcp_keepalives_count = 0   # TCP_KEEPCNT;
      +          # 0 selects the system default
       
       
       #------------------------------------------------------------------------------
      @@ -124,609 +119,290 @@
       
       # - Memory -
       
      -shared_buffers = 128MB			# min 128kB
      -					# (change requires restart)
      -#huge_pages = try			# on, off, or try
      -					# (change requires restart)
      -#huge_page_size = 0			# zero for system default
      -					# (change requires restart)
      -#temp_buffers = 8MB			# min 800kB
      -#max_prepared_transactions = 0		# zero disables the feature
      -					# (change requires restart)
      -# Caution: it is not advisable to set max_prepared_transactions nonzero unless
      -# you actively intend to use prepared transactions.
      -#work_mem = 4MB				# min 64kB
      -#hash_mem_multiplier = 1.0		# 1-1000.0 multiplier on hash table work_mem
      -#maintenance_work_mem = 64MB		# min 1MB
      -#autovacuum_work_mem = -1		# min 1MB, or -1 to use maintenance_work_mem
      -#logical_decoding_work_mem = 64MB	# min 64kB
      -#max_stack_depth = 2MB			# min 100kB
      -#shared_memory_type = mmap		# the default is the first option
      -					# supported by the operating system:
      -					#   mmap
      -					#   sysv
      -					#   windows
      -					# (change requires restart)
      -dynamic_shared_memory_type = posix	# the default is the first option
      -					# supported by the operating system:
      -					#   posix
      -					#   sysv
      -					#   windows
      -					#   mmap
      -					# (change requires restart)
      -#min_dynamic_shared_memory = 0MB	# (change requires restart)
      +shared_buffers = 3967MB # min 128kB
      +          # (change requires restart)
      +#temp_buffers = 8MB     # min 800kB
      +#max_prepared_transactions = 0    # zero disables the feature
      +          # (change requires restart)
      +# Note:  Increasing max_prepared_transactions costs ~600 bytes of shared memory
      +# per transaction slot, plus lock space (see max_locks_per_transaction).
      +# It is not advisable to set max_prepared_transactions nonzero unless you
      +# actively intend to use prepared transactions.
      +#max_stack_depth = 2MB      # min 100kB
       
      -# - Disk -
      +# - Kernel Resource Usage -
       
      -#temp_file_limit = -1			# limits per-process temp file space
      -					# in kilobytes, or -1 for no limit
      +#max_files_per_process = 1000   # min 25
      +          # (change requires restart)
      +shared_preload_libraries = ''    # (change requires restart)
       
      -# - Kernel Resources -
      -
      -#max_files_per_process = 1000		# min 64
      -					# (change requires restart)
      -
       # - Cost-Based Vacuum Delay -
       
      -#vacuum_cost_delay = 0			# 0-100 milliseconds (0 disables)
      -#vacuum_cost_page_hit = 1		# 0-10000 credits
      -#vacuum_cost_page_miss = 2		# 0-10000 credits
      -#vacuum_cost_page_dirty = 20		# 0-10000 credits
      -#vacuum_cost_limit = 200		# 1-10000 credits
      +#vacuum_cost_delay = 0ms    # 0-100 milliseconds
      +#vacuum_cost_page_hit = 1   # 0-10000 credits
      +#vacuum_cost_page_miss = 10   # 0-10000 credits
      +#vacuum_cost_page_dirty = 20    # 0-10000 credits
      +#vacuum_cost_limit = 200    # 1-10000 credits
       
       # - Background Writer -
       
      -#bgwriter_delay = 200ms			# 10-10000ms between rounds
      -#bgwriter_lru_maxpages = 100		# max buffers written/round, 0 disables
      -#bgwriter_lru_multiplier = 2.0		# 0-10.0 multiplier on buffers scanned/round
      -#bgwriter_flush_after = 512kB		# measured in pages, 0 disables
      +#bgwriter_delay = 200ms     # 10-10000ms between rounds
      +#bgwriter_lru_maxpages = 100    # 0-1000 max buffers written/round
      +#bgwriter_lru_multiplier = 2.0    # 0-10.0 multipler on buffers scanned/round
       
       # - Asynchronous Behavior -
       
      -#backend_flush_after = 0		# measured in pages, 0 disables
      -#effective_io_concurrency = 1		# 1-1000; 0 disables prefetching
      -#maintenance_io_concurrency = 10	# 1-1000; 0 disables prefetching
      -#max_worker_processes = 8		# (change requires restart)
      -#max_parallel_workers_per_gather = 2	# taken from max_parallel_workers
      -#max_parallel_maintenance_workers = 2	# taken from max_parallel_workers
      -#max_parallel_workers = 8		# maximum number of max_worker_processes that
      -					# can be used in parallel operations
      -#parallel_leader_participation = on
      -#old_snapshot_threshold = -1		# 1min-60d; -1 disables; 0 is immediate
      -					# (change requires restart)
      +#effective_io_concurrency = 1   # 1-1000. 0 disables prefetching
       
       
       #------------------------------------------------------------------------------
      -# WRITE-AHEAD LOG
      +# WRITE AHEAD LOG
       #------------------------------------------------------------------------------
       
       # - Settings -
       
      -#wal_level = replica			# minimal, replica, or logical
      -					# (change requires restart)
      -#fsync = on				# flush data to disk for crash safety
      -					# (turning this off can cause
      -					# unrecoverable data corruption)
      -#synchronous_commit = on		# synchronization level;
      -					# off, local, remote_write, remote_apply, or on
      -#wal_sync_method = fsync		# the default is the first option
      -					# supported by the operating system:
      -					#   open_datasync
      -					#   fdatasync (default on Linux and FreeBSD)
      -					#   fsync
      -					#   fsync_writethrough
      -					#   open_sync
      -#full_page_writes = on			# recover from partial page writes
      -#wal_log_hints = off			# also do full page writes of non-critical updates
      -					# (change requires restart)
      -#wal_compression = off			# enable compression of full-page writes
      -#wal_init_zero = on			# zero-fill new WAL files
      -#wal_recycle = on			# recycle WAL files
      -#wal_buffers = -1			# min 32kB, -1 sets based on shared_buffers
      -					# (change requires restart)
      -#wal_writer_delay = 200ms		# 1-10000 milliseconds
      -#wal_writer_flush_after = 1MB		# measured in pages, 0 disables
      -#wal_skip_threshold = 2MB
      +wal_level = minimal
      +wal_log_hints = off      # also do full page writes of non-critical updates
      +          # (change requires restart)
      +#fsync = on       # turns forced synchronization on or off
      +#wal_sync_method = fsync    # the default is the first option
      +          # supported by the operating system:
      +          #   open_datasync
      +          #   fdatasync (default on Linux)
      +          #   fsync
      +          #   fsync_writethrough
      +          #   open_sync
      +#full_page_writes = on      # recover from partial page writes
      +wal_buffers = -1 # -1     # min 32kB, -1 sets based on shared_buffers
      +          # (change requires restart)
      +#wal_writer_delay = 200ms   # 1-10000 milliseconds
       
      -#commit_delay = 0			# range 0-100000, in microseconds
      -#commit_siblings = 5			# range 1-1000
      +#commit_delay = 0     # range 0-100000, in microseconds
      +#commit_siblings = 5      # range 1-1000
       
      -# - Checkpoints -
      -
      -#checkpoint_timeout = 5min		# range 30s-1d
      -#checkpoint_completion_target = 0.9	# checkpoint target duration, 0.0 - 1.0
      -#checkpoint_flush_after = 256kB		# measured in pages, 0 disables
      -#checkpoint_warning = 30s		# 0 disables
      -max_wal_size = 1GB
       min_wal_size = 80MB
      +max_wal_size = 1GB
       
      -# - Archiving -
      +# The number of replication slots to reserve.
      +max_replication_slots = 0
       
      -#archive_mode = off		# enables archiving; off, on, or always
      -				# (change requires restart)
      -#archive_command = ''		# command to use to archive a logfile segment
      -				# placeholders: %p = path of file to archive
      -				#               %f = file name only
      -				# e.g. 'test ! -f /mnt/server/archivedir/%f && cp %p /mnt/server/archivedir/%f'
      -#archive_timeout = 0		# force a logfile segment switch after this
      -				# number of seconds; 0 disables
       
      -# - Archive Recovery -
      +# - Archiving -
       
      -# These are only used in recovery mode.
      +archive_mode = off   # allows archiving to be done
      +        # (change requires restart, also requires 'wal_level' of 'hot_standby' OR 'replica')
       
      -#restore_command = ''		# command to use to restore an archived logfile segment
      -				# placeholders: %p = path of file to restore
      -				#               %f = file name only
      -				# e.g. 'cp /mnt/server/archivedir/%f %p'
      -#archive_cleanup_command = ''	# command to execute at every restartpoint
      -#recovery_end_command = ''	# command to execute at completion of recovery
      -
      -# - Recovery Target -
      -
      -# Set these only when performing a targeted recovery.
      -
      -#recovery_target = ''		# 'immediate' to end recovery as soon as a
      -                                # consistent state is reached
      -				# (change requires restart)
      -#recovery_target_name = ''	# the named restore point to which recovery will proceed
      -				# (change requires restart)
      -#recovery_target_time = ''	# the time stamp up to which recovery will proceed
      -				# (change requires restart)
      -#recovery_target_xid = ''	# the transaction ID up to which recovery will proceed
      -				# (change requires restart)
      -#recovery_target_lsn = ''	# the WAL LSN up to which recovery will proceed
      -				# (change requires restart)
      -#recovery_target_inclusive = on # Specifies whether to stop:
      -				# just after the specified recovery target (on)
      -				# just before the recovery target (off)
      -				# (change requires restart)
      -#recovery_target_timeline = 'latest'	# 'current', 'latest', or timeline ID
      -				# (change requires restart)
      -#recovery_target_action = 'pause'	# 'pause', 'promote', 'shutdown'
      -				# (change requires restart)
      -
      -
       #------------------------------------------------------------------------------
       # REPLICATION
       #------------------------------------------------------------------------------
       
      -# - Sending Servers -
      +# - Master Server -
       
      -# Set these on the primary and on any standby that will send replication data.
      +# These settings are ignored on a standby server
       
      -#max_wal_senders = 10		# max number of walsender processes
      -				# (change requires restart)
      -#max_replication_slots = 10	# max number of replication slots
      -				# (change requires restart)
      -#wal_keep_size = 0		# in megabytes; 0 disables
      -#max_slot_wal_keep_size = -1	# in megabytes; -1 disables
      -#wal_sender_timeout = 60s	# in milliseconds; 0 disables
      -#track_commit_timestamp = off	# collect timestamp of transaction commit
      -				# (change requires restart)
      +max_wal_senders = 0
      +        # (change requires restart)
      +#wal_sender_delay = 1s    # walsender cycle time, 1-10000 milliseconds
      +#vacuum_defer_cleanup_age = 0 # number of xacts by which cleanup is delayed
      +#replication_timeout = 60s  # in milliseconds; 0 disables
      +#synchronous_standby_names = '' # standby servers that provide sync rep
      +        # comma-separated list of application_name
      +        # from standby(s); '*' = all
       
      -# - Primary Server -
      -
      -# These settings are ignored on a standby server.
      -
      -#synchronous_standby_names = ''	# standby servers that provide sync rep
      -				# method to choose sync standbys, number of sync standbys,
      -				# and comma-separated list of application_name
      -				# from standby(s); '*' = all
      -#vacuum_defer_cleanup_age = 0	# number of xacts by which cleanup is delayed
      -
       # - Standby Servers -
       
      -# These settings are ignored on a primary server.
      +# These settings are ignored on a master server
       
      -#primary_conninfo = ''			# connection string to sending server
      -#primary_slot_name = ''			# replication slot on sending server
      -#promote_trigger_file = ''		# file name whose presence ends recovery
      -#hot_standby = on			# "off" disallows queries during recovery
      -					# (change requires restart)
      -#max_standby_archive_delay = 30s	# max delay before canceling queries
      -					# when reading WAL from archive;
      -					# -1 allows indefinite delay
      -#max_standby_streaming_delay = 30s	# max delay before canceling queries
      -					# when reading streaming WAL;
      -					# -1 allows indefinite delay
      -#wal_receiver_create_temp_slot = off	# create temp slot if primary_slot_name
      -					# is not set
      -#wal_receiver_status_interval = 10s	# send replies at least this often
      -					# 0 disables
      -#hot_standby_feedback = off		# send info from standby to prevent
      -					# query conflicts
      -#wal_receiver_timeout = 60s		# time that receiver waits for
      -					# communication from primary
      -					# in milliseconds; 0 disables
      -#wal_retrieve_retry_interval = 5s	# time to wait before retrying to
      -					# retrieve WAL after a failed attempt
      -#recovery_min_apply_delay = 0		# minimum delay for applying changes during recovery
      +hot_standby = off
      +          # (change requires restart)
      +#wal_receiver_status_interval = 10s # send replies at least this often
      +          # 0 disables
       
      -# - Subscribers -
      -
      -# These settings are ignored on a publisher.
      -
      -#max_logical_replication_workers = 4	# taken from max_worker_processes
      -					# (change requires restart)
      -#max_sync_workers_per_subscription = 2	# taken from max_logical_replication_workers
      -
      -
       #------------------------------------------------------------------------------
       # QUERY TUNING
       #------------------------------------------------------------------------------
       
       # - Planner Method Configuration -
       
      -#enable_async_append = on
       #enable_bitmapscan = on
      -#enable_gathermerge = on
       #enable_hashagg = on
       #enable_hashjoin = on
      -#enable_incremental_sort = on
       #enable_indexscan = on
      -#enable_indexonlyscan = on
       #enable_material = on
      -#enable_memoize = on
       #enable_mergejoin = on
       #enable_nestloop = on
      -#enable_parallel_append = on
      -#enable_parallel_hash = on
      -#enable_partition_pruning = on
      -#enable_partitionwise_join = off
      -#enable_partitionwise_aggregate = off
       #enable_seqscan = on
       #enable_sort = on
       #enable_tidscan = on
       
       # - Planner Cost Constants -
       
      -#seq_page_cost = 1.0			# measured on an arbitrary scale
      -#random_page_cost = 4.0			# same scale as above
      -#cpu_tuple_cost = 0.01			# same scale as above
      -#cpu_index_tuple_cost = 0.005		# same scale as above
      -#cpu_operator_cost = 0.0025		# same scale as above
      -#parallel_setup_cost = 1000.0	# same scale as above
      -#parallel_tuple_cost = 0.1		# same scale as above
      -#min_parallel_table_scan_size = 8MB
      -#min_parallel_index_scan_size = 512kB
      -#effective_cache_size = 4GB
      +#cpu_tuple_cost = 0.01      # same scale as above
      +#cpu_index_tuple_cost = 0.005   # same scale as above
      +#cpu_operator_cost = 0.0025   # same scale as above
       
      -#jit_above_cost = 100000		# perform JIT compilation if available
      -					# and query more expensive than this;
      -					# -1 disables
      -#jit_inline_above_cost = 500000		# inline small functions if query is
      -					# more expensive than this; -1 disables
      -#jit_optimize_above_cost = 500000	# use expensive JIT optimizations if
      -					# query is more expensive than this;
      -					# -1 disables
      -
       # - Genetic Query Optimizer -
       
       #geqo = on
       #geqo_threshold = 12
      -#geqo_effort = 5			# range 1-10
      -#geqo_pool_size = 0			# selects default based on effort
      -#geqo_generations = 0			# selects default based on effort
      -#geqo_selection_bias = 2.0		# range 1.5-2.0
      -#geqo_seed = 0.0			# range 0.0-1.0
      +#geqo_effort = 5      # range 1-10
      +#geqo_pool_size = 0     # selects default based on effort
      +#geqo_generations = 0     # selects default based on effort
      +#geqo_selection_bias = 2.0    # range 1.5-2.0
      +#geqo_seed = 0.0      # range 0.0-1.0
       
       # - Other Planner Options -
       
      -#default_statistics_target = 100	# range 1-10000
      -#constraint_exclusion = partition	# on, off, or partition
      -#cursor_tuple_fraction = 0.1		# range 0.0-1.0
      +#default_statistics_target = 100  # range 1-10000
      +#constraint_exclusion = partition # on, off, or partition
      +#cursor_tuple_fraction = 0.1    # range 0.0-1.0
       #from_collapse_limit = 8
      -#jit = on				# allow JIT compilation
      -#join_collapse_limit = 8		# 1 disables collapsing of explicit
      -					# JOIN clauses
      -#plan_cache_mode = auto			# auto, force_generic_plan or
      -					# force_custom_plan
      +#join_collapse_limit = 8    # 1 disables collapsing of explicit
      +          # JOIN clauses
       
       
       #------------------------------------------------------------------------------
      -# REPORTING AND LOGGING
      +# ERROR REPORTING AND LOGGING
       #------------------------------------------------------------------------------
       
      -# - Where to Log -
       
      -#log_destination = 'stderr'		# Valid values are combinations of
      -					# stderr, csvlog, syslog, and eventlog,
      -					# depending on platform.  csvlog
      -					# requires logging_collector to be on.
      -
      -# This is used when logging to stderr:
      -#logging_collector = off		# Enable capturing of stderr and csvlog
      -					# into log files. Required to be on for
      -					# csvlogs.
      -					# (change requires restart)
      -
      -# These are only used if logging_collector is on:
      -#log_directory = 'log'			# directory where log files are written,
      -					# can be absolute or relative to PGDATA
      -#log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'	# log file name pattern,
      -					# can include strftime() escapes
      -#log_file_mode = 0600			# creation mode for log files,
      -					# begin with 0 to use octal notation
      -#log_rotation_age = 1d			# Automatic rotation of logfiles will
      -					# happen after that time.  0 disables.
      -#log_rotation_size = 10MB		# Automatic rotation of logfiles will
      -					# happen after that much log output.
      -					# 0 disables.
      -#log_truncate_on_rotation = off		# If on, an existing log file with the
      -					# same name as the new log file will be
      -					# truncated rather than appended to.
      -					# But such truncation only occurs on
      -					# time-driven rotation, not on restarts
      -					# or size-driven rotation.  Default is
      -					# off, meaning append to existing files
      -					# in all cases.
      -
       # These are relevant when logging to syslog:
       #syslog_facility = 'LOCAL0'
       #syslog_ident = 'postgres'
      -#syslog_sequence_numbers = on
      -#syslog_split_messages = on
       
      -# This is only relevant when logging to eventlog (Windows):
      -# (change requires restart)
      -#event_source = 'PostgreSQL'
      +#silent_mode = off      # Run server silently.
      +          # DO NOT USE without syslog or
      +          # logging_collector
      +          # (change requires restart)
       
      +
       # - When to Log -
       
      -#log_min_messages = warning		# values in order of decreasing detail:
      -					#   debug5
      -					#   debug4
      -					#   debug3
      -					#   debug2
      -					#   debug1
      -					#   info
      -					#   notice
      -					#   warning
      -					#   error
      -					#   log
      -					#   fatal
      -					#   panic
      +#client_min_messages = notice   # values in order of decreasing detail:
      +          #   debug5
      +          #   debug4
      +          #   debug3
      +          #   debug2
      +          #   debug1
      +          #   log
      +          #   notice
      +          #   warning
      +          #   error
       
      -#log_min_error_statement = error	# values in order of decreasing detail:
      -					#   debug5
      -					#   debug4
      -					#   debug3
      -					#   debug2
      -					#   debug1
      -					#   info
      -					#   notice
      -					#   warning
      -					#   error
      -					#   log
      -					#   fatal
      -					#   panic (effectively off)
      +#log_min_messages = warning   # values in order of decreasing detail:
      +          #   debug5
      +          #   debug4
      +          #   debug3
      +          #   debug2
      +          #   debug1
      +          #   info
      +          #   notice
      +          #   warning
      +          #   error
      +          #   log
      +          #   fatal
      +          #   panic
       
      -#log_min_duration_statement = -1	# -1 is disabled, 0 logs all statements
      -					# and their durations, > 0 logs only
      -					# statements running at least this number
      -					# of milliseconds
      +#log_min_error_statement = error  # values in order of decreasing detail:
      +          #   debug5
      +          #   debug4
      +          #   debug3
      +          #   debug2
      +          #   debug1
      +          #   info
      +          #   notice
      +          #   warning
      +          #   error
      +          #   log
      +          #   fatal
      +          #   panic (effectively off)
       
      -#log_min_duration_sample = -1		# -1 is disabled, 0 logs a sample of statements
      -					# and their durations, > 0 logs only a sample of
      -					# statements running at least this number
      -					# of milliseconds;
      -					# sample fraction is determined by log_statement_sample_rate
      -
      -#log_statement_sample_rate = 1.0	# fraction of logged statements exceeding
      -					# log_min_duration_sample to be logged;
      -					# 1.0 logs all such statements, 0.0 never logs
      -
      -
      -#log_transaction_sample_rate = 0.0	# fraction of transactions whose statements
      -					# are logged regardless of their duration; 1.0 logs all
      -					# statements from all transactions, 0.0 never logs
      -
       # - What to Log -
       
       #debug_print_parse = off
       #debug_print_rewritten = off
       #debug_print_plan = off
       #debug_pretty_print = on
      -#log_autovacuum_min_duration = -1	# log autovacuum activity;
      -					# -1 disables, 0 logs all actions and
      -					# their durations, > 0 logs only
      -					# actions running at least this number
      -					# of milliseconds.
      -#log_checkpoints = off
       #log_connections = off
       #log_disconnections = off
       #log_duration = off
      -#log_error_verbosity = default		# terse, default, or verbose messages
      +#log_error_verbosity = default    # terse, default, or verbose messages
       #log_hostname = off
      -#log_line_prefix = '%m [%p] '		# special values:
      -					#   %a = application name
      -					#   %u = user name
      -					#   %d = database name
      -					#   %r = remote host and port
      -					#   %h = remote host
      -					#   %b = backend type
      -					#   %p = process ID
      -					#   %P = process ID of parallel group leader
      -					#   %t = timestamp without milliseconds
      -					#   %m = timestamp with milliseconds
      -					#   %n = timestamp with milliseconds (as a Unix epoch)
      -					#   %Q = query ID (0 if none or not computed)
      -					#   %i = command tag
      -					#   %e = SQL state
      -					#   %c = session ID
      -					#   %l = session line number
      -					#   %s = session start timestamp
      -					#   %v = virtual transaction ID
      -					#   %x = transaction ID (0 if none)
      -					#   %q = stop here in non-session
      -					#        processes
      -					#   %% = '%'
      -					# e.g. '<%u%%%d> '
      -#log_lock_waits = off			# log lock waits >= deadlock_timeout
      -#log_recovery_conflict_waits = off	# log standby recovery conflict waits
      -					# >= deadlock_timeout
      -#log_parameter_max_length = -1		# when logging statements, limit logged
      -					# bind-parameter values to N bytes;
      -					# -1 means print in full, 0 disables
      -#log_parameter_max_length_on_error = 0	# when logging an error, limit logged
      -					# bind-parameter values to N bytes;
      -					# -1 means print in full, 0 disables
      -#log_statement = 'none'			# none, ddl, mod, all
      -#log_replication_commands = off
      -#log_temp_files = -1			# log temporary files equal or larger
      -					# than the specified size in kilobytes;
      -					# -1 disables, 0 logs all temp files
      -log_timezone = 'America/New_York'
      +#log_lock_waits = off     # log lock waits >= deadlock_timeout
      +#log_statement = 'none'     # none, ddl, mod, all
      +#log_timezone = '(defaults to server environment setting)'
       
       
       #------------------------------------------------------------------------------
      -# PROCESS TITLE
      +# RUNTIME STATISTICS
       #------------------------------------------------------------------------------
       
      -#cluster_name = ''			# added to process titles if nonempty
      -					# (change requires restart)
      -#update_process_title = on
      +# - Query/Index Statistics Collector -
       
      -
      -#------------------------------------------------------------------------------
      -# STATISTICS
      -#------------------------------------------------------------------------------
      -
      -# - Query and Index Statistics Collector -
      -
       #track_activities = on
      -#track_activity_query_size = 1024	# (change requires restart)
       #track_counts = on
      -#track_io_timing = off
      -#track_wal_io_timing = off
      -#track_functions = none			# none, pl, all
      +#track_functions = none     # none, pl, all
      +track_activity_query_size = 1024 # (change requires restart)
      +#update_process_title = on
       #stats_temp_directory = 'pg_stat_tmp'
       
       
      -# - Monitoring -
      +# - Statistics Monitoring -
       
      -#compute_query_id = auto
      -#log_statement_stats = off
       #log_parser_stats = off
       #log_planner_stats = off
       #log_executor_stats = off
      +#log_statement_stats = off
       
       
       #------------------------------------------------------------------------------
      -# AUTOVACUUM
      +# AUTOVACUUM PARAMETERS
       #------------------------------------------------------------------------------
       
      -#autovacuum = on			# Enable autovacuum subprocess?  'on'
      -					# requires track_counts to also be on.
      -#autovacuum_max_workers = 3		# max number of autovacuum subprocesses
      -					# (change requires restart)
      -#autovacuum_naptime = 1min		# time between autovacuum runs
      -#autovacuum_vacuum_threshold = 50	# min number of row updates before
      -					# vacuum
      -#autovacuum_vacuum_insert_threshold = 1000	# min number of row inserts
      -					# before vacuum; -1 disables insert
      -					# vacuums
      -#autovacuum_analyze_threshold = 50	# min number of row updates before
      -					# analyze
      -#autovacuum_vacuum_scale_factor = 0.2	# fraction of table size before vacuum
      -#autovacuum_vacuum_insert_scale_factor = 0.2	# fraction of inserts over table
      -					# size before insert vacuum
      -#autovacuum_analyze_scale_factor = 0.1	# fraction of table size before analyze
      -#autovacuum_freeze_max_age = 200000000	# maximum XID age before forced vacuum
      -					# (change requires restart)
      -#autovacuum_multixact_freeze_max_age = 400000000	# maximum multixact age
      -					# before forced vacuum
      -					# (change requires restart)
      -#autovacuum_vacuum_cost_delay = 2ms	# default vacuum cost delay for
      -					# autovacuum, in milliseconds;
      -					# -1 means use vacuum_cost_delay
      -#autovacuum_vacuum_cost_limit = -1	# default vacuum cost limit for
      -					# autovacuum, -1 means use
      -					# vacuum_cost_limit
      -
      -
      +autovacuum_max_workers = 3 # max number of autovacuum subprocesses
      +          # (change requires restart)
      +autovacuum_freeze_max_age = 200000000  # maximum XID age before forced vacuum
      +          # (change requires restart)
       #------------------------------------------------------------------------------
       # CLIENT CONNECTION DEFAULTS
       #------------------------------------------------------------------------------
       
       # - Statement Behavior -
       
      -#client_min_messages = notice		# values in order of decreasing detail:
      -					#   debug5
      -					#   debug4
      -					#   debug3
      -					#   debug2
      -					#   debug1
      -					#   log
      -					#   notice
      -					#   warning
      -					#   error
      -#search_path = '"$user", public'	# schema names
      -#row_security = on
      -#default_table_access_method = 'heap'
      -#default_tablespace = ''		# a tablespace name, '' uses the default
      -#default_toast_compression = 'pglz'	# 'pglz' or 'lz4'
      -#temp_tablespaces = ''			# a list of tablespace names, '' uses
      -					# only default tablespace
      +#search_path = '"$user",public'   # schema names
      +#default_tablespace = ''    # a tablespace name, '' uses the default
      +#temp_tablespaces = ''      # a list of tablespace names, '' uses
      +          # only default tablespace
       #check_function_bodies = on
       #default_transaction_isolation = 'read committed'
       #default_transaction_read_only = off
       #default_transaction_deferrable = off
       #session_replication_role = 'origin'
      -#statement_timeout = 0			# in milliseconds, 0 is disabled
      -#lock_timeout = 0			# in milliseconds, 0 is disabled
      -#idle_in_transaction_session_timeout = 0	# in milliseconds, 0 is disabled
      -#idle_session_timeout = 0		# in milliseconds, 0 is disabled
      -#vacuum_freeze_table_age = 150000000
       #vacuum_freeze_min_age = 50000000
      -#vacuum_failsafe_age = 1600000000
      -#vacuum_multixact_freeze_table_age = 150000000
      -#vacuum_multixact_freeze_min_age = 5000000
      -#vacuum_multixact_failsafe_age = 1600000000
      -#bytea_output = 'hex'			# hex, escape
      +#vacuum_freeze_table_age = 150000000
      +#bytea_output = 'hex'     # hex, escape
       #xmlbinary = 'base64'
       #xmloption = 'content'
      -#gin_pending_list_limit = 4MB
       
       # - Locale and Formatting -
       
      -datestyle = 'iso, mdy'
       #intervalstyle = 'postgres'
      -timezone = 'America/New_York'
      +#timezone = '(defaults to server environment setting)'
       #timezone_abbreviations = 'Default'     # Select the set of available time zone
      -					# abbreviations.  Currently, there are
      -					#   Default
      -					#   Australia (historical usage)
      -					#   India
      -					# You can create your own file in
      -					# share/timezonesets/.
      -#extra_float_digits = 1			# min -15, max 3; any value >0 actually
      -					# selects precise output mode
      -#client_encoding = sql_ascii		# actually, defaults to database
      -					# encoding
      +          # abbreviations.  Currently, there are
      +          #   Default
      +          #   Australia
      +          #   India
      +          # You can create your own file in
      +          # share/timezonesets/.
      +#extra_float_digits = 0     # min -15, max 3
      +#client_encoding = sql_ascii    # actually, defaults to database
      +          # encoding
       
      -# These settings are initialized by initdb, but they can be changed.
      -lc_messages = 'en_US.UTF-8'			# locale for system error message
      -					# strings
      -lc_monetary = 'en_US.UTF-8'			# locale for monetary formatting
      -lc_numeric = 'en_US.UTF-8'			# locale for number formatting
      -lc_time = 'en_US.UTF-8'				# locale for time formatting
      -
      -# default configuration for text search
      -default_text_search_config = 'pg_catalog.english'
      -
      -# - Shared Library Preloading -
      -
      -#local_preload_libraries = ''
      -#session_preload_libraries = ''
      -#shared_preload_libraries = ''	# (change requires restart)
      -#jit_provider = 'llvmjit'		# JIT library to use
      -
       # - Other Defaults -
       
       #dynamic_library_path = '$libdir'
      -#gin_fuzzy_search_limit = 0
      +#local_preload_libraries = ''
       
       
       #------------------------------------------------------------------------------
      @@ -734,27 +410,27 @@
       #------------------------------------------------------------------------------
       
       #deadlock_timeout = 1s
      -#max_locks_per_transaction = 64		# min 10
      -					# (change requires restart)
      -#max_pred_locks_per_transaction = 64	# min 10
      -					# (change requires restart)
      -#max_pred_locks_per_relation = -2	# negative values mean
      -					# (max_pred_locks_per_transaction
      -					#  / -max_pred_locks_per_relation) - 1
      -#max_pred_locks_per_page = 2            # min 0
      +max_locks_per_transaction = 128   # min 10
      +          # (change requires restart)
      +# Note:  Each lock table slot uses ~270 bytes of shared memory, and there are
      +# max_locks_per_transaction * (max_connections + max_prepared_transactions)
      +# lock table slots.
      +#max_pred_locks_per_transaction = 64  # min 10
      +          # (change requires restart)
       
      -
       #------------------------------------------------------------------------------
      -# VERSION AND PLATFORM COMPATIBILITY
      +# VERSION/PLATFORM COMPATIBILITY
       #------------------------------------------------------------------------------
       
       # - Previous PostgreSQL Versions -
       
       #array_nulls = on
      -#backslash_quote = safe_encoding	# on, off, or safe_encoding
      +#backslash_quote = safe_encoding  # on, off, or safe_encoding
      +#default_with_oids = off
       #escape_string_warning = on
       #lo_compat_privileges = off
       #quote_all_identifiers = off
      +#sql_inheritance = on
       #standard_conforming_strings = on
       #synchronize_seqscans = on
       
      @@ -767,31 +443,15 @@
       # ERROR HANDLING
       #------------------------------------------------------------------------------
       
      -#exit_on_error = off			# terminate session on any error?
      -#restart_after_crash = on		# reinitialize after backend crash?
      -#data_sync_retry = off			# retry or panic on failure to fsync
      -					# data?
      -					# (change requires restart)
      -#recovery_init_sync_method = fsync	# fsync, syncfs (Linux 5.8+)
      +#exit_on_error = off        # terminate session on any error?
      +#restart_after_crash = on     # reinitialize after backend crash?
       
       
       #------------------------------------------------------------------------------
      -# CONFIG FILE INCLUDES
      -#------------------------------------------------------------------------------
      -
      -# These options allow settings to be loaded from files other than the
      -# default postgresql.conf.  Note that these are directives, not variable
      -# assignments, so they can usefully be given more than once.
      -
      -#include_dir = '...'			# include files ending in '.conf' from
      -					# a directory, e.g., 'conf.d'
      -#include_if_exists = '...'		# include file only if it exists
      -#include = '...'			# include file
      -
      -
      -#------------------------------------------------------------------------------
       # CUSTOMIZED OPTIONS
       #------------------------------------------------------------------------------
       
      -# Add settings for extensions here
      +#custom_variable_classes = ''   # list of custom variable class names
      +
      +include 'runtime.conf'[2024-11-03T19:51:21-05:00] INFO: template[/var/opt/gitlab/postgresql/data/postgresql.conf] mode changed to 644

      - change mode from '0600' to '0644'
    * template[/var/opt/gitlab/postgresql/data/runtime.conf] action create[2024-11-03T19:51:21-05:00] INFO: template[/var/opt/gitlab/postgresql/data/runtime.conf] created file /var/opt/gitlab/postgresql/data/run
time.conf

      - create new file /var/opt/gitlab/postgresql/data/runtime.conf[2024-11-03T19:51:21-05:00] INFO: template[/var/opt/gitlab/postgresql/data/runtime.conf] updated file contents /var/opt/gitlab/postgresql/data/
runtime.conf

      - update content in file /var/opt/gitlab/postgresql/data/runtime.conf from none to cdf71c
      --- /var/opt/gitlab/postgresql/data/runtime.conf	2024-11-03 19:51:21.571005719 -0500
      +++ /var/opt/gitlab/postgresql/data/.chef-runtime20241103-3861563-1ywf0d.conf	2024-11-03 19:51:21.571005719 -0500
      @@ -1,138 +1,276 @@
      +# This file is managed by gitlab-ctl. Manual changes will be
      +# erased! To change the contents below, edit /etc/gitlab/gitlab.rb
      +# and run `sudo gitlab-ctl reconfigure`.
      +
      +# Changing variables in this file should only require a reload of PostgreSQL
      +# As the gitlab-psql user, run:
      +# /opt/gitlab/embedded/bin/pg_ctl reload -D /var/opt/gitlab/postgresql/data
      +work_mem = 16MB				# min 64kB
      +maintenance_work_mem = 16MB # 16MB    # min 1MB
      +synchronous_commit = on # synchronization level; on, off, or local
      +synchronous_standby_names = ''
      +
      +# - Checkpoints -
      +min_wal_size = 80MB
      +max_wal_size = 1GB
      +
      +checkpoint_timeout = 5min		# range 30s-1h, default 5min
      +checkpoint_completion_target = 0.9	# checkpoint target duration, 0.0 - 1.0, default 0.5
      +checkpoint_warning = 30s		# 0 disables, default 30s
      +
      +# - Logging -
      +log_directory = '/var/log/gitlab/postgresql'
      +
      +# - Archiving -
      +archive_command = ''   # command to use to archive a logfile segment
      +archive_timeout = 0    # force a logfile segment switch after this
      +        # number of seconds; 0 disables
      +
      +# - Replication
      +wal_keep_size = 160
      +
      +max_standby_archive_delay = 30s # max delay before canceling queries
      +          # when reading WAL from archive;
      +          # -1 allows indefinite delay
      +max_standby_streaming_delay = 30s # max delay before canceling queries
      +          # when reading streaming WAL;
      +          # -1 allows indefinite delay
      +
      +hot_standby_feedback = off   # send info from standby to prevent
      +          # query conflicts
      +
      +# - Planner Cost Constants -
      +#seq_page_cost = 1.0      # measured on an arbitrary scale
      +random_page_cost = 2.0     # same scale as above
      +
      +effective_cache_size = 7935MB # Default 128MB
      +
      +log_min_duration_statement = 1000  # -1 is disabled, 0 logs all statements
      +          # and their durations, > 0 logs only
      +          # statements running at least this number
      +          # of milliseconds
      +
      +log_checkpoints = off
      +
      +log_connections = off
      +
      +log_disconnections = off
      +
      +log_line_prefix = '' # default '', special values:
      +          #   %a = application name
      +          #   %u = user name
      +          #   %d = database name
      +          #   %r = remote host and port
      +          #   %h = remote host
      +          #   %p = process ID
      +          #   %t = timestamp without milliseconds
      +          #   %m = timestamp with milliseconds
      +          #   %i = command tag
      +          #   %e = SQL state
      +          #   %c = session ID
      +          #   %l = session line number
      +          #   %s = session start timestamp
      +          #   %v = virtual transaction ID
      +          #   %x = transaction ID (0 if none)
      +          #   %q = stop here in non-session
      +          #        processes
      +          #   %% = '%'
      +
      +log_temp_files = -1      # log temporary files equal or larger
      +          # than the specified size in kilobytes;
      +          # -1 disables, 0 logs all temp files
      +
      +
      +# - Autovacuum parameters -
      +autovacuum = on # Enable autovacuum subprocess?  'on'
      +          # requires track_counts to also be on.
      +
      +log_autovacuum_min_duration = -1 # -1 disables, 0 logs all actions and
      +          # their durations, > 0 logs only
      +          # actions running at least this number
      +          # of milliseconds.
      +
      +autovacuum_naptime = 1min # time between autovacuum runs
      +autovacuum_vacuum_threshold = 50 # min number of row updates before
      +          # vacuum
      +autovacuum_analyze_threshold = 50 # min number of row updates before
      +          # analyze
      +autovacuum_vacuum_scale_factor = 0.02 # fraction of table size before vacuum
      +autovacuum_analyze_scale_factor = 0.01 # fraction of table size before analyze
      +autovacuum_vacuum_cost_delay = 20ms # default vacuum cost delay for
      +          # autovacuum, in milliseconds;
      +          # -1 means use vacuum_cost_delay
      +autovacuum_vacuum_cost_limit = -1 # default vacuum cost limit for
      +          # autovacuum, -1 means use
      +          # vacuum_cost_limit
      +
      +# Parameters for gathering statistics
      +default_statistics_target = 1000
      +
      +# - Client connection timeouts
      +statement_timeout = 60000
      +
      +idle_in_transaction_session_timeout = 60000
      +
      +# IO settings
      +effective_io_concurrency = 1
      +track_io_timing = 'off'
      +
      +# Parallel worker settings
      +max_worker_processes = 8
      +max_parallel_workers_per_gather = 0
      +
      +# Deadlock handling and logging
      +deadlock_timeout = '5s'
      +log_lock_waits = 1
      +
      +# - Locale and Formatting -
      +datestyle = 'iso, mdy'
      +
      +# These settings are initialized by initdb, but they can be changed.
      +lc_messages = 'C'     # locale for system error message
      +          # strings
      +lc_monetary = 'C'     # locale for monetary formatting
      +lc_numeric = 'C'      # locale for number formatting
      +lc_time = 'C'       # locale for time formatting
      +
      +# default configuration for text search
      +default_text_search_config = 'pg_catalog.english'[2024-11-03T19:51:21-05:00] INFO: template[/var/opt/gitlab/postgresql/data/runtime.conf] owner changed to 996
[2024-11-03T19:51:21-05:00] INFO: template[/var/opt/gitlab/postgresql/data/runtime.conf] mode changed to 644

      - change mode from '' to '0644'
      - change owner from '' to 'gitlab-psql'
    * template[/var/opt/gitlab/postgresql/data/pg_hba.conf] action create[2024-11-03T19:51:21-05:00] INFO: template[/var/opt/gitlab/postgresql/data/pg_hba.conf] backed up to /opt/gitlab/embedded/cookbooks/cache/
backup/var/opt/gitlab/postgresql/data/pg_hba.conf.chef-20241103195121.588272
[2024-11-03T19:51:21-05:00] INFO: template[/var/opt/gitlab/postgresql/data/pg_hba.conf] updated file contents /var/opt/gitlab/postgresql/data/pg_hba.conf

      - update content in file /var/opt/gitlab/postgresql/data/pg_hba.conf from bc4830 to 40e348
      --- /var/opt/gitlab/postgresql/data/pg_hba.conf	2024-11-03 19:51:20.732038972 -0500
      +++ /var/opt/gitlab/postgresql/data/.chef-pg_hba20241103-3861563-zytzvo.conf	2024-11-03 19:51:21.585005164 -0500
      @@ -1,99 +1,74 @@
      +# This file is managed by gitlab-ctl. Manual changes will be
      +# erased! To change the contents below, edit /etc/gitlab/gitlab.rb
      +# and run `sudo gitlab-ctl reconfigure`.
      +
       # PostgreSQL Client Authentication Configuration File
       # ===================================================
       #
      -# Refer to the "Client Authentication" section in the PostgreSQL
      -# documentation for a complete description of this file.  A short
      -# synopsis follows.
      +# Refer to the "Client Authentication" section in the
      +# PostgreSQL documentation for a complete description
      +# of this file.  A short synopsis follows.
       #
       # This file controls: which hosts are allowed to connect, how clients
       # are authenticated, which PostgreSQL user names they can use, which
       # databases they can access.  Records take one of these forms:
       #
      -# local         DATABASE  USER  METHOD  [OPTIONS]
      -# host          DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      -# hostssl       DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      -# hostnossl     DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      -# hostgssenc    DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      -# hostnogssenc  DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      +# local      DATABASE  USER  METHOD  [OPTION]
      +# host       DATABASE  USER  CIDR-ADDRESS  METHOD  [OPTION]
      +# hostssl    DATABASE  USER  CIDR-ADDRESS  METHOD  [OPTION]
      +# hostnossl  DATABASE  USER  CIDR-ADDRESS  METHOD  [OPTION]
       #
       # (The uppercase items must be replaced by actual values.)
       #
      -# The first field is the connection type:
      -# - "local" is a Unix-domain socket
      -# - "host" is a TCP/IP socket (encrypted or not)
      -# - "hostssl" is a TCP/IP socket that is SSL-encrypted
      -# - "hostnossl" is a TCP/IP socket that is not SSL-encrypted
      -# - "hostgssenc" is a TCP/IP socket that is GSSAPI-encrypted
      -# - "hostnogssenc" is a TCP/IP socket that is not GSSAPI-encrypted
      +# The first field is the connection type: "local" is a Unix-domain socket,
      +# "host" is either a plain or SSL-encrypted TCP/IP socket, "hostssl" is an
      +# SSL-encrypted TCP/IP socket, and "hostnossl" is a plain TCP/IP socket.
       #
      -# DATABASE can be "all", "sameuser", "samerole", "replication", a
      -# database name, or a comma-separated list thereof. The "all"
      -# keyword does not match "replication". Access to replication
      -# must be enabled in a separate record (see example below).
      +# DATABASE can be "all", "sameuser", "samerole", a database name, or
      +# a comma-separated list thereof.
       #
      -# USER can be "all", a user name, a group name prefixed with "+", or a
      -# comma-separated list thereof.  In both the DATABASE and USER fields
      -# you can also write a file name prefixed with "@" to include names
      -# from a separate file.
      +# USER can be "all", a user name, a group name prefixed with "+", or
      +# a comma-separated list thereof.  In both the DATABASE and USER fields
      +# you can also write a file name prefixed with "@" to include names from
      +# a separate file.
       #
      -# ADDRESS specifies the set of hosts the record matches.  It can be a
      -# host name, or it is made up of an IP address and a CIDR mask that is
      -# an integer (between 0 and 32 (IPv4) or 128 (IPv6) inclusive) that
      -# specifies the number of significant bits in the mask.  A host name
      -# that starts with a dot (.) matches a suffix of the actual host name.
      -# Alternatively, you can write an IP address and netmask in separate
      -# columns to specify the set of hosts.  Instead of a CIDR-address, you
      -# can write "samehost" to match any of the server's own IP addresses,
      -# or "samenet" to match any address in any subnet that the server is
      -# directly connected to.
      +# CIDR-ADDRESS specifies the set of hosts the record matches.
      +# It is made up of an IP address and a CIDR mask that is an integer
      +# (between 0 and 32 (IPv4) or 128 (IPv6) inclusive) that specifies
      +# the number of significant bits in the mask.  Alternatively, you can write
      +# an IP address and netmask in separate columns to specify the set of hosts.
       #
      -# METHOD can be "trust", "reject", "md5", "password", "scram-sha-256",
      -# "gss", "sspi", "ident", "peer", "pam", "ldap", "radius" or "cert".
      -# Note that "password" sends passwords in clear text; "md5" or
      -# "scram-sha-256" are preferred since they send encrypted passwords.
      +# METHOD can be "trust", "reject", "md5", "crypt", "password", "gss", "sspi",
      +# "krb5", "ident", "pam" or "ldap".  Note that "password" sends passwords
      +# in clear text; "md5" is preferred since it sends encrypted passwords.
       #
      -# OPTIONS are a set of options for the authentication in the format
      -# NAME=VALUE.  The available options depend on the different
      -# authentication methods -- refer to the "Client Authentication"
      -# section in the documentation for a list of which options are
      -# available for which authentication methods.
      +# OPTION is the ident map or the name of the PAM service, depending on METHOD.
       #
      -# Database and user names containing spaces, commas, quotes and other
      -# special characters must be quoted.  Quoting one of the keywords
      -# "all", "sameuser", "samerole" or "replication" makes the name lose
      -# its special character, and just match a database or username with
      -# that name.
      +# Database and user names containing spaces, commas, quotes and other special
      +# characters must be quoted. Quoting one of the keywords "all", "sameuser" or
      +# "samerole" makes the name lose its special character, and just match a
      +# database or username with that name.
       #
      -# This file is read on server startup and when the server receives a
      -# SIGHUP signal.  If you edit the file on a running system, you have to
      -# SIGHUP the server for the changes to take effect, run "pg_ctl reload",
      -# or execute "SELECT pg_reload_conf()".
      -#
      +# This file is read on server startup and when the postmaster receives
      +# a SIGHUP signal.  If you edit the file on a running system, you have
      +# to SIGHUP the postmaster for the changes to take effect.  You can use
      +# "pg_ctl reload" to do that.
      +
       # Put your actual configuration here
       # ----------------------------------
       #
       # If you want to allow non-local connections, you need to add more
      -# "host" records.  In that case you will also need to make PostgreSQL
      -# listen on a non-local interface via the listen_addresses
      -# configuration parameter, or via the -i or -h command line switches.
      +# "host" records. In that case you will also need to make PostgreSQL listen
      +# on a non-local interface via the listen_addresses configuration parameter,
      +# or via the -i or -h command line switches.
      +#
       
      -# CAUTION: Configuring the system for local "trust" authentication
      -# allows any local user to connect as any PostgreSQL user, including
      -# the database superuser.  If you do not trust all your local users,
      -# use another authentication method.
       
      +# TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD
       
      -# TYPE  DATABASE        USER            ADDRESS                 METHOD
      -
       # "local" is for Unix domain socket connections only
      -local   all             all                                     trust
      -# IPv4 local connections:
      -host    all             all             127.0.0.1/32            trust
      -# IPv6 local connections:
      -host    all             all             ::1/128                 trust
      -# Allow replication connections from localhost, by a user with the
      -# replication privilege.
      -local   replication     all                                     trust
      -host    replication     all             127.0.0.1/32            trust
      -host    replication     all             ::1/128                 trust
      +local   all         all                               peer map=gitlab
      +
      +
      +[2024-11-03T19:51:21-05:00] INFO: template[/var/opt/gitlab/postgresql/data/pg_hba.conf] mode changed to 644

      - change mode from '0600' to '0644'
    * template[/var/opt/gitlab/postgresql/data/pg_ident.conf] action create[2024-11-03T19:51:21-05:00] INFO: template[/var/opt/gitlab/postgresql/data/pg_ident.conf] backed up to /opt/gitlab/embedded/cookbooks/ca
che/backup/var/opt/gitlab/postgresql/data/pg_ident.conf.chef-20241103195121.603714
[2024-11-03T19:51:21-05:00] INFO: template[/var/opt/gitlab/postgresql/data/pg_ident.conf] updated file contents /var/opt/gitlab/postgresql/data/pg_ident.conf

      - update content in file /var/opt/gitlab/postgresql/data/pg_ident.conf from 297f46 to 5399a1
      --- /var/opt/gitlab/postgresql/data/pg_ident.conf	2024-11-03 19:51:20.732038972 -0500
      +++ /var/opt/gitlab/postgresql/data/.chef-pg_ident20241103-3861563-oyyc98.conf	2024-11-03 19:51:21.601004530 -0500
      @@ -40,4 +40,8 @@
       # ----------------------------------
       
       # MAPNAME       SYSTEM-USERNAME         PG-USERNAME
      +gitlab  git  gitlab
      +gitlab  mattermost  gitlab_mattermost
      +# Default to a 1-1 mapping between system usernames and Postgres usernames
      +gitlab  /^(.*)$  \1[2024-11-03T19:51:21-05:00] INFO: template[/var/opt/gitlab/postgresql/data/pg_ident.conf] mode changed to 644

      - change mode from '0600' to '0644'
  
[2024-11-03T19:51:21-05:00] INFO: postgresql_config[gitlab] sending run action to execute[start postgresql] (immediate)
Recipe: postgresql::standalone
  * execute[start postgresql] action run
    [execute] ok: run: postgresql: (pid 3862183) 1s
[2024-11-03T19:51:23-05:00] INFO: execute[start postgresql] ran successfully
    - execute /opt/gitlab/bin/gitlab-ctl start postgresql
  * service[postgresql] action nothing (skipped due to action :nothing)
  * runit_service[postgresql] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/postgresql] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/log] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/log/main] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_postgresql] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/postgresql/config] action create[2024-11-03T19:51:23-05:00] INFO: link[/var/log/gitlab/postgresql/config] created

      - create symlink at /var/log/gitlab/postgresql/config to /opt/gitlab/sv/postgresql/log/config
    * template[/opt/gitlab/sv/postgresql/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for postgresql service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/postgresql/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/postgresql/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/postgresql/control] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/control/t] action create (up to date)
    * link[/opt/gitlab/init/postgresql] action create (up to date)
    * file[/opt/gitlab/sv/postgresql/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/postgresql] action create (up to date)
    * ruby_block[wait for postgresql service socket] action run (skipped due to not_if)
    * directory[/opt/gitlab/service/postgresql/supervise] action create (up to date)
    * directory[/opt/gitlab/service/postgresql/log/supervise] action create (up to date)
    * file[/opt/gitlab/service/postgresql/supervise/ok] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/ok] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/supervise/status] action touch[2024-11-03T19:51:23-05:00] INFO: file[/opt/gitlab/service/postgresql/supervise/status] owner changed to 996
[2024-11-03T19:51:23-05:00] INFO: file[/opt/gitlab/service/postgresql/supervise/status] group changed to 995

      - change owner from 'root' to 'gitlab-psql'
      - change group from 'root' to 'gitlab-psql'[2024-11-03T19:51:23-05:00] INFO: file[/opt/gitlab/service/postgresql/supervise/status] updated atime and mtime to 2024-11-03 19:51:23 -0500

      - update utime on file /opt/gitlab/service/postgresql/supervise/status
    * file[/opt/gitlab/service/postgresql/log/supervise/status] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/supervise/control] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/control] action touch (skipped due to only_if)
    * file[/var/log/gitlab/postgresql/current] action touch (skipped due to only_if)
  
  * execute[/opt/gitlab/bin/gitlab-ctl start postgresql] action run
    [execute] ok: run: postgresql: (pid 3862183) 2s
[2024-11-03T19:51:24-05:00] INFO: execute[/opt/gitlab/bin/gitlab-ctl start postgresql] ran successfully
    - execute /opt/gitlab/bin/gitlab-ctl start postgresql
  * database_objects[postgresql] action create
    * postgresql_user[gitlab] action create
      * execute[create gitlab postgresql user] action run
        [execute] CREATE ROLE
[2024-11-03T19:51:24-05:00] INFO: execute[create gitlab postgresql user] ran successfully
        - execute /opt/gitlab/bin/gitlab-psql -d template1 -c "CREATE USER \"gitlab\""
    
    * postgresql_user[gitlab_replicator] action create
      * execute[create gitlab_replicator postgresql user] action run
        [execute] CREATE ROLE
[2024-11-03T19:51:24-05:00] INFO: execute[create gitlab_replicator postgresql user] ran successfully
        - execute /opt/gitlab/bin/gitlab-psql -d template1 -c "CREATE USER \"gitlab_replicator\""
      * execute[set options for gitlab_replicator postgresql user] action run
        [execute] ALTER ROLE
[2024-11-03T19:51:24-05:00] INFO: execute[set options for gitlab_replicator postgresql user] ran successfully
        - execute /opt/gitlab/bin/gitlab-psql -d template1 -c "ALTER USER \"gitlab_replicator\" replication"
    
    * postgresql_database[gitlabhq_production] action create
      * execute[create database gitlabhq_production] action run[2024-11-03T19:51:24-05:00] INFO: execute[create database gitlabhq_production] ran successfully

        - execute /opt/gitlab/embedded/bin/createdb --port 5432 -h /var/opt/gitlab/postgresql -O gitlab gitlabhq_production
    
    * postgresql_extension[pg_trgm] action enable
      * postgresql_query[enable pg_trgm extension] action run
        * execute[enable pg_trgm extension (postgresql)] action run
          [execute] CREATE EXTENSION
[2024-11-03T19:51:25-05:00] INFO: execute[enable pg_trgm extension (postgresql)] ran successfully
          - execute /opt/gitlab/bin/gitlab-psql -d gitlabhq_production -c "CREATE EXTENSION IF NOT EXISTS pg_trgm"
      
    
    * postgresql_extension[btree_gist] action enable
      * postgresql_query[enable btree_gist extension] action run
        * execute[enable btree_gist extension (postgresql)] action run
          [execute] CREATE EXTENSION
[2024-11-03T19:51:25-05:00] INFO: execute[enable btree_gist extension (postgresql)] ran successfully
          - execute /opt/gitlab/bin/gitlab-psql -d gitlabhq_production -c "CREATE EXTENSION IF NOT EXISTS btree_gist"
      
    
    * postgresql_database[gitlabhq_production] action create
      * execute[create database gitlabhq_production] action run (skipped due to not_if)
       (up to date)
    * postgresql_extension[pg_trgm] action enable
      * postgresql_query[enable pg_trgm extension] action run (skipped due to only_if)
       (up to date)
    * postgresql_extension[btree_gist] action enable
      * postgresql_query[enable btree_gist extension] action run (skipped due to only_if)
       (up to date)
  
  * version_file[Create version file for PostgreSQL] action create
    * file[/var/opt/gitlab/postgresql/VERSION] action create[2024-11-03T19:51:25-05:00] INFO: file[/var/opt/gitlab/postgresql/VERSION] created file /var/opt/gitlab/postgresql/VERSION

      - create new file /var/opt/gitlab/postgresql/VERSION[2024-11-03T19:51:25-05:00] INFO: file[/var/opt/gitlab/postgresql/VERSION] updated file contents /var/opt/gitlab/postgresql/VERSION

      - update content in file /var/opt/gitlab/postgresql/VERSION from none to ce52d4
      --- /var/opt/gitlab/postgresql/VERSION	2024-11-03 19:51:25.501850492 -0500
      +++ /var/opt/gitlab/postgresql/.chef-VERSION20241103-3861563-xe6kh	2024-11-03 19:51:25.501850492 -0500
      @@ -1 +1,2 @@
      +postgres (PostgreSQL) 14.11
  
  * ruby_block[warn pending postgresql restart] action run (skipped due to only_if)
  * execute[reload postgresql] action nothing (skipped due to action :nothing)
  * execute[start postgresql] action nothing (skipped due to action :nothing)
Recipe: praefect::disable
  * service[praefect] action nothing (skipped due to action :nothing)
  * runit_service[praefect] action disable
    * ruby_block[disable praefect] action run (skipped due to only_if)
     (up to date)
  * consul_service[praefect] action delete
    * file[/var/opt/gitlab/consul/config.d/praefect-service.json] action delete (up to date)
     (up to date)
Recipe: gitlab-kas::enable
  * directory[/var/opt/gitlab/gitlab-kas] action create[2024-11-03T19:51:25-05:00] INFO: directory[/var/opt/gitlab/gitlab-kas] created directory /var/opt/gitlab/gitlab-kas

    - create new directory /var/opt/gitlab/gitlab-kas[2024-11-03T19:51:25-05:00] INFO: directory[/var/opt/gitlab/gitlab-kas] owner changed to 998
[2024-11-03T19:51:25-05:00] INFO: directory[/var/opt/gitlab/gitlab-kas] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'git'
  * directory[/opt/gitlab/etc/gitlab-kas] action create (up to date)
  * directory[/var/log/gitlab/gitlab-kas] action create[2024-11-03T19:51:25-05:00] INFO: directory[/var/log/gitlab/gitlab-kas] created directory /var/log/gitlab/gitlab-kas

    - create new directory /var/log/gitlab/gitlab-kas[2024-11-03T19:51:25-05:00] INFO: directory[/var/log/gitlab/gitlab-kas] owner changed to 998
[2024-11-03T19:51:25-05:00] INFO: directory[/var/log/gitlab/gitlab-kas] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'git'
  * version_file[Create version file for Gitlab KAS] action create
    * file[/var/opt/gitlab/gitlab-kas/VERSION] action create[2024-11-03T19:51:25-05:00] INFO: file[/var/opt/gitlab/gitlab-kas/VERSION] created file /var/opt/gitlab/gitlab-kas/VERSION

      - create new file /var/opt/gitlab/gitlab-kas/VERSION[2024-11-03T19:51:25-05:00] INFO: file[/var/opt/gitlab/gitlab-kas/VERSION] updated file contents /var/opt/gitlab/gitlab-kas/VERSION

      - update content in file /var/opt/gitlab/gitlab-kas/VERSION from none to 03e3d8
      --- /var/opt/gitlab/gitlab-kas/VERSION	2024-11-03 19:51:25.618845887 -0500
      +++ /var/opt/gitlab/gitlab-kas/.chef-VERSION20241103-3861563-vyof7z	2024-11-03 19:51:25.617845926 -0500
      @@ -1 +1,2 @@
      +kas version v17.5.1, git ref: v17.5.1
  
  * file[/var/opt/gitlab/gitlab-kas/authentication_secret_file] action create[2024-11-03T19:51:25-05:00] INFO: file[/var/opt/gitlab/gitlab-kas/authentication_secret_file] created file /var/opt/gitlab/gitlab-kas/
authentication_secret_file

    - create new file /var/opt/gitlab/gitlab-kas/authentication_secret_file[2024-11-03T19:51:25-05:00] INFO: file[/var/opt/gitlab/gitlab-kas/authentication_secret_file] updated file contents /var/opt/gitlab/gitl
ab-kas/authentication_secret_file

    - update content in file /var/opt/gitlab/gitlab-kas/authentication_secret_file from none to ca3dbc
    --- /var/opt/gitlab/gitlab-kas/authentication_secret_file	2024-11-03 19:51:25.621845769 -0500
    +++ /var/opt/gitlab/gitlab-kas/.chef-authentication_secret_file20241103-3861563-bvt6kr	2024-11-03 19:51:25.621845769 -0500
    @@ -1 +1,2 @@
    +YjVhNjRmMWFiMWNmM2EzNzAxM2ZmZjg0MWQ2NTlhZmM=[2024-11-03T19:51:25-05:00] INFO: file[/var/opt/gitlab/gitlab-kas/authentication_secret_file] owner changed to 0
[2024-11-03T19:51:25-05:00] INFO: file[/var/opt/gitlab/gitlab-kas/authentication_secret_file] group changed to 997
[2024-11-03T19:51:25-05:00] INFO: file[/var/opt/gitlab/gitlab-kas/authentication_secret_file] mode changed to 640

    - change mode from '' to '0640'
    - change owner from '' to 'root'
    - change group from '' to 'git'
  * file[/var/opt/gitlab/gitlab-kas/private_api_authentication_secret_file] action create[2024-11-03T19:51:25-05:00] INFO: file[/var/opt/gitlab/gitlab-kas/private_api_authentication_secret_file] created file /va
r/opt/gitlab/gitlab-kas/private_api_authentication_secret_file

    - create new file /var/opt/gitlab/gitlab-kas/private_api_authentication_secret_file[2024-11-03T19:51:25-05:00] INFO: file[/var/opt/gitlab/gitlab-kas/private_api_authentication_secret_file] updated file conte
nts /var/opt/gitlab/gitlab-kas/private_api_authentication_secret_file

    - update content in file /var/opt/gitlab/gitlab-kas/private_api_authentication_secret_file from none to 44a828
    --- /var/opt/gitlab/gitlab-kas/private_api_authentication_secret_file	2024-11-03 19:51:25.625845611 -0500
    +++ /var/opt/gitlab/gitlab-kas/.chef-private_api_authentication_secret_file20241103-3861563-6a7dqj	2024-11-03 19:51:25.625845611 -0500
    @@ -1 +1,2 @@
    +ZGY3MzYzN2ZhYzZlZjViZDUwNGM3ZWYyMzNjN2JjMjk=[2024-11-03T19:51:25-05:00] INFO: file[/var/opt/gitlab/gitlab-kas/private_api_authentication_secret_file] owner changed to 0
[2024-11-03T19:51:25-05:00] INFO: file[/var/opt/gitlab/gitlab-kas/private_api_authentication_secret_file] group changed to 997
[2024-11-03T19:51:25-05:00] INFO: file[/var/opt/gitlab/gitlab-kas/private_api_authentication_secret_file] mode changed to 640

    - change mode from '' to '0640'
    - change owner from '' to 'root'
    - change group from '' to 'git'
  * file[/var/opt/gitlab/gitlab-kas/redis_password_file] action create (skipped due to only_if)
  * file[/var/opt/gitlab/gitlab-kas/redis_sentinels_password_file] action create (skipped due to only_if)
  * template[/var/opt/gitlab/gitlab-kas/gitlab-kas-config.yml] action create[2024-11-03T19:51:25-05:00] INFO: template[/var/opt/gitlab/gitlab-kas/gitlab-kas-config.yml] created file /var/opt/gitlab/gitlab-kas/gi
tlab-kas-config.yml

    - create new file /var/opt/gitlab/gitlab-kas/gitlab-kas-config.yml[2024-11-03T19:51:25-05:00] INFO: template[/var/opt/gitlab/gitlab-kas/gitlab-kas-config.yml] updated file contents /var/opt/gitlab/gitlab-kas
/gitlab-kas-config.yml

    - update content in file /var/opt/gitlab/gitlab-kas/gitlab-kas-config.yml from none to 1848aa
    --- /var/opt/gitlab/gitlab-kas/gitlab-kas-config.yml	2024-11-03 19:51:25.632845336 -0500
    +++ /var/opt/gitlab/gitlab-kas/.chef-gitlab-kas-config20241103-3861563-sa694d.yml	2024-11-03 19:51:25.632845336 -0500
    @@ -1,46 +1,92 @@
    +agent:
    +  listen:
    +    address: localhost:8150
    +    network: tcp
    +    websocket: true
    +  configuration:
    +    poll_period: 300s
    +  gitops:
    +    poll_period: 300s
    +    project_info_cache_ttl: 300s
    +    project_info_cache_error_ttl: 60s
    +  kubernetes_api:
    +    listen:
    +      address: localhost:8154
    +    url_path_prefix: /
    +  info_cache_ttl: 300s
    +  info_cache_error_ttl: 60s
    +gitlab:
    +  address: http://localhost:8080
    +  external_url: http://localhost
    +  authentication_secret_file: /var/opt/gitlab/gitlab-kas/authentication_secret_file
    +observability:
    +  listen:
    +    address: localhost:8151
    +    network: tcp
    +  usage_reporting_period: 60s
    +  logging:
    +    level: info
    +    grpc_level: error
    +redis:
    +  network: unix
    +  tls:
    +    enabled: false
    +  server:
    +    address: '/var/opt/gitlab/redis/redis.socket'
    +api:
    +  listen:
    +    network: tcp
    +    address: localhost:8153
    +    authentication_secret_file: /var/opt/gitlab/gitlab-kas/authentication_secret_file
    +private_api:
    +  listen:
    +    network: tcp
    +    address: localhost:8155
    +    authentication_secret_file: /var/opt/gitlab/gitlab-kas/private_api_authentication_secret_file
    +config:[2024-11-03T19:51:25-05:00] INFO: template[/var/opt/gitlab/gitlab-kas/gitlab-kas-config.yml] owner changed to 0
[2024-11-03T19:51:25-05:00] INFO: template[/var/opt/gitlab/gitlab-kas/gitlab-kas-config.yml] group changed to 997
[2024-11-03T19:51:25-05:00] INFO: template[/var/opt/gitlab/gitlab-kas/gitlab-kas-config.yml] mode changed to 640

    - change mode from '' to '0640'
    - change owner from '' to 'root'
    - change group from '' to 'git'
  * env_dir[/opt/gitlab/etc/gitlab-kas/env] action create
    * directory[/opt/gitlab/etc/gitlab-kas/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-kas/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-kas/env/OWN_PRIVATE_API_URL] action create (up to date)
     (up to date)
  * service[gitlab-kas] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-kas] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitlab-kas] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-kas/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-kas/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-kas/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-kas/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitlab-kas] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitlab-kas/config] action create[2024-11-03T19:51:25-05:00] INFO: link[/var/log/gitlab/gitlab-kas/config] created

      - create symlink at /var/log/gitlab/gitlab-kas/config to /opt/gitlab/sv/gitlab-kas/log/config
    * template[/opt/gitlab/sv/gitlab-kas/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-kas/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitlab-kas service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-kas/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-kas/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitlab-kas/control] action create (up to date)
    * link[/opt/gitlab/init/gitlab-kas] action create (up to date)
    * file[/opt/gitlab/sv/gitlab-kas/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitlab-kas] action create (up to date)
    * ruby_block[wait for gitlab-kas service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/gitlab-kas/current] action touch (skipped due to only_if)
  
Recipe: gitlab::database_migrations
  * ruby_block[check remote PG version] action nothing (skipped due to action :nothing)
  * rails_migration[gitlab-rails] action run[2024-11-03T19:51:25-05:00] WARN: gitlab-rails does not have a log_group or default logdir mode defined. Setting to 0700.

    * bash_hide_env[migrate gitlab-rails database] action run
      [execute] Running db:schema:load rake task
                psql:/opt/gitlab/embedded/service/gitlab-rails/db/structure.sql:9: NOTICE:  extension "btree_gist" already exists, skipping
                psql:/opt/gitlab/embedded/service/gitlab-rails/db/structure.sql:11: NOTICE:  extension "pg_trgm" already exists, skipping
                
                == Seed from /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/001_application_settings.rb
                Creating the default ApplicationSetting record.
                == /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/001_application_settings.rb took 1.78 seconds
                
                == Seed from /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/002_default_organization.rb
                
                OK
                == /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/002_default_organization.rb took 0.05 seconds
                
                == Seed from /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/003_admin.rb
                Administrator account created:
                
                login:    root
                password: ******
                
                == /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/003_admin.rb took 1.46 seconds
                
                == Seed from /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/004_create_base_work_item_types.rb
                
                OK
                == /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/004_create_base_work_item_types.rb took 0.05 seconds
                
                == Seed from /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/005_add_security_training_providers.rb
                
                OK
                == /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/005_add_security_training_providers.rb took 0.01 seconds
                
                == Seed from /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/010_settings.rb
                Saved CI JWT signing key
                == /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/010_settings.rb took 0.16 seconds
                
                == Seed from /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/020_create_work_item_hierarchy_restrictions.rb
                
                OK
                == /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/020_create_work_item_hierarchy_restrictions.rb took 0.03 seconds
                
                == Seed from /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/040_create_work_item_related_link_restrictions.rb
                
                OK
                == /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/040_create_work_item_related_link_restrictions.rb took 0.02 seconds
                
                == Seed from ee/db/fixtures/production/010_license.rb
                == ee/db/fixtures/production/010_license.rb took 0.00 seconds
                
                == Seed from ee/db/fixtures/production/027_plans.rb
                
                OK
                == ee/db/fixtures/production/027_plans.rb took 0.01 seconds
                == Seeding took 3.58 seconds
                Running gitlab:clickhouse:migrate:main rake task
                The 'main' ClickHouse database is not configured, skipping migrations
[2024-11-03T19:52:11-05:00] INFO: bash_hide_env[migrate gitlab-rails database] ran successfully
      - execute "bash" 
  
[2024-11-03T19:52:11-05:00] INFO: rails_migration[gitlab-rails] sending run action to execute[clear the gitlab-rails cache] (immediate)
Recipe: gitlab::gitlab-rails
  * execute[clear the gitlab-rails cache] action run[2024-11-03T19:52:42-05:00] INFO: execute[clear the gitlab-rails cache] ran successfully

    - execute /opt/gitlab/bin/gitlab-rake cache:clear
[2024-11-03T19:52:42-05:00] INFO: rails_migration[gitlab-rails] sending run action to ruby_block[check remote PG version] (immediate)
Recipe: gitlab::database_migrations
  * ruby_block[check remote PG version] action run (skipped due to only_if)
Recipe: crond::disable
  * service[crond] action nothing (skipped due to action :nothing)
  * runit_service[crond] action disable
    * ruby_block[disable crond] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::puma
  * directory[/opt/gitlab/var/puma] action create (up to date)
  * directory[/var/log/gitlab/puma] action create[2024-11-03T19:52:42-05:00] INFO: directory[/var/log/gitlab/puma] created directory /var/log/gitlab/puma

    - create new directory /var/log/gitlab/puma[2024-11-03T19:52:42-05:00] INFO: directory[/var/log/gitlab/puma] owner changed to 998
[2024-11-03T19:52:42-05:00] INFO: directory[/var/log/gitlab/puma] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'git'
  * directory[/var/opt/gitlab/gitlab-rails/sockets] action create[2024-11-03T19:52:42-05:00] INFO: directory[/var/opt/gitlab/gitlab-rails/sockets] created directory /var/opt/gitlab/gitlab-rails/sockets

    - create new directory /var/opt/gitlab/gitlab-rails/sockets[2024-11-03T19:52:42-05:00] INFO: directory[/var/opt/gitlab/gitlab-rails/sockets] owner changed to 998
[2024-11-03T19:52:42-05:00] INFO: directory[/var/opt/gitlab/gitlab-rails/sockets] group changed to 998
[2024-11-03T19:52:42-05:00] INFO: directory[/var/opt/gitlab/gitlab-rails/sockets] mode changed to 750

    - change mode from '' to '0750'
    - change owner from '' to 'git'
    - change group from '' to 'gitlab-www'
  * puma_config[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create
    * directory[/var/opt/gitlab/gitlab-rails/etc] action create (up to date)
    * template[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create[2024-11-03T19:52:42-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/puma.rb] created file /var/opt/gitlab/gitlab-rails/etc/puma.rb

      - create new file /var/opt/gitlab/gitlab-rails/etc/puma.rb[2024-11-03T19:52:42-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/puma.rb] updated file contents /var/opt/gitlab/gitlab-rails/etc/puma.rb

      - update content in file /var/opt/gitlab/gitlab-rails/etc/puma.rb from none to cb0d17
      --- /var/opt/gitlab/gitlab-rails/etc/puma.rb	2024-11-03 19:52:42.430997483 -0500
      +++ /var/opt/gitlab/gitlab-rails/etc/.chef-puma20241103-3861563-bdl6c5.rb	2024-11-03 19:52:42.429997518 -0500
      @@ -1,100 +1,200 @@
      +# frozen_string_literal: true
      +
      +# This file is managed by gitlab-ctl. Manual changes will be
      +# erased! To change the contents below, edit /etc/gitlab/gitlab.rb
      +# and run `sudo gitlab-ctl reconfigure`.
      +
      +# Load "path" as a rackup file.
      +#
      +# The default is "config.ru".
      +#
      +environment 'production'
      +rackup '/opt/gitlab/embedded/service/gitlab-rails/config.ru'
      +pidfile '/opt/gitlab/var/puma/puma.pid'
      +state_path '/opt/gitlab/var/puma/puma.state'
      +
      +stdout_redirect '/var/log/gitlab/puma/puma_stdout.log', '/var/log/gitlab/puma/puma_stderr.log', true
      +
      +# Configure "min" to be the minimum number of threads to use to answer
      +# requests and "max" the maximum.
      +#
      +# The default is "0, 16".
      +#
      +threads 4, 4
      +
      +# By default, workers accept all requests and queue them to pass to handlers.
      +# When false, workers accept the number of simultaneous requests configured.
      +#
      +# Queueing requests generally improves performance, but can cause deadlocks if
      +# the app is waiting on a request to itself. See https://github.com/puma/puma/issues/612
      +#
      +# When set to false this may require a reverse proxy to handle slow clients and
      +# queue requests before they reach puma. This is due to disabling HTTP keepalive
      +queue_requests false
      +
      +# Bind the server to "url". "tcp://", "unix://" and "ssl://" are the only
      +# accepted protocols.
      +bind 'unix:///var/opt/gitlab/gitlab-rails/sockets/gitlab.socket'
      +
      +bind 'tcp://127.0.0.1:8080'
      +
      +
      +directory '/var/opt/gitlab/gitlab-rails/working'
      +
      +workers 8
      +
      +require "/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/cluster/lifecycle_events"
      +
      +on_restart do
      +  # Signal application hooks that we're about to restart
      +  Gitlab::Cluster::LifecycleEvents.do_before_master_restart
      +end
      +
      +options = { workers: 8 }
      +
      +before_fork do
      +  # Signal application hooks that we're about to fork
      +  Gitlab::Cluster::LifecycleEvents.do_before_fork
      +end
      +
      +Gitlab::Cluster::LifecycleEvents.set_puma_options options
      +on_worker_boot do
      +  # Signal application hooks of worker start
      +  Gitlab::Cluster::LifecycleEvents.do_worker_start
      +end
      +
      +on_worker_shutdown do
      +  # Signal application hooks that a worker is shutting down
      +  Gitlab::Cluster::LifecycleEvents.do_worker_stop
      +end
      +
      +# Preload the application before starting the workers; this conflicts with
      +# phased restart feature. (off by default)
      +
      +preload_app!
      +
      +tag 'gitlab-puma-worker'
      +
      +# Verifies that all workers have checked in to the master process within
      +# the given timeout. If not the worker process will be restarted. Default
      +# value is 60 seconds.
      +#
      +worker_timeout 60
      +
      +# https://github.com/puma/puma/blob/master/5.0-Upgrade.md#lower-latency-better-throughput
      +wait_for_less_busy_worker ENV.fetch('PUMA_WAIT_FOR_LESS_BUSY_WORKER', 0.001).to_f
      +
      +# Use customised JSON formatter for Puma log
      +require "/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/puma_logging/json_formatter"
      +
      +json_formatter = Gitlab::PumaLogging::JSONFormatter.new
      +log_formatter do |str|
      +    json_formatter.call(str)
      +end
      +
      +require "/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/puma/error_handler"
      +error_handler = Gitlab::Puma::ErrorHandler.new(ENV['RAILS_ENV'] == 'production')
      +
      +lowlevel_error_handler do |ex, env, status_code|
      +  error_handler.execute(ex, env, status_code)
      +end[2024-11-03T19:52:42-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/puma.rb] owner changed to 0
[2024-11-03T19:52:42-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/puma.rb] group changed to 0
[2024-11-03T19:52:42-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/puma.rb] mode changed to 644

      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
  
  * service[puma] action nothing (skipped due to action :nothing)
  * runit_service[puma] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/puma] action create (up to date)
    * template[/opt/gitlab/sv/puma/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log/main] action create (up to date)
    * template[/opt/gitlab/sv/puma/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_puma] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/puma/config] action create[2024-11-03T19:52:42-05:00] INFO: link[/var/log/gitlab/puma/config] created

      - create symlink at /var/log/gitlab/puma/config to /opt/gitlab/sv/puma/log/config
    * template[/opt/gitlab/sv/puma/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for puma service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/puma/control] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/t] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/h] action create (up to date)
    * link[/opt/gitlab/init/puma] action create (up to date)
    * file[/opt/gitlab/sv/puma/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/puma] action create (up to date)
    * ruby_block[wait for puma service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/puma/current] action touch (skipped due to only_if)
  
  * execute[/opt/gitlab/bin/gitlab-ctl start puma] action run
    [execute] ok: run: puma: (pid 3862565) 1s
[2024-11-03T19:52:44-05:00] INFO: execute[/opt/gitlab/bin/gitlab-ctl start puma] ran successfully
    - execute /opt/gitlab/bin/gitlab-ctl start puma
  * consul_service[rails] action delete
    * file[/var/opt/gitlab/consul/config.d/rails-service.json] action delete (up to date)
     (up to date)
  * gitlab_sysctl[net.core.somaxconn] action create
    * directory[create /etc/sysctl.d for net.core.somaxconn] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-net.core.somaxconn.conf net.core.somaxconn] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-net.core.somaxconn.conf] action create (up to date)
    * execute[load sysctl conf net.core.somaxconn] action nothing (skipped due to action :nothing)
     (up to date)
Recipe: gitlab::sidekiq
  * sidekiq_service[sidekiq] action enable[2024-11-03T19:52:44-05:00] WARN: sidekiq does not have a log_group or default logdir mode defined. Setting to 0700.

    * directory[/var/log/gitlab/sidekiq] action create[2024-11-03T19:52:44-05:00] INFO: directory[/var/log/gitlab/sidekiq] created directory /var/log/gitlab/sidekiq

      - create new directory /var/log/gitlab/sidekiq[2024-11-03T19:52:44-05:00] INFO: directory[/var/log/gitlab/sidekiq] owner changed to 998
[2024-11-03T19:52:44-05:00] INFO: directory[/var/log/gitlab/sidekiq] mode changed to 700

      - change mode from '' to '0700'
      - change owner from '' to 'git'
    * service[sidekiq] action nothing (skipped due to action :nothing)
    * runit_service[sidekiq] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/sidekiq] action create (up to date)
      * template[/opt/gitlab/sv/sidekiq/run] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/log] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/log/main] action create (up to date)
      * template[/opt/gitlab/sv/sidekiq/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_sidekiq] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/sidekiq/config] action create[2024-11-03T19:52:44-05:00] INFO: link[/var/log/gitlab/sidekiq/config] created

        - create symlink at /var/log/gitlab/sidekiq/config to /opt/gitlab/sv/sidekiq/log/config
      * template[/opt/gitlab/sv/sidekiq/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for sidekiq service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/sidekiq/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/sidekiq/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/sidekiq/control] action create (up to date)
      * link[/opt/gitlab/init/sidekiq] action create (up to date)
      * file[/opt/gitlab/sv/sidekiq/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/sidekiq] action create (up to date)
      * ruby_block[wait for sidekiq service socket] action run (skipped due to not_if)
      * file[/var/log/gitlab/sidekiq/current] action touch (skipped due to only_if)
    
    * execute[/opt/gitlab/bin/gitlab-ctl start sidekiq] action run
      [execute] ok: run: sidekiq: (pid 3862576) 0s
[2024-11-03T19:52:45-05:00] INFO: execute[/opt/gitlab/bin/gitlab-ctl start sidekiq] ran successfully
      - execute /opt/gitlab/bin/gitlab-ctl start sidekiq
  
  * consul_service[sidekiq] action delete
    * file[/var/opt/gitlab/consul/config.d/sidekiq-service.json] action delete (up to date)
     (up to date)
Recipe: gitlab::gitlab-workhorse
  * directory[/var/opt/gitlab/gitlab-workhorse] action create[2024-11-03T19:52:45-05:00] INFO: directory[/var/opt/gitlab/gitlab-workhorse] created directory /var/opt/gitlab/gitlab-workhorse

    - create new directory /var/opt/gitlab/gitlab-workhorse[2024-11-03T19:52:45-05:00] INFO: directory[/var/opt/gitlab/gitlab-workhorse] owner changed to 998
[2024-11-03T19:52:45-05:00] INFO: directory[/var/opt/gitlab/gitlab-workhorse] group changed to 998
[2024-11-03T19:52:45-05:00] INFO: directory[/var/opt/gitlab/gitlab-workhorse] mode changed to 750

    - change mode from '' to '0750'
    - change owner from '' to 'git'
    - change group from '' to 'gitlab-www'
  * directory[/var/opt/gitlab/gitlab-workhorse/sockets] action create[2024-11-03T19:52:45-05:00] INFO: directory[/var/opt/gitlab/gitlab-workhorse/sockets] created directory /var/opt/gitlab/gitlab-workhorse/socke
ts

    - create new directory /var/opt/gitlab/gitlab-workhorse/sockets[2024-11-03T19:52:45-05:00] INFO: directory[/var/opt/gitlab/gitlab-workhorse/sockets] owner changed to 998
[2024-11-03T19:52:45-05:00] INFO: directory[/var/opt/gitlab/gitlab-workhorse/sockets] group changed to 998
[2024-11-03T19:52:45-05:00] INFO: directory[/var/opt/gitlab/gitlab-workhorse/sockets] mode changed to 750

    - change mode from '' to '0750'
    - change owner from '' to 'git'
    - change group from '' to 'gitlab-www'
  * directory[/var/log/gitlab/gitlab-workhorse] action create[2024-11-03T19:52:45-05:00] INFO: directory[/var/log/gitlab/gitlab-workhorse] created directory /var/log/gitlab/gitlab-workhorse

    - create new directory /var/log/gitlab/gitlab-workhorse[2024-11-03T19:52:45-05:00] INFO: directory[/var/log/gitlab/gitlab-workhorse] owner changed to 998
[2024-11-03T19:52:45-05:00] INFO: directory[/var/log/gitlab/gitlab-workhorse] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'git'
  * directory[/opt/gitlab/etc/gitlab-workhorse] action create (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-workhorse/env] action create
    * directory[/opt/gitlab/etc/gitlab-workhorse/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * service[gitlab-workhorse] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-workhorse] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitlab-workhorse] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-workhorse/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-workhorse/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-workhorse/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-workhorse/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitlab-workhorse] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitlab-workhorse/config] action create[2024-11-03T19:52:45-05:00] INFO: link[/var/log/gitlab/gitlab-workhorse/config] created

      - create symlink at /var/log/gitlab/gitlab-workhorse/config to /opt/gitlab/sv/gitlab-workhorse/log/config
    * template[/opt/gitlab/sv/gitlab-workhorse/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-workhorse/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitlab-workhorse service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-workhorse/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-workhorse/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitlab-workhorse/control] action create (up to date)
    * link[/opt/gitlab/init/gitlab-workhorse] action create (up to date)
    * file[/opt/gitlab/sv/gitlab-workhorse/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitlab-workhorse] action create (up to date)
    * ruby_block[wait for gitlab-workhorse service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/gitlab-workhorse/current] action touch (skipped due to only_if)
  
  * consul_service[workhorse] action delete
    * file[/var/opt/gitlab/consul/config.d/workhorse-service.json] action delete (up to date)
     (up to date)
  * version_file[Create version file for Workhorse] action create
    * file[/var/opt/gitlab/gitlab-workhorse/VERSION] action create[2024-11-03T19:52:45-05:00] INFO: file[/var/opt/gitlab/gitlab-workhorse/VERSION] created file /var/opt/gitlab/gitlab-workhorse/VERSION

      - create new file /var/opt/gitlab/gitlab-workhorse/VERSION[2024-11-03T19:52:45-05:00] INFO: file[/var/opt/gitlab/gitlab-workhorse/VERSION] updated file contents /var/opt/gitlab/gitlab-workhorse/VERSION

      - update content in file /var/opt/gitlab/gitlab-workhorse/VERSION from none to 02b6c9
      --- /var/opt/gitlab/gitlab-workhorse/VERSION	2024-11-03 19:52:45.758881577 -0500
      +++ /var/opt/gitlab/gitlab-workhorse/.chef-VERSION20241103-3861563-7h3cpp	2024-11-03 19:52:45.758881577 -0500
      @@ -1 +1,2 @@
      +gitlab-workhorse (v17.5.1-ee)-(20241022.210429)
  
[2024-11-03T19:52:45-05:00] INFO: version_file[Create version file for Workhorse] not queuing delayed action restart on runit_service[gitlab-workhorse] (delayed), as it's already been queued
  * template[/var/opt/gitlab/gitlab-workhorse/config.toml] action create[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/gitlab-workhorse/config.toml] created file /var/opt/gitlab/gitlab-workhorse/conf
ig.toml

    - create new file /var/opt/gitlab/gitlab-workhorse/config.toml[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/gitlab-workhorse/config.toml] updated file contents /var/opt/gitlab/gitlab-workhorse/c
onfig.toml

    - update content in file /var/opt/gitlab/gitlab-workhorse/config.toml from none to a43fe3
    - suppressed sensitive resource[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/gitlab-workhorse/config.toml] owner changed to 0
[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/gitlab-workhorse/config.toml] group changed to 997
[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/gitlab-workhorse/config.toml] mode changed to 640

    - change mode from '' to '0640'
    - change owner from '' to 'root'
    - change group from '' to 'git'
[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/gitlab-workhorse/config.toml] not queuing delayed action restart on runit_service[gitlab-workhorse] (delayed), as it's already been queued
Recipe: gitlab::mailroom_disable
  * service[mailroom] action nothing (skipped due to action :nothing)
  * runit_service[mailroom] action disable
    * ruby_block[disable mailroom] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::nginx
  * directory[/var/opt/gitlab/nginx] action create[2024-11-03T19:52:45-05:00] INFO: directory[/var/opt/gitlab/nginx] created directory /var/opt/gitlab/nginx

    - create new directory /var/opt/gitlab/nginx[2024-11-03T19:52:45-05:00] INFO: directory[/var/opt/gitlab/nginx] owner changed to 0
[2024-11-03T19:52:45-05:00] INFO: directory[/var/opt/gitlab/nginx] group changed to 998
[2024-11-03T19:52:45-05:00] INFO: directory[/var/opt/gitlab/nginx] mode changed to 750

    - change mode from '' to '0750'
    - change owner from '' to 'root'
    - change group from '' to 'gitlab-www'
  * directory[/var/opt/gitlab/nginx/conf] action create[2024-11-03T19:52:45-05:00] INFO: directory[/var/opt/gitlab/nginx/conf] created directory /var/opt/gitlab/nginx/conf

    - create new directory /var/opt/gitlab/nginx/conf[2024-11-03T19:52:45-05:00] INFO: directory[/var/opt/gitlab/nginx/conf] owner changed to 0
[2024-11-03T19:52:45-05:00] INFO: directory[/var/opt/gitlab/nginx/conf] group changed to 998
[2024-11-03T19:52:45-05:00] INFO: directory[/var/opt/gitlab/nginx/conf] mode changed to 750

    - change mode from '' to '0750'
    - change owner from '' to 'root'
    - change group from '' to 'gitlab-www'
  * directory[/var/log/gitlab/nginx] action create[2024-11-03T19:52:45-05:00] INFO: directory[/var/log/gitlab/nginx] created directory /var/log/gitlab/nginx

    - create new directory /var/log/gitlab/nginx[2024-11-03T19:52:45-05:00] INFO: directory[/var/log/gitlab/nginx] owner changed to 0
[2024-11-03T19:52:45-05:00] INFO: directory[/var/log/gitlab/nginx] group changed to 998
[2024-11-03T19:52:45-05:00] INFO: directory[/var/log/gitlab/nginx] mode changed to 750

    - change mode from '' to '0750'
    - change owner from '' to 'root'
    - change group from '' to 'gitlab-www'
  * link[/var/opt/gitlab/nginx/logs] action create[2024-11-03T19:52:45-05:00] INFO: link[/var/opt/gitlab/nginx/logs] created

    - create symlink at /var/opt/gitlab/nginx/logs to /var/log/gitlab/nginx
  * template[/var/opt/gitlab/nginx/conf/gitlab-http.conf] action create[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/gitlab-http.conf] created file /var/opt/gitlab/nginx/conf/gitlab-http.
conf

    - create new file /var/opt/gitlab/nginx/conf/gitlab-http.conf[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/gitlab-http.conf] updated file contents /var/opt/gitlab/nginx/conf/gitlab-ht
tp.conf

    - update content in file /var/opt/gitlab/nginx/conf/gitlab-http.conf from none to d7ef91
    --- /var/opt/gitlab/nginx/conf/gitlab-http.conf	2024-11-03 19:52:45.787880569 -0500
    +++ /var/opt/gitlab/nginx/conf/.chef-gitlab-http20241103-3861563-2klajf.conf	2024-11-03 19:52:45.787880569 -0500
    @@ -1,141 +1,282 @@
    +# This file is managed by gitlab-ctl. Manual changes will be
    +# erased! To change the contents below, edit /etc/gitlab/gitlab.rb
    +# and run `sudo gitlab-ctl reconfigure`.
    +
    +## GitLab
    +## Modified from https://gitlab.com/gitlab-org/gitlab-foss/blob/master/lib/support/nginx/gitlab-ssl & https://gitlab.com/gitlab-org/gitlab-foss/blob/master/lib/support/nginx/gitlab
    +##
    +## Lines starting with two hashes (##) are comments with information.
    +## Lines starting with one hash (#) are configuration parameters that can be uncommented.
    +##
    +##################################
    +##        CHUNKED TRANSFER      ##
    +##################################
    +##
    +## It is a known issue that Git-over-HTTP requires chunked transfer encoding [0]
    +## which is not supported by Nginx < 1.3.9 [1]. As a result, pushing a large object
    +## with Git (i.e. a single large file) can lead to a 411 error. In theory you can get
    +## around this by tweaking this configuration file and either:
    +## - installing an old version of Nginx with the chunkin module [2] compiled in, or
    +## - using a newer version of Nginx.
    +##
    +## At the time of writing we do not know if either of these theoretical solutions works.
    +## As a workaround users can use Git over SSH to push large files.
    +##
    +## [0] https://git.kernel.org/cgit/git/git.git/tree/Documentation/technical/http-protocol.txt#n99
    +## [1] https://github.com/agentzh/chunkin-nginx-module#status
    +## [2] https://github.com/agentzh/chunkin-nginx-module
    +##
    +###################################
    +##         configuration         ##
    +###################################
    +
    +
    +server { ## HTTPS server
    +  listen *:8080;
    +
    +
    +  server_name localhost;
    +  server_tokens off; ## Don't show the nginx version number, a security best practice
    +
    +  ## Increase this if you want to upload large attachments
    +  ## Or if you want to accept large git objects over http
    +  client_max_body_size 0;
    +
    +
    +  ## Real IP Module Config
    +  ## http://nginx.org/en/docs/http/ngx_http_realip_module.html
    +
    +  ## HSTS Config
    +  ## https://www.nginx.com/blog/http-strict-transport-security-hsts-and-nginx/
    +  add_header Strict-Transport-Security "max-age=63072000" always;
    +
    +  # Rails sets a default policy of strict-origin-when-cross-origin, so
    +  # hide that and just send the one we've configured for nginx
    +  proxy_hide_header Referrer-Policy;
    +  add_header Referrer-Policy strict-origin-when-cross-origin;
    +
    +  ## Individual nginx logs for this GitLab vhost
    +  access_log  /var/log/gitlab/nginx/gitlab_access.log gitlab_access;
    +  error_log   /var/log/gitlab/nginx/gitlab_error.log error;
    +
    +  if ($http_host = "") {
    +    set $http_host_with_default "localhost:8080";
    +  }
    +
    +  if ($http_host != "") {
    +    set $http_host_with_default $http_host;
    +  }
    +
    +  gzip on;
    +  gzip_static on;
    +  gzip_comp_level 2;
    +  gzip_http_version 1.1;
    +  gzip_vary on;
    +  gzip_disable "msie6";
    +  gzip_min_length 250;
    +  gzip_proxied no-cache no-store private expired auth;
    +  gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json;
    +
    +  ## https://github.com/gitlabhq/gitlabhq/issues/694
    +  ## Some requests take more than 30 seconds.
    +  proxy_read_timeout      3600;
    +  proxy_connect_timeout   300;
    +  proxy_redirect          off;
    +  proxy_http_version 1.1;
    +
    +  proxy_set_header Host $http_host_with_default;
    +  proxy_set_header X-Real-IP $remote_addr;
    +  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    +  proxy_set_header Upgrade $http_upgrade;
    +  proxy_set_header Connection $connection_upgrade;
    +  proxy_set_header X-Forwarded-Proto http;
    +
    +  location ~ (/api/v\d/jobs/\d+/artifacts$|/import/gitlab_project$|\.git/git-receive-pack$|\.git/ssh-receive-pack$|\.git/ssh-upload-pack$|\.git/gitlab-lfs/objects|\.git/info/lfs/objects/batch$) {
    +    proxy_cache off;
    +    proxy_pass http://gitlab-workhorse;
    +    proxy_request_buffering off;
    +  }
    +
    +  location ~ ^/api/v\d {
    +    proxy_cache off;
    +    proxy_pass http://gitlab-workhorse;
    +    proxy_intercept_errors off;
    +  }
    +
    +  location = /-/kubernetes-agent/ {
    +    proxy_pass http://localhost:8150/;
    +    proxy_intercept_errors off;
    +  }
    +
    +  location /-/kubernetes-agent/k8s-proxy/ {
    +    proxy_pass http://localhost:8154/;
    +    proxy_buffering off;
    +    proxy_intercept_errors off;
    +  }
    +
    +  # health checks configuration
    +  include /var/opt/gitlab/nginx/conf/gitlab-health.conf;
    +
    +
    +  location / {
    +    proxy_cache off;
    +    proxy_pass  http://gitlab-workhorse;
    +  }
    +
    +  location /assets {
    +    add_header X-Content-Type-Options nosniff;
    +    proxy_cache gitlab;
    +    proxy_pass  http://gitlab-workhorse;
    +  }
    +
    +  error_page 404 /404.html;
    +  error_page 500 /500.html;
    +  error_page 502 /502.html;
    +  location ~ ^/(404|500|502)(-custom)?\.html$ {
    +    root /opt/gitlab/embedded/service/gitlab-rails/public;
    +    internal;
    +  }
    +
    +  
    +} ## end HTTPS server[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/gitlab-http.conf] owner changed to 0
[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/gitlab-http.conf] group changed to 0
[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/gitlab-http.conf] mode changed to 644

    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
  * template[/var/opt/gitlab/nginx/conf/gitlab-smartcard-http.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-health.conf] action create[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/gitlab-health.conf] created file /var/opt/gitlab/nginx/conf/gitlab-h
ealth.conf

    - create new file /var/opt/gitlab/nginx/conf/gitlab-health.conf[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/gitlab-health.conf] updated file contents /var/opt/gitlab/nginx/conf/gitla
b-health.conf

    - update content in file /var/opt/gitlab/nginx/conf/gitlab-health.conf from none to 00013f
    --- /var/opt/gitlab/nginx/conf/gitlab-health.conf	2024-11-03 19:52:45.804879978 -0500
    +++ /var/opt/gitlab/nginx/conf/.chef-gitlab-health20241103-3861563-ga4bqs.conf	2024-11-03 19:52:45.804879978 -0500
    @@ -1,32 +1,64 @@
    +# This file is managed by gitlab-ctl. Manual changes will be
    +# erased! To change the contents below, edit /etc/gitlab/gitlab.rb
    +# and run `sudo gitlab-ctl reconfigure`.
    +
    +location /error.txt {
    +  # return code here is ignored by the error_page directive
    +  return 500 'nginx returned $status when communicating with gitlab-workhorse\n';
    +}
    +
    +location /error.json  {
    +  # return code here is ignored by the error_page directive
    +  return 500 '{"error":"nginx returned $status when communicating with gitlab-workhorse","status":$status}\n';
    +}
    +
    +location = /-/health {
    +  proxy_cache off;
    +  proxy_http_version 1.0;
    +  proxy_pass  http://gitlab-workhorse;
    +  error_page 404 500 502 /error.txt;
    +}
    +location = /-/readiness {
    +  proxy_cache off;
    +  proxy_http_version 1.0;
    +  proxy_pass  http://gitlab-workhorse;
    +  error_page 404 500 502 /error.json;
    +}
    +location = /-/liveness {
    +  proxy_cache off;
    +  proxy_http_version 1.0;
    +  proxy_pass  http://gitlab-workhorse;
    +  error_page 404 500 502 /error.json;
    +}[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/gitlab-health.conf] owner changed to 0
[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/gitlab-health.conf] group changed to 0
[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/gitlab-health.conf] mode changed to 644

    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
  * template[/var/opt/gitlab/nginx/conf/gitlab-pages.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-registry.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-mattermost-http.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-kas.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/nginx-status.conf] action create[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/nginx-status.conf] created file /var/opt/gitlab/nginx/conf/nginx-stat
us.conf

    - create new file /var/opt/gitlab/nginx/conf/nginx-status.conf[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/nginx-status.conf] updated file contents /var/opt/gitlab/nginx/conf/nginx-s
tatus.conf

    - update content in file /var/opt/gitlab/nginx/conf/nginx-status.conf from none to 4fdeba
    --- /var/opt/gitlab/nginx/conf/nginx-status.conf	2024-11-03 19:52:45.815879596 -0500
    +++ /var/opt/gitlab/nginx/conf/.chef-nginx-status20241103-3861563-6aph2j.conf	2024-11-03 19:52:45.815879596 -0500
    @@ -1,29 +1,58 @@
    +server  {
    +    listen *:8060;
    +    server_name localhost;
    +    location /nginx_status {
    +      stub_status;
    +      server_tokens off;
    +      access_log off;
    +      allow 127.0.0.1;
    +      deny all;
    +    }
    +    location /metrics {
    +      vhost_traffic_status_display;
    +      vhost_traffic_status_display_format prometheus;
    +      server_tokens off;
    +      access_log off;
    +      allow 127.0.0.1;
    +      deny all;
    +    }
    +
    +    location /rails-metrics {
    +      proxy_cache off;
    +      proxy_http_version 1.0;
    +      proxy_pass  http://gitlab-workhorse/-/metrics;
    +      server_tokens off;
    +      access_log off;
    +      allow 127.0.0.1;
    +      deny all;
    +    }
    +}[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/nginx-status.conf] owner changed to 0
[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/nginx-status.conf] group changed to 0
[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/nginx-status.conf] mode changed to 644

    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
  * consul_service[nginx] action delete
    * file[/var/opt/gitlab/consul/config.d/nginx-service.json] action delete (up to date)
     (up to date)
  * template[/var/opt/gitlab/nginx/conf/nginx.conf] action create[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/nginx.conf] created file /var/opt/gitlab/nginx/conf/nginx.conf

    - create new file /var/opt/gitlab/nginx/conf/nginx.conf[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/nginx.conf] updated file contents /var/opt/gitlab/nginx/conf/nginx.conf

    - update content in file /var/opt/gitlab/nginx/conf/nginx.conf from none to de2944
    --- /var/opt/gitlab/nginx/conf/nginx.conf	2024-11-03 19:52:45.830879074 -0500
    +++ /var/opt/gitlab/nginx/conf/.chef-nginx20241103-3861563-q1gcuj.conf	2024-11-03 19:52:45.829879109 -0500
    @@ -1,94 +1,188 @@
    +# This file is managed by gitlab-ctl. Manual changes will be
    +# erased! To change the contents below, edit /etc/gitlab/gitlab.rb
    +# and run `sudo gitlab-ctl reconfigure`.
    +
    +user gitlab-www gitlab-www;
    +worker_processes 8;
    +error_log stderr;
    +pid nginx.pid;
    +
    +daemon off;
    +
    +events {
    +  worker_connections 10240;
    +}
    +
    +http {
    +  log_format gitlab_access '$remote_addr - $remote_user [$time_local] "$request_method $filtered_request_uri $server_protocol" $status $body_bytes_sent "$filtered_http_referer" "$http_user_agent" $gzip_rati
o';
    +  log_format gitlab_mattermost_access '$remote_addr - $remote_user [$time_local] "$request_method $filtered_request_uri $server_protocol" $status $body_bytes_sent "$filtered_http_referer" "$http_user_agent"
 $gzip_ratio';
    +
    +  hide_server_tokens off;
    +
    +  server_names_hash_bucket_size 64;
    +
    +  sendfile on;
    +  tcp_nopush on;
    +  tcp_nodelay on;
    +
    +  keepalive_timeout 65;
    +  keepalive_time 1h;
    +
    +  gzip on;
    +  gzip_http_version 1.1;
    +  gzip_comp_level 2;
    +  gzip_proxied no-cache no-store private expired auth;
    +  gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json;
    +
    +  include /opt/gitlab/embedded/conf/mime.types;
    +
    +  proxy_cache_path proxy_cache keys_zone=gitlab:10m max_size=1g levels=1:2;
    +  proxy_cache gitlab;
    +
    +  map $http_upgrade $connection_upgrade {
    +      default upgrade;
    +      ''      close;
    +  }
    +
    +  # Remove private_token from the request URI
    +  # In:  /foo?private_token=unfiltered&authenticity_token=unfiltered&rss_token=unfiltered&...
    +  # Out: /foo?private_token=[FILTERED]&authenticity_token=unfiltered&rss_token=unfiltered&...
    +  map $request_uri $temp_request_uri_1 {
    +    default $request_uri;
    +    ~(?i)^(?<start>.*)(?<temp>[\?&]private[\-_]token)=[^&]*(?<rest>.*)$ "$start$temp=[FILTERED]$rest";
    +  }
    +
    +  # Remove authenticity_token from the request URI
    +  # In:  /foo?private_token=[FILTERED]&authenticity_token=unfiltered&rss_token=unfiltered&...
    +  # Out: /foo?private_token=[FILTERED]&authenticity_token=[FILTERED]&rss_token=unfiltered&...
    +  map $temp_request_uri_1 $temp_request_uri_2 {
    +    default $temp_request_uri_1;
    +    ~(?i)^(?<start>.*)(?<temp>[\?&]authenticity[\-_]token)=[^&]*(?<rest>.*)$ "$start$temp=[FILTERED]$rest";
    +  }
    +
    +  # Remove rss_token from the request URI
    +  # In:  /foo?private_token=[FILTERED]&authenticity_token=[FILTERED]&rss_token=unfiltered&...
    +  # Out: /foo?private_token=[FILTERED]&authenticity_token=[FILTERED]&rss_token=[FILTERED]&...
    +  map $temp_request_uri_2 $filtered_request_uri {
    +    default $temp_request_uri_2;
    +    ~(?i)^(?<start>.*)(?<temp>[\?&]rss[\-_]token)=[^&]*(?<rest>.*)$ "$start$temp=[FILTERED]$rest";
    +  }
    +
    +  # A version of the referer without the query string
    +  map $http_referer $filtered_http_referer {
    +    default $http_referer;
    +    ~^(?<temp>.*)\? $temp;
    +  }
    +
    +  # Enable vts status module.
    +  vhost_traffic_status_zone;
    +
    +  upstream gitlab-workhorse {
    +    server unix:/var/opt/gitlab/gitlab-workhorse/sockets/socket;
    +  }
    +
    +  include /var/opt/gitlab/nginx/conf/gitlab-http.conf;
    +
    +
    +
    +
    +
    +
    +  include /var/opt/gitlab/nginx/conf/nginx-status.conf;
    +
    +  
    +}[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/nginx.conf] owner changed to 0
[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/nginx.conf] group changed to 0
[2024-11-03T19:52:45-05:00] INFO: template[/var/opt/gitlab/nginx/conf/nginx.conf] mode changed to 644

    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
Recipe: nginx::enable
  * service[nginx] action nothing (skipped due to action :nothing)
  * runit_service[nginx] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/nginx] action create (up to date)
    * template[/opt/gitlab/sv/nginx/run] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/log] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/log/main] action create (up to date)
    * template[/opt/gitlab/sv/nginx/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_nginx] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/nginx/config] action create[2024-11-03T19:52:45-05:00] INFO: link[/var/log/gitlab/nginx/config] created

      - create symlink at /var/log/gitlab/nginx/config to /opt/gitlab/sv/nginx/log/config
    * template[/opt/gitlab/sv/nginx/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/nginx/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/nginx/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/nginx/control] action create (up to date)
    * link[/opt/gitlab/init/nginx] action create (up to date)
    * file[/opt/gitlab/sv/nginx/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/nginx] action create (up to date)
    * ruby_block[wait for nginx service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/nginx/current] action touch (skipped due to only_if)
  
  * version_file[Create version file for NGINX] action create
    * file[/var/opt/gitlab/nginx/VERSION] action create[2024-11-03T19:52:45-05:00] INFO: file[/var/opt/gitlab/nginx/VERSION] created file /var/opt/gitlab/nginx/VERSION

      - create new file /var/opt/gitlab/nginx/VERSION[2024-11-03T19:52:45-05:00] INFO: file[/var/opt/gitlab/nginx/VERSION] updated file contents /var/opt/gitlab/nginx/VERSION

      - update content in file /var/opt/gitlab/nginx/VERSION from none to 006b6a
      --- /var/opt/gitlab/nginx/VERSION	2024-11-03 19:52:45.907876399 -0500
      +++ /var/opt/gitlab/nginx/.chef-VERSION20241103-3861563-j31pzc	2024-11-03 19:52:45.907876399 -0500
      @@ -1 +1,2 @@
      +nginx version: nginx/1.24.0
  
  * execute[reload nginx] action nothing (skipped due to action :nothing)
Recipe: gitlab::nginx
  * execute[/opt/gitlab/bin/gitlab-ctl start nginx] action run
    [execute] ok: run: nginx: (pid 3862597) 0s
[2024-11-03T19:52:47-05:00] INFO: execute[/opt/gitlab/bin/gitlab-ctl start nginx] ran successfully
    - execute /opt/gitlab/bin/gitlab-ctl start nginx
Recipe: gitlab::remote-syslog_disable
  * service[remote-syslog] action nothing (skipped due to action :nothing)
  * runit_service[remote-syslog] action disable
    * ruby_block[disable remote-syslog] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::bootstrap
  * file[/var/opt/gitlab/bootstrapped] action create[2024-11-03T19:52:47-05:00] INFO: file[/var/opt/gitlab/bootstrapped] created file /var/opt/gitlab/bootstrapped

    - create new file /var/opt/gitlab/bootstrapped[2024-11-03T19:52:47-05:00] INFO: file[/var/opt/gitlab/bootstrapped] updated file contents /var/opt/gitlab/bootstrapped

    - update content in file /var/opt/gitlab/bootstrapped from none to 4ae00c
    --- /var/opt/gitlab/bootstrapped	2024-11-03 19:52:47.451822842 -0500
    +++ /var/opt/gitlab/.chef-bootstrapped20241103-3861563-dig1d6	2024-11-03 19:52:47.451822842 -0500
    @@ -1 +1,2 @@
    +All your bootstraps are belong to Chef[2024-11-03T19:52:47-05:00] INFO: file[/var/opt/gitlab/bootstrapped] owner changed to 0
[2024-11-03T19:52:47-05:00] INFO: file[/var/opt/gitlab/bootstrapped] group changed to 0
[2024-11-03T19:52:47-05:00] INFO: file[/var/opt/gitlab/bootstrapped] mode changed to 600

    - change mode from '' to '0600'
    - change owner from '' to 'root'
    - change group from '' to 'root'
Recipe: gitlab::storage-check_disable
  * service[storage-check] action nothing (skipped due to action :nothing)
  * runit_service[storage-check] action disable
    * ruby_block[disable storage-check] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab-pages::disable
  * service[gitlab-pages] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-pages] action disable
    * ruby_block[disable gitlab-pages] action run (skipped due to only_if)
     (up to date)
Recipe: registry::disable
  * service[registry] action nothing (skipped due to action :nothing)
  * runit_service[registry] action disable
    * ruby_block[disable registry] action run (skipped due to only_if)
     (up to date)
Recipe: mattermost::disable
  * service[mattermost] action nothing (skipped due to action :nothing)
  * runit_service[mattermost] action disable
    * ruby_block[disable mattermost] action run (skipped due to only_if)
     (up to date)
Recipe: letsencrypt::disable
  * crond_job[letsencrypt-renew] action delete
    * file[/var/opt/gitlab/crond/letsencrypt-renew] action delete (up to date)
     (up to date)
Recipe: gitlab::gitlab-healthcheck
  * template[/opt/gitlab/etc/gitlab-healthcheck-rc] action create (up to date)
Recipe: monitoring::pgbouncer-exporter_disable
  * service[pgbouncer-exporter] action nothing (skipped due to action :nothing)
  * runit_service[pgbouncer-exporter] action disable
    * ruby_block[disable pgbouncer-exporter] action run (skipped due to only_if)
     (up to date)
Recipe: monitoring::user
  * account[Prometheus user and group] action create
    * group[Prometheus user and group] action create (up to date)
    * linux_user[Prometheus user and group] action create (up to date)
     (up to date)
Recipe: monitoring::node-exporter
  * directory[/var/log/gitlab/node-exporter] action create[2024-11-03T19:52:47-05:00] INFO: directory[/var/log/gitlab/node-exporter] created directory /var/log/gitlab/node-exporter

    - create new directory /var/log/gitlab/node-exporter[2024-11-03T19:52:47-05:00] INFO: directory[/var/log/gitlab/node-exporter] owner changed to 995
[2024-11-03T19:52:47-05:00] INFO: directory[/var/log/gitlab/node-exporter] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'gitlab-prometheus'
  * directory[/opt/gitlab/etc/node-exporter/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/node-exporter/env] action create
    * directory[/opt/gitlab/etc/node-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/node-exporter/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * directory[/var/opt/gitlab/node-exporter/textfile_collector] action create[2024-11-03T19:52:47-05:00] INFO: directory[/var/opt/gitlab/node-exporter/textfile_collector] created directory /var/opt/gitlab/node-e
xporter/textfile_collector

    - create new directory /var/opt/gitlab/node-exporter/textfile_collector[2024-11-03T19:52:47-05:00] INFO: directory[/var/opt/gitlab/node-exporter/textfile_collector] owner changed to 995
[2024-11-03T19:52:47-05:00] INFO: directory[/var/opt/gitlab/node-exporter/textfile_collector] mode changed to 755

    - change mode from '' to '0755'
    - change owner from '' to 'gitlab-prometheus'
  * service[node-exporter] action nothing (skipped due to action :nothing)
  * runit_service[node-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/node-exporter] action create (up to date)
    * template[/opt/gitlab/sv/node-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/node-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/node-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/node-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_node-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/node-exporter/config] action create[2024-11-03T19:52:47-05:00] INFO: link[/var/log/gitlab/node-exporter/config] created

      - create symlink at /var/log/gitlab/node-exporter/config to /opt/gitlab/sv/node-exporter/log/config
    * template[/opt/gitlab/sv/node-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/node-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for node-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/node-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/node-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/node-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/node-exporter] action create (up to date)
    * file[/opt/gitlab/sv/node-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/node-exporter] action create (up to date)
    * ruby_block[wait for node-exporter service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/node-exporter/current] action touch (skipped due to only_if)
  
  * execute[/opt/gitlab/bin/gitlab-ctl start node-exporter] action run
    [execute] ok: run: node-exporter: (pid 3862623) 1s
[2024-11-03T19:52:49-05:00] INFO: execute[/opt/gitlab/bin/gitlab-ctl start node-exporter] ran successfully
    - execute /opt/gitlab/bin/gitlab-ctl start node-exporter
  * consul_service[node-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/node-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::gitlab-exporter
  * directory[/var/opt/gitlab/gitlab-exporter] action create[2024-11-03T19:52:49-05:00] INFO: directory[/var/opt/gitlab/gitlab-exporter] created directory /var/opt/gitlab/gitlab-exporter

    - create new directory /var/opt/gitlab/gitlab-exporter[2024-11-03T19:52:49-05:00] INFO: directory[/var/opt/gitlab/gitlab-exporter] owner changed to 998
[2024-11-03T19:52:49-05:00] INFO: directory[/var/opt/gitlab/gitlab-exporter] mode changed to 755

    - change mode from '' to '0755'
    - change owner from '' to 'git'
  * directory[/var/log/gitlab/gitlab-exporter] action create[2024-11-03T19:52:49-05:00] INFO: directory[/var/log/gitlab/gitlab-exporter] created directory /var/log/gitlab/gitlab-exporter

    - create new directory /var/log/gitlab/gitlab-exporter[2024-11-03T19:52:49-05:00] INFO: directory[/var/log/gitlab/gitlab-exporter] owner changed to 998
[2024-11-03T19:52:49-05:00] INFO: directory[/var/log/gitlab/gitlab-exporter] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'git'
  * env_dir[/opt/gitlab/etc/gitlab-exporter/env] action create
    * directory[/opt/gitlab/etc/gitlab-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/MALLOC_CONF] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_INIT_SLOTS] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/SSL_CERT_FILE] action create (up to date)
     (up to date)
  * template[/var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml] action create[2024-11-03T19:52:49-05:00] INFO: template[/var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml] created file /var/opt/gitlab/gitlab-
exporter/gitlab-exporter.yml

    - create new file /var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml[2024-11-03T19:52:49-05:00] INFO: template[/var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml] updated file contents /var/opt/gitlab/gitl
ab-exporter/gitlab-exporter.yml

    - update content in file /var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml from none to a39370
    - suppressed sensitive resource[2024-11-03T19:52:49-05:00] INFO: template[/var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml] owner changed to 998
[2024-11-03T19:52:49-05:00] INFO: template[/var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml] mode changed to 600

    - change mode from '' to '0600'
    - change owner from '' to 'git'
  * version_file[Create version file for GitLab-Exporter] action create
    * file[/var/opt/gitlab/gitlab-exporter/RUBY_VERSION] action create[2024-11-03T19:52:49-05:00] INFO: file[/var/opt/gitlab/gitlab-exporter/RUBY_VERSION] created file /var/opt/gitlab/gitlab-exporter/RUBY_VERSIO
N

      - create new file /var/opt/gitlab/gitlab-exporter/RUBY_VERSION[2024-11-03T19:52:49-05:00] INFO: file[/var/opt/gitlab/gitlab-exporter/RUBY_VERSION] updated file contents /var/opt/gitlab/gitlab-exporter/RUBY
_VERSION

      - update content in file /var/opt/gitlab/gitlab-exporter/RUBY_VERSION from none to a57ad3
      --- /var/opt/gitlab/gitlab-exporter/RUBY_VERSION	2024-11-03 19:52:49.189762700 -0500
      +++ /var/opt/gitlab/gitlab-exporter/.chef-RUBY_VERSION20241103-3861563-g957qt	2024-11-03 19:52:49.188762735 -0500
      @@ -1 +1,2 @@
      +ruby 3.2.5 (2024-07-26 revision 31d0f1a2e7) [x86_64-linux]
  
[2024-11-03T19:52:49-05:00] INFO: version_file[Create version file for GitLab-Exporter] not queuing delayed action restart on runit_service[gitlab-exporter] (delayed), as it's already been queued
  * service[gitlab-exporter] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitlab-exporter] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitlab-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitlab-exporter/config] action create[2024-11-03T19:52:49-05:00] INFO: link[/var/log/gitlab/gitlab-exporter/config] created

      - create symlink at /var/log/gitlab/gitlab-exporter/config to /opt/gitlab/sv/gitlab-exporter/log/config
    * template[/opt/gitlab/sv/gitlab-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitlab-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitlab-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/gitlab-exporter] action create (up to date)
    * file[/opt/gitlab/sv/gitlab-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitlab-exporter] action create (up to date)
    * ruby_block[wait for gitlab-exporter service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/gitlab-exporter/current] action touch (skipped due to only_if)
  
  * execute[/opt/gitlab/bin/gitlab-ctl start gitlab-exporter] action run
    [execute] ok: run: gitlab-exporter: (pid 3862637) 0s
[2024-11-03T19:52:50-05:00] INFO: execute[/opt/gitlab/bin/gitlab-ctl start gitlab-exporter] ran successfully
    - execute /opt/gitlab/bin/gitlab-ctl start gitlab-exporter
  * consul_service[gitlab-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/gitlab-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::redis-exporter
  * directory[/var/log/gitlab/redis-exporter] action create[2024-11-03T19:52:50-05:00] INFO: directory[/var/log/gitlab/redis-exporter] created directory /var/log/gitlab/redis-exporter

    - create new directory /var/log/gitlab/redis-exporter[2024-11-03T19:52:50-05:00] INFO: directory[/var/log/gitlab/redis-exporter] owner changed to 997
[2024-11-03T19:52:50-05:00] INFO: directory[/var/log/gitlab/redis-exporter] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'gitlab-redis'
  * directory[/opt/gitlab/etc/redis-exporter/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/redis-exporter/env] action create
    * directory[/opt/gitlab/etc/redis-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/redis-exporter/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * service[redis-exporter] action nothing (skipped due to action :nothing)
  * runit_service[redis-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/redis-exporter] action create (up to date)
    * template[/opt/gitlab/sv/redis-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/redis-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_redis-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/redis-exporter/config] action create[2024-11-03T19:52:50-05:00] INFO: link[/var/log/gitlab/redis-exporter/config] created

      - create symlink at /var/log/gitlab/redis-exporter/config to /opt/gitlab/sv/redis-exporter/log/config
    * template[/opt/gitlab/sv/redis-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for redis-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/redis-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/redis-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/redis-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/redis-exporter] action create (up to date)
    * file[/opt/gitlab/sv/redis-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/redis-exporter] action create (up to date)
    * ruby_block[wait for redis-exporter service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/redis-exporter/current] action touch (skipped due to only_if)
  
  * execute[/opt/gitlab/bin/gitlab-ctl start redis-exporter] action run
    [execute] ok: run: redis-exporter: (pid 3862645) 0s
[2024-11-03T19:52:52-05:00] INFO: execute[/opt/gitlab/bin/gitlab-ctl start redis-exporter] ran successfully
    - execute /opt/gitlab/bin/gitlab-ctl start redis-exporter
  * consul_service[redis-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/redis-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::prometheus
  * directory[/var/opt/gitlab/prometheus] action create[2024-11-03T19:52:52-05:00] INFO: directory[/var/opt/gitlab/prometheus] created directory /var/opt/gitlab/prometheus

    - create new directory /var/opt/gitlab/prometheus[2024-11-03T19:52:52-05:00] INFO: directory[/var/opt/gitlab/prometheus] owner changed to 995
[2024-11-03T19:52:52-05:00] INFO: directory[/var/opt/gitlab/prometheus] mode changed to 750

    - change mode from '' to '0750'
    - change owner from '' to 'gitlab-prometheus'
  * directory[/var/opt/gitlab/prometheus/rules] action create[2024-11-03T19:52:52-05:00] INFO: directory[/var/opt/gitlab/prometheus/rules] created directory /var/opt/gitlab/prometheus/rules

    - create new directory /var/opt/gitlab/prometheus/rules[2024-11-03T19:52:52-05:00] INFO: directory[/var/opt/gitlab/prometheus/rules] owner changed to 995
[2024-11-03T19:52:52-05:00] INFO: directory[/var/opt/gitlab/prometheus/rules] mode changed to 750

    - change mode from '' to '0750'
    - change owner from '' to 'gitlab-prometheus'
  * directory[/var/log/gitlab/prometheus] action create[2024-11-03T19:52:52-05:00] INFO: directory[/var/log/gitlab/prometheus] created directory /var/log/gitlab/prometheus

    - create new directory /var/log/gitlab/prometheus[2024-11-03T19:52:52-05:00] INFO: directory[/var/log/gitlab/prometheus] owner changed to 995
[2024-11-03T19:52:52-05:00] INFO: directory[/var/log/gitlab/prometheus] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'gitlab-prometheus'
  * directory[/opt/gitlab/etc/prometheus/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/prometheus/env] action create
    * directory[/opt/gitlab/etc/prometheus/env] action create (up to date)
    * file[/opt/gitlab/etc/prometheus/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * execute[reload prometheus] action nothing (skipped due to action :nothing)
  * file[Prometheus config] action create[2024-11-03T19:52:52-05:00] INFO: file[Prometheus config] created file /var/opt/gitlab/prometheus/prometheus.yml

    - create new file /var/opt/gitlab/prometheus/prometheus.yml[2024-11-03T19:52:52-05:00] INFO: file[Prometheus config] updated file contents /var/opt/gitlab/prometheus/prometheus.yml

    - update content in file /var/opt/gitlab/prometheus/prometheus.yml from none to 0fbf9e
    --- /var/opt/gitlab/prometheus/prometheus.yml	2024-11-03 19:52:52.486649057 -0500
    +++ /var/opt/gitlab/prometheus/.chef-prometheus20241103-3861563-1z9p5p.yml	2024-11-03 19:52:52.486649057 -0500
    @@ -1,171 +1,342 @@
    +---
    +global:
    +  scrape_interval: 15s
    +  scrape_timeout: 15s
    +  external_labels: {}
    +remote_read: []
    +remote_write: []
    +rule_files:
    +- "/var/opt/gitlab/prometheus/rules/*.rules"
    +scrape_configs:
    +- job_name: prometheus
    +  static_configs:
    +  - targets:
    +    - localhost:9090
    +- job_name: nginx
    +  static_configs:
    +  - targets:
    +    - localhost:8060
    +- job_name: redis
    +  static_configs:
    +  - targets:
    +    - localhost:9121
    +- job_name: postgres
    +  static_configs:
    +  - targets:
    +    - localhost:9187
    +- job_name: node
    +  static_configs:
    +  - targets:
    +    - localhost:9100
    +- job_name: gitlab-workhorse
    +  static_configs:
    +  - targets:
    +    - localhost:9229
    +- job_name: gitlab-rails
    +  metrics_path: "/-/metrics"
    +  static_configs:
    +  - targets:
    +    - 127.0.0.1:8080
    +  relabel_configs:
    +  - source_labels:
    +    - __address__
    +    regex: 127.0.0.1:(.*)
    +    replacement: localhost:$1
    +    target_label: instance
    +- job_name: gitlab-sidekiq
    +  static_configs:
    +  - targets:
    +    - 127.0.0.1:8082
    +  relabel_configs:
    +  - source_labels:
    +    - __address__
    +    regex: 127.0.0.1:(.*)
    +    replacement: localhost:$1
    +    target_label: instance
    +- job_name: gitlab_exporter_database
    +  metrics_path: "/database"
    +  static_configs:
    +  - targets:
    +    - localhost:9168
    +- job_name: gitlab_exporter_sidekiq
    +  metrics_path: "/sidekiq"
    +  static_configs:
    +  - targets:
    +    - localhost:9168
    +- job_name: gitlab_exporter_ruby
    +  metrics_path: "/ruby"
    +  static_configs:
    +  - targets:
    +    - localhost:9168
    +- job_name: gitaly
    +  static_configs:
    +  - targets:
    +    - localhost:9236
    +- job_name: kubernetes-cadvisor
    +  scheme: https
    +  tls_config:
    +    ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    +    insecure_skip_verify: true
    +  bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
    +  kubernetes_sd_configs:
    +  - role: node
    +    api_server: https://kubernetes.default.svc:443
    +    tls_config:
    +      ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    +    bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
    +  relabel_configs:
    +  - action: labelmap
    +    regex: __meta_kubernetes_node_label_(.+)
    +  - target_label: __address__
    +    replacement: kubernetes.default.svc:443
    +  - source_labels:
    +    - __meta_kubernetes_node_name
    +    regex: "(.+)"
    +    target_label: __metrics_path__
    +    replacement: "/api/v1/nodes/${1}/proxy/metrics/cadvisor"
    +  metric_relabel_configs:
    +  - source_labels:
    +    - pod_name
    +    target_label: environment
    +    regex: "(.+)-.+-.+"
    +- job_name: kubernetes-nodes
    +  scheme: https
    +  tls_config:
    +    ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    +    insecure_skip_verify: true
    +  bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
    +  kubernetes_sd_configs:
    +  - role: node
    +    api_server: https://kubernetes.default.svc:443
    +    tls_config:
    +      ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    +    bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
    +  relabel_configs:
    +  - action: labelmap
    +    regex: __meta_kubernetes_node_label_(.+)
    +  - target_label: __address__
    +    replacement: kubernetes.default.svc:443
    +  - source_labels:
    +    - __meta_kubernetes_node_name
    +    regex: "(.+)"
    +    target_label: __metrics_path__
    +    replacement: "/api/v1/nodes/${1}/proxy/metrics"
    +  metric_relabel_configs:
    +  - source_labels:
    +    - pod_name
    +    target_label: environment
    +    regex: "(.+)-.+-.+"
    +- job_name: kubernetes-pods
    +  tls_config:
    +    ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    +    insecure_skip_verify: true
    +  bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
    +  kubernetes_sd_configs:
    +  - role: pod
    +    api_server: https://kubernetes.default.svc:443
    +    tls_config:
    +      ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    +    bearer_token_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
    +  relabel_configs:
    +  - source_labels:
    +    - __meta_kubernetes_pod_annotation_prometheus_io_scrape
    +    action: keep
    +    regex: 'true'
    +  - source_labels:
    +    - __meta_kubernetes_pod_annotation_prometheus_io_path
    +    action: replace
    +    target_label: __metrics_path__
    +    regex: "(.+)"
    +  - source_labels:
    +    - __address__
    +    - __meta_kubernetes_pod_annotation_prometheus_io_port
    +    action: replace
    +    regex: "([^:]+)(?::[0-9]+)?;([0-9]+)"
    +    replacement: "$1:$2"
    +    target_label: __address__
    +  - action: labelmap
    +    regex: __meta_kubernetes_pod_label_(.+)
    +  - source_labels:
    +    - __meta_kubernetes_namespace
    +    action: replace
    +    target_label: kubernetes_namespace
    +  - source_labels:
    +    - __meta_kubernetes_pod_name
    +    action: replace
    +    target_label: kubernetes_pod_name
    +alerting:
    +  alertmanagers:
    +  - static_configs:
    +    - targets:
    +      - localhost:9093[2024-11-03T19:52:52-05:00] INFO: file[Prometheus config] owner changed to 995
[2024-11-03T19:52:52-05:00] INFO: file[Prometheus config] mode changed to 644

    - change mode from '' to '0644'
    - change owner from '' to 'gitlab-prometheus'
  * service[prometheus] action nothing (skipped due to action :nothing)
  * runit_service[prometheus] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/prometheus] action create (up to date)
    * template[/opt/gitlab/sv/prometheus/run] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/log] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/log/main] action create (up to date)
    * template[/opt/gitlab/sv/prometheus/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_prometheus] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/prometheus/config] action create[2024-11-03T19:52:52-05:00] INFO: link[/var/log/gitlab/prometheus/config] created

      - create symlink at /var/log/gitlab/prometheus/config to /opt/gitlab/sv/prometheus/log/config
    * template[/opt/gitlab/sv/prometheus/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for prometheus service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/prometheus/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/prometheus/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/prometheus/control] action create (up to date)
    * link[/opt/gitlab/init/prometheus] action create (up to date)
    * file[/opt/gitlab/sv/prometheus/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/prometheus] action create (up to date)
    * ruby_block[wait for prometheus service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/prometheus/current] action touch (skipped due to only_if)
  
  * consul_service[prometheus] action delete
    * file[/var/opt/gitlab/consul/config.d/prometheus-service.json] action delete (up to date)
     (up to date)
  * execute[/opt/gitlab/bin/gitlab-ctl start prometheus] action run
    [execute] ok: run: prometheus: (pid 3862662) 1s
[2024-11-03T19:52:54-05:00] INFO: execute[/opt/gitlab/bin/gitlab-ctl start prometheus] ran successfully
    - execute /opt/gitlab/bin/gitlab-ctl start prometheus
  * template[/var/opt/gitlab/prometheus/rules/gitlab.rules] action create[2024-11-03T19:52:54-05:00] INFO: template[/var/opt/gitlab/prometheus/rules/gitlab.rules] created file /var/opt/gitlab/prometheus/rules/gi
tlab.rules

    - create new file /var/opt/gitlab/prometheus/rules/gitlab.rules[2024-11-03T19:52:54-05:00] INFO: template[/var/opt/gitlab/prometheus/rules/gitlab.rules] updated file contents /var/opt/gitlab/prometheus/rules
/gitlab.rules

    - update content in file /var/opt/gitlab/prometheus/rules/gitlab.rules from none to a55956
    --- /var/opt/gitlab/prometheus/rules/gitlab.rules	2024-11-03 19:52:54.126592737 -0500
    +++ /var/opt/gitlab/prometheus/rules/.chef-gitlab20241103-3861563-2n54mt.rules	2024-11-03 19:52:54.125592771 -0500
    @@ -1,492 +1,984 @@
    +---
    +groups:
    +- name: GitLab
    +  rules:
    +  - record: instance:puma_utilization:ratio
    +    expr: >
    +      sum by (instance) (
    +        puma_active_connections
    +      ) /
    +      sum by (instance) (
    +        puma_max_threads
    +      )
    +  - record: job_route_method_code:gitlab_workhorse_http_request_duration_seconds_count:rate5m
    +    expr: >
    +      sum by (job, route, method, code) (
    +        rate(gitlab_workhorse_http_request_duration_seconds_count[5m])
    +      )
    +
    +  - alert: ServiceDown
    +    expr: avg_over_time(up[5m]) * 100 < 50
    +    annotations:
    +      description: The service {{ $labels.job }} instance {{ $labels.instance }} is
    +        not responding for more than 50% of the time for 5 minutes.
    +      summary: The service {{ $labels.job }} is not responding
    +  - alert: RedisDown
    +    expr: avg_over_time(redis_up[5m]) * 100 < 50
    +    annotations:
    +      description: The Redis service {{ $labels.job }} instance {{ $labels.instance
    +        }} is not responding for more than 50% of the time for 5 minutes.
    +      summary: The Redis service {{ $labels.job }} is not responding
    +  - alert: PostgresDown
    +    expr: avg_over_time(pg_up[5m]) * 100 < 50
    +    annotations:
    +      description: The Postgres service {{ $labels.job }} instance {{ $labels.instance
    +        }} is not responding for more than 50% of the time for 5 minutes.
    +      summary: The Postgres service {{ $labels.job }} is not responding
    +  - alert: PumaQueueing
    +    expr: avg_over_time(puma_queued_connections[30m]) > 1
    +    annotations:
    +      description: Puma instance {{ $labels.instance }} is queueing requests with
    +        an average of {{ $value | printf "%.1f" }} over the last 30 minutes.
    +      summary: Puma is queueing requests
    +  - alert: HighPumaUtilization
    +    expr: instance:puma_utilization:ratio * 100 > 90
    +    for: 60m
    +    annotations:
    +      description: Puma instance {{ $labels.instance }} has more than 90% thread utilization ({{ $value | printf "%.1f" }}%) over the last 60 minutes.
    +      summary: Puma is has high utilization
    +  - alert: SidekiqJobsQueuing
    +    expr: sum by (name) (sidekiq_queue_size) > 0
    +    for: 60m
    +    annotations:
    +      summary: Sidekiq has jobs queued
    +      description: Sidekiq queue {{ $labels.name }} has {{ $value }} jobs queued for 60 minutes.
    +  - alert: HighgRPCResourceExhaustedRate
    +    expr: >
    +      sum without (grpc_code, grpc_method, grpc_service, grpc_type) (
    +        rate(grpc_server_handled_total{grpc_code="ResourceExhausted"}[5m])
    +      ) /
    +      sum without (grpc_code, grpc_method, grpc_service, grpc_type) (
    +        rate(grpc_server_handled_total[5m])
    +      ) * 100 > 1
    +    for: 60m
    +    annotations:
    +      summary: High gRPC ResourceExhausted error rate
    +      description: Job {{ $labels.job }} instance {{ $labels.instance }} gRPC is returning more than 1% ({{ $value | printf "%.1f" }}%) ResourceExhausted errors over the last 60 minutes.
    +  - alert: PostgresDatabaseDeadlocks
    +    expr: increase(pg_stat_database_deadlocks[5m]) > 0
    +    annotations:
    +      summary: Postgres database has deadlocks
    +      description: Postgres database {{ $labels.instance }} had {{ $value | printf "%d" }} deadlocks in the last 5 minutes.
    +  - alert: PostgresDatabaseDeadlockCancels
    +    expr: increase(pg_stat_database_deadlocks[5m]) > 0
    +    annotations:
    +      summary: Postgres database has queries canceled due to deadlocks
    +      description: Postgres database {{ $labels.instance }} had {{ $value | printf "%d" }} queries canceled due to deadlocks in the last 5 minutes.
    +  # Low-traffic - < 10 QPS (600 RPM)
    +  - alert: WorkhorseHighErrorRate
    +    expr: >
    +      (
    +        sum without (job, code) (
    +          job_route_method_code:gitlab_workhorse_http_request_duration_seconds_count:rate5m{code=~"5.."}
    +        ) /
    +        sum without (job,code) (
    +          job_route_method_code:gitlab_workhorse_http_request_duration_seconds_count:rate5m
    +        ) < 10
    +      ) * 100 > 50
    +    annotations:
    +      summary: Workhorse has high error rates
    +      description: Workhorse route {{ $labels.route }} method {{ $labels.method }} has more than 50% errors ({{ $value | printf "%.1f" }}%) for the last 60 minutes.
    +  # High-traffic - >= 10 QPS (600 RPM)
    +  - alert: WorkhorseHighErrorRate
    +    expr: >
    +      (
    +        sum without (job, code) (
    +          job_route_method_code:gitlab_workhorse_http_request_duration_seconds_count:rate5m{code=~"5.."}
    +        ) /
    +        sum without (job,code) (
    +          job_route_method_code:gitlab_workhorse_http_request_duration_seconds_count:rate5m
    +        ) > 10
    +      ) * 100 > 10
    +    annotations:
    +      summary: Workhorse has high error rates
    +      description: Workhorse route {{ $labels.route }} method {{ $labels.method }} has more than 10% errors ({{ $value | printf "%.1f" }}%) for the last 60 minutes.
    +
    +###
    +# These metrics are top-level GitLab Service Level Indicators (SLIs). They can
    +# be used to monitor the overall health of a GitLab instance.
    +- name: Service Level Indicators
    +  interval: 30s
    +  rules:
    +  # Service availability.
    +  - record: gitlab_sli:job:availability:ratio
    +    expr: >
    +      avg by (job) (
    +        avg_over_time(up[30s])
    +      )
    +  # Rails worker/thread capacity.
    +  - record: gitlab_sli:rails_active_connections:avg30s
    +    expr: >
    +      sum(avg_over_time(puma_active_connections[30s]))
    +  - record: gitlab_sli:rails_queued_connections:avg30s
    +    expr: >
    +      sum(avg_over_time(puma_queued_connections[30s]))
    +  - record: gitlab_sli:rails_active_connections:max30s
    +    expr: >
    +      sum(max_over_time(puma_active_connections[30s]))
    +  - record: gitlab_sli:rails_queued_connections:max30s
    +    expr: >
    +      sum(max_over_time(puma_queued_connections[30s]))
    +  - record: gitlab_sli:rails_workers:avg30s
    +    expr: >
    +      count(avg_over_time(ruby_memory_bytes[30s])) or
    +      sum(avg_over_time(puma_max_threads[30s]))
    +  # Redis CPU use.
    +  - record: gitlab_sli:redis_cpu_seconds:rate1m
    +    expr: >
    +      (sum(rate(redis_used_cpu_sys[1m])) + sum(rate(redis_used_cpu_user[1m]))) or
    +      (sum(rate(redis_cpu_sys_seconds_total[1m])) + sum(rate(redis_cpu_user_seconds_total[1m])))
    +  # Workhorse traffic.
    +  - record: gitlab_sli:code_method_route:workhorse_http_request_count:rate1m
    +    expr: >
    +      sum by (code,method,route) (
    +        rate(gitlab_workhorse_http_request_duration_seconds_count[1m])
    +      )
    +  - record: gitlab_sli:code_method_route:workhorse_http_request_duration_seconds:rate1m
    +    expr: >
    +      sum by (code,method,route) (
    +        rate(gitlab_workhorse_http_request_duration_seconds_sum[1m])
    +      )
    +# SLI - Apdex
    +- name: Service Level Indicators - Apdex
    +  interval: 1m
    +  rules:
    +  # Gitaly goserver
    +  # Satisfied -> 0.5 seconds
    +  # Acceptable -> 1 seconds
    +  - record: gitlab_sli:gitlab_component_apdex:ratio
    +    labels:
    +      job: gitaly
    +    expr: >
    +      (
    +        sum(rate(grpc_server_handling_seconds_bucket{job="gitaly",grpc_type="unary",le="0.5",grpc_method!~"GarbageCollect|Fsck|RepackFull|RepackIncremental|CommitLanguages|CreateRepositoryFromURL|UserRebase
|UserSquash|CreateFork|UserUpdateBranch|FindRemoteRepository|UserCherryPick|FetchRemote|UserRevert|FindRemoteRootRef"}[1m]))
    +        +
    +        sum(rate(grpc_server_handling_seconds_bucket{job="gitaly",grpc_type="unary",le="1",grpc_method!~"GarbageCollect|Fsck|RepackFull|RepackIncremental|CommitLanguages|CreateRepositoryFromURL|UserRebase|U
serSquash|CreateFork|UserUpdateBranch|FindRemoteRepository|UserCherryPick|FetchRemote|UserRevert|FindRemoteRootRef"}[1m]))
    +      )
    +      /
    +      2 / sum(rate(grpc_server_handling_seconds_count{job="gitaly",grpc_type="unary",grpc_method!~"GarbageCollect|Fsck|RepackFull|RepackIncremental|CommitLanguages|CreateRepositoryFromURL|UserRebase|UserSqu
ash|CreateFork|UserUpdateBranch|FindRemoteRepository|UserCherryPick|FetchRemote|UserRevert|FindRemoteRootRef"}[1m]))
    +  # Sidekiq TODO: https://gitlab.com/gitlab-org/gitlab-foss/issues/56752
    +  # - record: gitlab_sli:gitlab_component_apdex:ratio
    +  #   labels:
    +  #     job: gitlab-sidekiq
    +  #   expr: >
    +  #     (
    +  #       sum(rate(sidekiq_jobs_completion_time_seconds_bucket{le="25"}[1m]))
    +  #       +
    +  #       sum(rate(sidekiq_jobs_completion_time_seconds_bucket{le="50"}[1m]))
    +  #     )
    +  #     / 2
    +  #     /
    +  #     sum(rate(sidekiq_jobs_completion_time_seconds_count[1m]))
    +
    +  # Workhorse
    +  # Satisfied -> 1 seconds
    +  # Acceptable -> 10 seconds
    +  - record: gitlab_sli:gitlab_component_apdex:ratio
    +    labels:
    +      job: gitlab-workhorse
    +    expr: >
    +      (
    +        sum(rate(gitlab_workhorse_http_request_duration_seconds_bucket{le="1",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/api/v4/jobs/request\\z"}[1m]))
    +      +
    +        sum(rate(gitlab_workhorse_http_request_duration_seconds_bucket{le="10",route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/api/v4/jobs/request\\z"}[1m]))
    +      )
    +      /
    +      2 / sum(rate(gitlab_workhorse_http_request_duration_seconds_count{route!="^/([^/]+/){1,}[^/]+/uploads\\z",route!="^/api/v4/jobs/request\\z"}[1m]))
    +
    +# SLI - Errors
    +- name: Service Level Indicators - Errors
    +  interval: 1m
    +  rules:
    +  # PostgreSQL
    +  - record: gitlab_sli:gitlab_component_ops:rate
    +    labels:
    +      job: postgres
    +    expr: >
    +      sum(rate(pg_stat_database_xact_commit[1m])) +
    +      sum(rate(pg_stat_database_xact_rollback[1m]))
    +  - record: gitlab_sli:gitlab_component_errors:rate
    +    labels:
    +      job: postgres
    +    expr: sum(rate(pg_stat_database_xact_rollback[1m]))
    +  # Rails (Puma)
    +  - record: gitlab_sli:gitlab_component_ops:rate
    +    labels:
    +      job: gitlab-rails
    +    expr: >
    +      sum(
    +        rate(http_request_duration_seconds_count{job="gitlab-rails"}[1m])
    +      )
    +  - record: gitlab_sli:gitlab_component_errors:rate
    +    labels:
    +      job: gitlab-rails
    +    expr: >
    +      sum(
    +        rate(http_request_duration_seconds_count{job="gitlab-rails",status=~"5.."}[1m])
    +      )
    +  # Sidekiq TODO: https://gitlab.com/gitlab-org/gitlab-foss/issues/56752
    +  # - record: gitlab_sli:gitlab_component_ops:rate
    +  #   labels:
    +  #     job: gitlab-sidekiq
    +  #   expr: >
    +  #     sum (
    +  #       rate(sidekiq_jobs_started_total{job="gitlab-sidekiq"}[1m])
    +  #     )
    +  # - record: gitlab_sli:gitlab_component_errors:rate
    +  #   labels:
    +  #     job: gitlab-sidekiq
    +  #   expr: >
    +  #     sum (
    +  #       rate(sidekiq_jobs_failed_total{job="gitlab-sidekiq"}[1m])
    +  #     )
    +  # Workhorse
    +  - record: gitlab_sli:gitlab_component_ops:rate
    +    labels:
    +      job: gitlab-workhorse
    +    expr: >
    +      sum(
    +        rate(gitlab_workhorse_http_requests_total{job="gitlab-workhorse"}[1m])
    +      )
    +  - record: gitlab_sli:gitlab_component_errors:rate
    +    labels:
    +      job: gitlab-workhorse
    +    expr: >
    +      sum(
    +        rate(gitlab_workhorse_http_requests_total{job="gitlab-workhorse",code=~"5.."}[1m])
    +      )
    +  ###
    +  # Calculate service error ratios
    +  - record: gitlab_sli:gitlab_component_errors:ratio
    +    expr: >
    +      gitlab_sli:gitlab_component_errors:rate /
    +      gitlab_sli:gitlab_component_ops:rate
    +
    +- name: GitLab Saturation Ratios
    +  interval: 1m
    +  rules:
    +  # type: *, component: cpu
    +  # this measures average CPU across all the cores for the entire fleet for the given service
    +  - record: gitlab_sli:gitlab_component_saturation:ratio
    +    labels:
    +      component: 'cpu'
    +    expr: >
    +      avg(1 - rate(node_cpu_seconds_total{mode="idle"}[1m]))
    +
    +  # type: *, component: single_node_cpu
    +  # this measures the maximum cpu availability across all the codes on a single server
    +  # this can be helpful if CPU is not even distributed across the fleet.
    +  - record: gitlab_sli:gitlab_component_saturation:ratio
    +    labels:
    +      component: 'single_node_cpu'
    +    expr: >
    +      max(
    +        avg(1 - rate(node_cpu_seconds_total{mode="idle"}[1m]))
    +      )
    +
    +  - record: gitlab_sli:gitlab_component_saturation:ratio
    +    labels:
    +      component: 'disk_space'
    +    expr: >
    +      max(
    +        (
    +          (
    +            node_filesystem_size_bytes{fstype=~"ext.|xfs|nfs.?"}
    +            -
    +            node_filesystem_free_bytes{fstype=~"ext.|xfs|nfs.?"}
    +          )
    +          /
    +          node_filesystem_size_bytes{fstype=~"ext.|xfs|nfs.?"}
    +        )
    +      )
    +
    +  - record: gitlab_sli:gitlab_component_saturation:ratio
    +    labels:
    +      component: 'memory'
    +    expr: max (instance:node_memory_utilization:ratio)
    +
    +  - record: gitlab_sli:gitlab_component_saturation:ratio
    +    labels:
    +      component: 'single_threaded_cpu'
    +    expr: >
    +      clamp_max(
    +        max (
    +         (rate(redis_cpu_user_seconds_total[1m]) + rate(redis_cpu_sys_seconds_total[1m])) or
    +         (rate(redis_used_cpu_user[1m]) + rate(redis_used_cpu_sys[1m]))
    +        ),
    +        1
    +      )
    +
    +  - record: gitlab_sli:gitlab_component_saturation:ratio
    +    labels:
    +      component: 'connection_pool'
    +    expr: >
    +      clamp_max(
    +        max(
    +          max_over_time(pgbouncer_pools_server_active_connections{user="gitlab"}[1m]) /
    +          (
    +            (
    +              pgbouncer_pools_server_idle_connections{user="gitlab"} +
    +              pgbouncer_pools_server_active_connections{user="gitlab"} +
    +              pgbouncer_pools_server_testing_connections{user="gitlab"} +
    +              pgbouncer_pools_server_used_connections{user="gitlab"} +
    +              pgbouncer_pools_server_login_connections{user="gitlab"}
    +            )
    +            > 0
    +          )
    +      ), 1)
    +
    +  # type: postgres-delayed, postgres-archive, patroni
    +  - record: gitlab_sli:gitlab_component_saturation:ratio
    +    labels:
    +      component: 'active_db_connections'
    +    expr: >
    +      clamp_max(
    +        max(
    +          sum without(state) (pg_stat_activity_count{datname="gitlabhq_production", state!="idle"})
    +          /
    +          (sum without(state) (pg_stat_activity_count{datname="gitlabhq_production"}) > 0)
    +      ), 1)
    +
    +  # type: redis, redis-cache, component: redis_clients
    +  # Records the saturation of redis client connections against a redis fleet
    +  - record: gitlab_sli:gitlab_component_saturation:ratio
    +    labels:
    +      component: 'redis_clients'
    +    expr: >
    +      max(
    +        max_over_time(redis_connected_clients[1m])
    +        /
    +        redis_config_maxclients
    +      )
    +
    +  # Aggregate over all components within a service using max
    +  - record: gitlab_sli:gitlab_service_saturation:ratio
    +    expr: >
    +      max by (component) (gitlab_sli:gitlab_component_saturation:ratio)
    +
    +  # Calculate the "sapdex" - the saturation apdex for the metric. 1 < less then soft limit, 0.5 < hard limit, else 0
    +  - record: gitlab_sli:gitlab_component_saturation:ratio:sapdex
    +    expr: >
    +      clamp_min(gitlab_sli:gitlab_component_saturation:ratio <= on(component) group_left slo:max:soft:gitlab_sli:gitlab_component_saturation:ratio, 1)
    +      or
    +      clamp_min(clamp_max(gitlab_sli:gitlab_component_saturation:ratio > on(component) group_left slo:max:soft:gitlab_sli:gitlab_component_saturation:ratio, 0.5), 0.5)
    +      or
    +      clamp_max(gitlab_sli:gitlab_component_saturation:ratio > on(component) group_left slo:max:hard:gitlab_sli:gitlab_component_saturation:ratio, 0)
    +
    +  # Open file descriptors
    +  - record: gitlab_sli:gitlab_component_saturation:ratio
    +    labels:
    +      component: 'open_fds'
    +    expr: >
    +      max(
    +        max_over_time(process_open_fds[1m])
    +        /
    +        max_over_time(process_max_fds[1m])
    +      )
    +  - record: gitlab_sli:gitlab_component_saturation:ratio
    +    labels:
    +      component: 'open_ruby_fds'
    +    expr: >
    +      max(
    +        max_over_time(ruby_file_descriptors[1m])
    +        /
    +        max_over_time(ruby_process_max_fds[1m])
    +      )
    +
    +# Unlike other service metrics, we record the stats for each component independently
    +- name: GitLab Saturation Ratios Stats
    +  interval: 5m
    +  rules:
    +  # Average values for each service, over a week
    +  - record: gitlab_sli:gitlab_component_saturation:ratio:avg_over_time_1w
    +    expr: >
    +      avg_over_time(gitlab_sli:gitlab_component_saturation:ratio[1w])
    +
    +  # Using linear week-on-week growth, what prediction to we have for 2w from now?
    +  - record: gitlab_sli:gitlab_component_saturation:ratio:predict_linear_2w
    +    expr: >
    +      predict_linear(gitlab_sli:gitlab_component_saturation:ratio:avg_over_time_1w[1w], 86400 * 14)
    +
    +  # Using linear week-on-week growth, what prediction to we have for 30d from now?
    +  - record: gitlab_sli:gitlab_component_saturation:ratio:predict_linear_30d
    +    expr: >
    +      predict_linear(gitlab_sli:gitlab_component_saturation:ratio:avg_over_time_1w[1w], 86400 * 30)
    +
    +  # Sapdex, average for week
    +  - record: gitlab_sli:gitlab_component_saturation:ratio:sapdex:avg_over_time_1w
    +    expr: >
    +      avg_over_time(gitlab_sli:gitlab_component_saturation:ratio:sapdex[1w])
    +
    +  # Sapdex long term trend forecasting
    +  # Using linear week-on-week growth, what prediction to we have for 30d from now?
    +  - record: gitlab_sli:gitlab_component_saturation:ratio:sapdex:avg_over_time_1w:predict_linear_30d
    +    expr: >
    +      predict_linear(gitlab_sli:gitlab_component_saturation:ratio:sapdex:avg_over_time_1w[1w], 86400 * 30)
    +
    +###
    +# Metrics used by Usage Ping reports. These are primarily for self-managed installations.
    +# See https://docs.gitlab.com/ee/development/telemetry/usage_ping.html#prometheus-queries
    +#
    +- name: GitLab Usage Ping
    +  interval: 5m
    +  rules:
    +  ###
    +  # Application wide metrics
    +  #
    +  - record: gitlab_usage_ping:ops:rate5m
    +    labels:
    +      service: workhorse
    +      component: http_requests
    +    expr: sum (rate (gitlab_workhorse_http_requests_total[5m]))
    +
    +  # Database Primary Performance Indicator: Query apdex
    +  # Target -> 100ms
    +  # Tolerable -> 250ms
    +  - record: gitlab_usage_ping:sql_duration_apdex:ratio_rate5m
    +    expr: >
    +      (
    +        sum(rate(gitlab_sql_duration_seconds_bucket{le="0.1"}[5m]))
    +        +
    +        sum(rate(gitlab_sql_duration_seconds_bucket{le="0.25"}[5m]))
    +      )
    +      /
    +      2
    +      /
    +      (
    +        sum(rate(gitlab_sql_duration_seconds_count[5m])) > 0
    +      )
    +
    +  - record: gitlab_usage_ping:gitaly_apdex:ratio_avg_over_time_5m
    +    expr: avg_over_time(gitlab_sli:gitlab_component_apdex:ratio{job="gitaly"}[5m])
    +
    +  ###
    +  # Node level metrics
    +  #
    +  - record: gitlab_usage_ping:node_cpus:count
    +    expr: max (instance:node_cpus:count) by (instance)
    +  - record: gitlab_usage_ping:node_memory_total_bytes:max
    +    expr: max (node_memory_MemTotal_bytes) by (instance)
    +  - record: gitlab_usage_ping:node_cpu_utilization:avg
    +    expr: avg (instance:node_cpu_utilization:ratio) by (instance)
    +  - record: gitlab_usage_ping:node_memory_utilization:avg
    +    expr: avg (instance:node_memory_utilization:ratio) by (instance)
    +
    +  ###
    +  # Service level metrics
    +  #
    +  - record: gitlab_usage_ping:node_service_process_resident_memory_bytes:avg
    +    expr: avg by (instance, job) ({__name__ =~ "(ruby_){0,1}process_resident_memory_bytes", job != "gitlab_exporter_process"})
    +  - record: gitlab_usage_ping:node_service_process_unique_memory_bytes:avg
    +    expr: avg by (instance, job) ({__name__ =~ "(ruby_){0,1}process_unique_memory_bytes", job != "gitlab_exporter_process"})
    +  - record: gitlab_usage_ping:node_service_process_proportional_memory_bytes:avg
    +    expr: avg by (instance, job) ({__name__ =~ "(ruby_){0,1}process_proportional_memory_bytes", job != "gitlab_exporter_process"})
    +  - record: gitlab_usage_ping:node_service_process:count
    +    expr: >
    +      count by (instance, job) (
    +        {__name__ =~ "(ruby_){0,1}process_start_time_seconds", job != "gitlab_exporter_process"}
    +      )
    +  - record: gitlab_usage_ping:node_service_app_server_workers:sum
    +    labels:
    +      server: puma
    +    expr: sum by (instance, job) (puma_workers)[2024-11-03T19:52:54-05:00] INFO: template[/var/opt/gitlab/prometheus/rules/gitlab.rules] owner changed to 995
[2024-11-03T19:52:54-05:00] INFO: template[/var/opt/gitlab/prometheus/rules/gitlab.rules] mode changed to 644

    - change mode from '' to '0644'
    - change owner from '' to 'gitlab-prometheus'
[2024-11-03T19:52:54-05:00] INFO: template[/var/opt/gitlab/prometheus/rules/gitlab.rules] not queuing delayed action run on execute[reload prometheus] (delayed), as it's already been queued
  * template[/var/opt/gitlab/prometheus/rules/node.rules] action create[2024-11-03T19:52:54-05:00] INFO: template[/var/opt/gitlab/prometheus/rules/node.rules] created file /var/opt/gitlab/prometheus/rules/node.r
ules

    - create new file /var/opt/gitlab/prometheus/rules/node.rules[2024-11-03T19:52:54-05:00] INFO: template[/var/opt/gitlab/prometheus/rules/node.rules] updated file contents /var/opt/gitlab/prometheus/rules/nod
e.rules

    - update content in file /var/opt/gitlab/prometheus/rules/node.rules from none to bea78d
    --- /var/opt/gitlab/prometheus/rules/node.rules	2024-11-03 19:52:54.163591468 -0500
    +++ /var/opt/gitlab/prometheus/rules/.chef-node20241103-3861563-bij2yp.rules	2024-11-03 19:52:54.163591468 -0500
    @@ -1,42 +1,84 @@
    +groups:
    +- name: Node
    +  rules:
    +  - record: instance:node_cpus:count
    +    expr: count without(cpu, mode) (node_cpu{mode="idle"})
    +  - record: instance:node_cpus:count
    +    expr: count without(cpu, mode) (node_cpu_seconds_total{mode="idle"})
    +  - record: instance_cpu:node_cpu_seconds_not_idle:rate5m
    +    expr: sum without(mode) (rate(node_cpu{mode!="idle"}[5m]))
    +  - record: instance_cpu:node_cpu_seconds_not_idle:rate5m
    +    expr: sum without(mode) (rate(node_cpu_seconds_total{mode!="idle"}[5m]))
    +  - record: instance_mode:node_cpu_seconds:rate5m
    +    expr: sum without(cpu) (rate(node_cpu[5m]))
    +  - record: instance_mode:node_cpu_seconds:rate5m
    +    expr: sum without(cpu) (rate(node_cpu_seconds_total[5m]))
    +  - record: instance:node_cpu_utilization:ratio
    +    expr: sum without(mode) (instance_mode:node_cpu_seconds:rate5m{mode!="idle"})
    +      / instance:node_cpus:count
    +  - record: instance:node_memory_utilization:ratio
    +    expr: >
    +      1 - (
    +        node_memory_MemAvailable_bytes or
    +         (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)
    +      ) / node_memory_MemTotal_bytes
    +  - record: instance:node_filesystem_avail:ratio
    +    expr: node_filesystem_avail_bytes / (node_filesystem_size_bytes > 0)
    +  - alert: FilesystemAlmostFull
    +    expr: instance:node_filesystem_avail:ratio * 100 < 5 and node_filesystem_avail_bytes < 10 * 1024 * 1024 * 1024
    +    for: 10m
    +    annotations:
    +      description: The filesystem {{ $labels.device }}:{{ $labels.mountpoint }} on
    +        {{ $labels.instance }} has {{ $value | printf "%.2f" }}% space available.
    +      summary: The filesystem {{ $labels.device }}:{{ $labels.mountpoint }} is almost
    +        full
    +  - alert: FilesystemFullIn1Day
    +    expr: predict_linear(node_filesystem_avail_bytes[6h], 24 * 3600) < 0
    +    for: 30m
    +    annotations:
    +      description: The filesystem {{ $labels.device }}:{{ $labels.mountpoint }} on
    +        {{ $labels.instance }} will be full in the next 24 hours.
    +      summary: The filesystem {{ $labels.device }}:{{ $labels.mountpoint }} will be
    +        full within 24 hours[2024-11-03T19:52:54-05:00] INFO: template[/var/opt/gitlab/prometheus/rules/node.rules] owner changed to 995
[2024-11-03T19:52:54-05:00] INFO: template[/var/opt/gitlab/prometheus/rules/node.rules] mode changed to 644

    - change mode from '' to '0644'
    - change owner from '' to 'gitlab-prometheus'
[2024-11-03T19:52:54-05:00] INFO: template[/var/opt/gitlab/prometheus/rules/node.rules] not queuing delayed action run on execute[reload prometheus] (delayed), as it's already been queued
Recipe: monitoring::alertmanager
  * directory[/var/opt/gitlab/alertmanager] action create[2024-11-03T19:52:54-05:00] INFO: directory[/var/opt/gitlab/alertmanager] created directory /var/opt/gitlab/alertmanager

    - create new directory /var/opt/gitlab/alertmanager[2024-11-03T19:52:54-05:00] INFO: directory[/var/opt/gitlab/alertmanager] owner changed to 995
[2024-11-03T19:52:54-05:00] INFO: directory[/var/opt/gitlab/alertmanager] mode changed to 750

    - change mode from '' to '0750'
    - change owner from '' to 'gitlab-prometheus'
  * directory[/var/log/gitlab/alertmanager] action create[2024-11-03T19:52:54-05:00] INFO: directory[/var/log/gitlab/alertmanager] created directory /var/log/gitlab/alertmanager

    - create new directory /var/log/gitlab/alertmanager[2024-11-03T19:52:54-05:00] INFO: directory[/var/log/gitlab/alertmanager] owner changed to 995
[2024-11-03T19:52:54-05:00] INFO: directory[/var/log/gitlab/alertmanager] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'gitlab-prometheus'
  * directory[/opt/gitlab/etc/alertmanager/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/alertmanager/env] action create
    * directory[/opt/gitlab/etc/alertmanager/env] action create (up to date)
    * file[/opt/gitlab/etc/alertmanager/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * file[Alertmanager config] action create[2024-11-03T19:52:54-05:00] INFO: file[Alertmanager config] created file /var/opt/gitlab/alertmanager/alertmanager.yml

    - create new file /var/opt/gitlab/alertmanager/alertmanager.yml[2024-11-03T19:52:54-05:00] INFO: file[Alertmanager config] updated file contents /var/opt/gitlab/alertmanager/alertmanager.yml

    - update content in file /var/opt/gitlab/alertmanager/alertmanager.yml from none to 21b7be
    --- /var/opt/gitlab/alertmanager/alertmanager.yml	2024-11-03 19:52:54.190590543 -0500
    +++ /var/opt/gitlab/alertmanager/.chef-alertmanager20241103-3861563-wx57jd.yml	2024-11-03 19:52:54.189590577 -0500
    @@ -1,9 +1,18 @@
    +---
    +global: {}
    +templates: []
    +route:
    +  receiver: default-receiver
    +  routes: []
    +receivers:
    +- name: default-receiver
    +inhibit_rules: [][2024-11-03T19:52:54-05:00] INFO: file[Alertmanager config] owner changed to 995
[2024-11-03T19:52:54-05:00] INFO: file[Alertmanager config] mode changed to 644

    - change mode from '' to '0644'
    - change owner from '' to 'gitlab-prometheus'
  * service[alertmanager] action nothing (skipped due to action :nothing)
  * runit_service[alertmanager] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/alertmanager] action create (up to date)
    * template[/opt/gitlab/sv/alertmanager/run] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/log] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/log/main] action create (up to date)
    * template[/opt/gitlab/sv/alertmanager/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_alertmanager] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/alertmanager/config] action create[2024-11-03T19:52:54-05:00] INFO: link[/var/log/gitlab/alertmanager/config] created

      - create symlink at /var/log/gitlab/alertmanager/config to /opt/gitlab/sv/alertmanager/log/config
    * template[/opt/gitlab/sv/alertmanager/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for alertmanager service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/alertmanager/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/alertmanager/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/alertmanager/control] action create (up to date)
    * link[/opt/gitlab/init/alertmanager] action create (up to date)
    * file[/opt/gitlab/sv/alertmanager/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/alertmanager] action create (up to date)
    * ruby_block[wait for alertmanager service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/alertmanager/current] action touch (skipped due to only_if)
  
  * execute[/opt/gitlab/bin/gitlab-ctl start alertmanager] action run
    [execute] ok: run: alertmanager: (pid 3862686) 0s
[2024-11-03T19:52:55-05:00] INFO: execute[/opt/gitlab/bin/gitlab-ctl start alertmanager] ran successfully
    - execute /opt/gitlab/bin/gitlab-ctl start alertmanager
Recipe: monitoring::postgres-exporter
  * directory[/var/log/gitlab/postgres-exporter] action create[2024-11-03T19:52:55-05:00] INFO: directory[/var/log/gitlab/postgres-exporter] created directory /var/log/gitlab/postgres-exporter

    - create new directory /var/log/gitlab/postgres-exporter[2024-11-03T19:52:55-05:00] INFO: directory[/var/log/gitlab/postgres-exporter] owner changed to 996
[2024-11-03T19:52:55-05:00] INFO: directory[/var/log/gitlab/postgres-exporter] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'gitlab-psql'
  * directory[/var/opt/gitlab/postgres-exporter] action create[2024-11-03T19:52:55-05:00] INFO: directory[/var/opt/gitlab/postgres-exporter] created directory /var/opt/gitlab/postgres-exporter

    - create new directory /var/opt/gitlab/postgres-exporter[2024-11-03T19:52:55-05:00] INFO: directory[/var/opt/gitlab/postgres-exporter] owner changed to 996
[2024-11-03T19:52:55-05:00] INFO: directory[/var/opt/gitlab/postgres-exporter] mode changed to 700

    - change mode from '' to '0700'
    - change owner from '' to 'gitlab-psql'
  * env_dir[/opt/gitlab/etc/postgres-exporter/env] action create
    * directory[/opt/gitlab/etc/postgres-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/postgres-exporter/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/postgres-exporter/env/DATA_SOURCE_NAME] action create (up to date)
     (up to date)
  * service[postgres-exporter] action nothing (skipped due to action :nothing)
  * runit_service[postgres-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/postgres-exporter] action create (up to date)
    * template[/opt/gitlab/sv/postgres-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/postgres-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_postgres-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/postgres-exporter/config] action create[2024-11-03T19:52:55-05:00] INFO: link[/var/log/gitlab/postgres-exporter/config] created

      - create symlink at /var/log/gitlab/postgres-exporter/config to /opt/gitlab/sv/postgres-exporter/log/config
    * template[/opt/gitlab/sv/postgres-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for postgres-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/postgres-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/postgres-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/postgres-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/postgres-exporter] action create (up to date)
    * file[/opt/gitlab/sv/postgres-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/postgres-exporter] action create (up to date)
    * ruby_block[wait for postgres-exporter service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/postgres-exporter/current] action touch (skipped due to only_if)
  
  * template[/var/opt/gitlab/postgres-exporter/queries.yaml] action create[2024-11-03T19:52:55-05:00] INFO: template[/var/opt/gitlab/postgres-exporter/queries.yaml] created file /var/opt/gitlab/postgres-exporter
/queries.yaml

    - create new file /var/opt/gitlab/postgres-exporter/queries.yaml[2024-11-03T19:52:55-05:00] INFO: template[/var/opt/gitlab/postgres-exporter/queries.yaml] updated file contents /var/opt/gitlab/postgres-expor
ter/queries.yaml

    - update content in file /var/opt/gitlab/postgres-exporter/queries.yaml from none to 1fcf7b
    --- /var/opt/gitlab/postgres-exporter/queries.yaml	2024-11-03 19:52:55.897532079 -0500
    +++ /var/opt/gitlab/postgres-exporter/.chef-queries20241103-3861563-fddkko.yaml	2024-11-03 19:52:55.897532079 -0500
    @@ -1,387 +1,774 @@
    +pg_total_relation_size:
    +  query: |
    +    SELECT relnamespace::regnamespace as schemaname,
    +           relname as relname,
    +           pg_total_relation_size(oid) bytes
    +      FROM pg_class
    +     WHERE relkind = 'r';
    +  metrics:
    +    - schemaname:
    +        usage: "LABEL"
    +        description: "Name of the schema that this table is in"
    +    - relname:
    +        usage: "LABEL"
    +        description: "Name of this table"
    +    - bytes:
    +        usage: "GAUGE"
    +        description: "total disk space usage for the specified table and associated indexes"
    +
    +pg_blocked:
    +  query: |
    +    SELECT
    +      count(blocked.transactionid) AS queries,
    +      '__transaction__' AS table
    +    FROM pg_catalog.pg_locks blocked
    +    WHERE NOT blocked.granted AND locktype = 'transactionid'
    +    GROUP BY locktype
    +    UNION
    +    SELECT
    +      count(blocked.relation) AS queries,
    +      blocked.relation::regclass::text AS table
    +    FROM pg_catalog.pg_locks blocked
    +    WHERE NOT blocked.granted AND locktype != 'transactionid'
    +    GROUP BY relation
    +  metrics:
    +    - queries:
    +        usage: "GAUGE"
    +        description: "The current number of blocked queries"
    +    - table:
    +        usage: "LABEL"
    +        description: "The table on which a query is blocked"
    +
    +pg_oldest_blocked:
    +  query: |
    +    SELECT coalesce(extract('epoch' from max(clock_timestamp() - state_change)), 0) age_seconds
    +      FROM pg_stat_activity
    +     WHERE wait_event_type = 'Lock'
    +       AND state='active'
    +  metrics:
    +    - age_seconds:
    +        usage: "GAUGE"
    +        description: "Largest number of seconds any transaction is currently waiting on a lock"
    +
    +pg_slow:
    +  query: |
    +    SELECT COUNT(*) AS queries
    +    FROM pg_stat_activity
    +    WHERE state = 'active' AND (now() - query_start) > '1 seconds'::interval
    +  metrics:
    +    - queries:
    +        usage: "GAUGE"
    +        description: "Current number of slow queries"
    +
    +pg_long_running_transactions:
    +  query: |
    +    SELECT COUNT(*) as transactions,
    +    coalesce(MAX(EXTRACT(EPOCH FROM (clock_timestamp() - xact_start))), 0) AS age_in_seconds
    +    FROM pg_stat_activity
    +    WHERE state is distinct from 'idle' AND (now() - xact_start) > '1 minutes'::interval AND query not like 'autovacuum:%'
    +  metrics:
    +    - transactions:
    +        usage: "GAUGE"
    +        description: "Current number of long running transactions"
    +    - age_in_seconds:
    +        usage: "GAUGE"
    +        description: "The current maximum transaction age in seconds"
    +
    +pg_stuck_idle_in_transaction:
    +  query: |
    +    SELECT COUNT(*) AS queries
    +    FROM pg_stat_activity
    +    WHERE state = 'idle in transaction' AND (now() - query_start) > '10 minutes'::interval
    +  metrics:
    +    - queries:
    +        usage: "GAUGE"
    +        description: "Current number of queries that are stuck being idle in transactions"
    +
    +# All xid and lsn metrics here are reported mod 2^52 to ensure they
    +# fit within a float for Prometheus :( Really annoying that counters
    +# aren't stored in a 64-bit integer. Note that for queries that report
    +# floats this only works because postgres_exporter does know to set
    +# extra_float_digits (which it sets to 2). So they don't print in
    +# exponential notation and precision is maintained up to 2^53-1.
    +
    +pg_vacuum:
    +  query: |
    +    SELECT
    +      COUNT(*) AS queries,
    +      MAX(EXTRACT(EPOCH FROM (clock_timestamp() - query_start))) AS age_in_seconds
    +    FROM pg_catalog.pg_stat_activity
    +    WHERE state = 'active' AND trim(query) ~* '\AVACUUM (?!ANALYZE)'
    +  metrics:
    +    - queries:
    +        usage: "GAUGE"
    +        description: "The current number of VACUUM queries"
    +    - age_in_seconds:
    +        usage: "GAUGE"
    +        description: "The current maximum VACUUM query age in seconds"
    +
    +pg_vacuum_analyze:
    +  query: |
    +    SELECT
    +      COUNT(*) AS queries,
    +      MAX(EXTRACT(EPOCH FROM (clock_timestamp() - query_start))) AS age_in_seconds
    +    FROM pg_catalog.pg_stat_activity
    +    WHERE state = 'active' AND trim(query) ~* '\AVACUUM ANALYZE'
    +  metrics:
    +    - queries:
    +        usage: "GAUGE"
    +        description: "The current number of VACUUM ANALYZE queries"
    +    - age_in_seconds:
    +        usage: "GAUGE"
    +        description: "The current maximum VACUUM ANALYZE query age in seconds"
    +
    +pg_stuck_idle_in_transaction:
    +  query: |
    +    SELECT COUNT(*) AS queries
    +    FROM pg_stat_activity
    +    WHERE state = 'idle in transaction' AND (now() - query_start) > '10 minutes'::interval
    +  metrics:
    +    - queries:
    +        usage: "GAUGE"
    +        description: "Current number of queries that are stuck being idle in transactions"
    +
    +pg_vacuum_queue:
    +  #master: true 
    +  # Until postgres_exporter is upgraded. See 
    +  # https://gitlab.com/gitlab-org/omnibus-gitlab/issues/4887
    +  query: |
    +    with table_opts_vs_statistic as (
    +      select
    +        pg_class.oid,
    +        pg_class.relname,
    +        coalesce(nspname, 'public') as schemaname,
    +        pg_class.relpages,
    +        pg_class.reltuples,
    +        case
    +          when array_to_string(reloptions, '') like '%autovacuum_vacuum_threshold%' then regexp_replace(array_to_string(reloptions, ''), '.*autovacuum_vacuum_threshold=([0-9.]+).*', E'\\1')::int8
    +          else current_setting('autovacuum_vacuum_threshold')::int8
    +        end as autovacuum_vacuum_threshold,
    +        case
    +          when array_to_string(reloptions, '') like '%autovacuum_vacuum_scale_factor%' then regexp_replace(array_to_string(reloptions, ''), '.*autovacuum_vacuum_scale_factor=([0-9.]+).*', E'\\1')::numeric
    +          else current_setting('autovacuum_vacuum_scale_factor')::numeric
    +        end as autovacuum_vacuum_scale_factor,
    +        case when array_to_string(reloptions, '') ~ 'autovacuum_enabled=(false|off)' then false else true end as autovacuum_enabled,
    +        n_dead_tup,
    +        last_autovacuum,
    +        last_vacuum
    +      from pg_class
    +      join pg_namespace ns on relnamespace = ns.oid 
    +      join pg_stat_all_tables psat  on psat.relid  = pg_class.oid
    +      where relkind in ('r','m') 
    +    ), p as (
    +      select pgspv.*,a.query,a.wait_event_type,a.wait_event,a.query_start
    +      from pg_stat_progress_vacuum pgspv
    +      left join pg_stat_activity a using (pid)
    +    ) 
    +    select
    +      table_opts_vs_statistic.schemaname as schemaname,
    +      table_opts_vs_statistic.relname as relname,
    +      round((100 * table_opts_vs_statistic.n_dead_tup::numeric / nullif(table_opts_vs_statistic.reltuples, 0))::numeric, 2) as dead_tup_pct,
    +      table_opts_vs_statistic.reltuples::numeric as reltuples,
    +      table_opts_vs_statistic.n_dead_tup,
    +      (relpages::bigint*8*1024) AS table_size_bytes,
    +      'V. Threshold:' || table_opts_vs_statistic.autovacuum_vacuum_threshold
    +        || ', V. Scale Factor: ' || (table_opts_vs_statistic.autovacuum_vacuum_scale_factor)::numeric *100 ||' %'
    +        || case when not autovacuum_enabled then ', DISABLED' else ', enabled' end as "effective_settings",
    +      case
    +        when last_autovacuum > coalesce(last_vacuum, '0001-01-01') then last_autovacuum::timestamp(0)
    +        when last_vacuum is not null then last_vacuum::timestamp(0)
    +        else null
    +      end as "last_vacuumed",
    +      case
    +        when last_autovacuum > coalesce(last_vacuum, '0001-01-01') then 'auto'
    +        when last_vacuum is not null then 'manual'
    +        else null
    +      end as "type",
    +      coalesce(p.phase, 'in queue') as status,
    +      p.pid as pid,
    +      coalesce  (p.query,'')as  action,
    +      case when p.pid is null then null else coalesce(wait_event_type ||'.'|| wait_event, 'f') end as waiting,
    +      round(100.0 * p.heap_blks_scanned / nullif(p.heap_blks_total, 0), 1) AS scanned_pct,
    +      round(100.0 * p.heap_blks_vacuumed / nullif(p.heap_blks_total, 0), 1) AS vacuumed_pct,
    +      extract ('epoch' from  now()-query_start) elapsed_time
    +    from 
    +    table_opts_vs_statistic
    +    full outer join p on p.relid = table_opts_vs_statistic.oid and p.datname = current_database()
    +    where
    +      table_opts_vs_statistic.relpages >= 8
    +      and  autovacuum_vacuum_threshold + (autovacuum_vacuum_scale_factor::numeric * table_opts_vs_statistic.reltuples) < table_opts_vs_statistic.n_dead_tup
    +  metrics:
    +    - schemaname:
    +        usage: "LABEL"
    +        description: "Table Schema"
    +    - relname:
    +        usage: "LABEL"
    +        description: "Table name"
    +    - dead_tup_pct:
    +        usage: "GAUGE"
    +        description: "Estimated dead tuples percent"
    +    - reltuples:
    +        usage: "GAUGE"
    +        description: "Number of tuples in table"
    +    - n_dead_tup:
    +        usage: "GAUGE"
    +        description: "Estimated number of dead tuples"
    +    - table_size_bytes:
    +        usage: "GAUGE"
    +        description: "Estimated table size"
    +    - effective_settings:
    +        usage: "LABEL"
    +        description: "Autovacuums settings"
    +    - last_vacuumed:
    +        usage: "GAUGE"
    +        description: "Last time at which this table was vacuumed"
    +    - type:
    +        usage: "LABEL"
    +        description: "Last vacuum type"
    +    - status:
    +        usage: "LABEL"
    +        description: "Vacuum actual status"
    +    - pid:
    +        usage: "GAUGE"
    +        description: "Vacuum process id"
    +    - action:
    +        usage: "LABEL"
    +        description: "Type of vacuum executed"
    +    - waiting:
    +        usage: "LABEL"
    +        description: "Vacuum queue status"
    +    - scanned_pct:
    +        usage: "GAUGE"
    +        description: "Estimated rows scanned percent"
    +    - vacuumed_pct:
    +        usage: "GAUGE"
    +        description: "Estimated vacuumed rows percent"
    +    - elapsed_time:
    +        usage: "GAUGE"
    +        description: "Elapsed time vacuuming (in seconds)"
    +
    +#
    +# This query extracts marginalia comments from pg_stat_activity and provides a sampled summary of the type of
    +# endpoints that are actively making calls
    +#
    +pg_stat_activity_marginalia_sampler:
    +  query: >
    +    SELECT
    +      usename AS usename,
    +      a.matches[1] AS application,
    +      a.matches[2] AS endpoint,
    +      a.matches[3] AS command,
    +      a.wait_event AS wait_event,
    +      a.state AS state,
    +      a.wait_event_type AS wait_event_type,
    +      COUNT(*) active_count,
    +     MAX(coalesce(age_in_seconds, 0)) AS max_tx_age_in_seconds
    +    FROM (
    +      SELECT
    +        usename,
    +        regexp_matches(query, '^\s*(?:\/\*(?:application:(\w+),?)?(?:correlation_id:\w+,?)?(?:jid:\w+,?)?(?:endpoint_id:([\w/\-\.:\#\s]+),?)?.*?\*\/)?\s*(\w+)') AS matches,
    +        state,
    +        wait_event,
    +        wait_event_type,
    +        EXTRACT(EPOCH FROM (clock_timestamp() - xact_start)) AS age_in_seconds
    +      FROM
    +        pg_stat_activity
    +      ) a
    +    GROUP BY usename, application, endpoint, command, state, wait_event, wait_event_type
    +    ORDER BY active_count DESC
    +  metrics:
    +    - usename:
    +        usage: LABEL
    +        description: The user running the command
    +    - application:
    +        usage: LABEL
    +        description: Name of the application as presented in marginalia comment
    +    - endpoint:
    +        usage: LABEL
    +        description: Name of the web endpoint or sidekiq job as presented in marginalia comment
    +    - command:
    +        usage: LABEL
    +        description: The first word for the running command
    +    - wait_event:
    +        usage: LABEL
    +        description: Wait event  of the activity as presented by pg_stat_activity.wait_event
    +    - state:
    +        usage: LABEL
    +        description: State of the activity as presented by pg_stat_activity.state
    +    - wait_event_type:
    +        usage: LABEL
    +        description: Wait event type of the activity as presented by pg_stat_activity.wait_event_type
    +    - active_count:
    +        usage: GAUGE
    +        description: Number of active queries at time of sample
    +    - max_tx_age_in_seconds:
    +        usage: GAUGE
    +        description: Number of active queries at time of sample
    +
    +# This records long running autovacuum processes. The reason we limit to
    +# long-running processes is to avoid cardinality problems in prometheus. Since
    +# we're only concerned about long running processes we limit the output only to
    +# those that take longer than 5 minutes.
    +pg_stat_activity_autovacuum:
    +  query: >
    +    SELECT
    +      SPLIT_PART(query, '.', 2) AS relname,
    +      EXTRACT(EPOCH FROM (clock_timestamp() - xact_start)) AS age_in_seconds
    +    FROM
    +      pg_stat_activity
    +    WHERE
    +      query like 'autovacuum:%'
    +    AND
    +      EXTRACT(EPOCH FROM (clock_timestamp() - xact_start)) > 300
    +  metrics:
    +    - relname:
    +        usage: LABEL
    +        description: The table being vacuumed
    +    - age_in_seconds:
    +        usage: GAUGE
    +        description: The age of the vacuum process in seconds
    +
    +# Keep track of the number of the total number of autovacuum workers
    +# currently active
    +pg_stat_activity_autovacuum_active:
    +  query: >
    +    SELECT v.phase,
    +           CASE
    +             when a.query ~ '^autovacuum.*to prevent wraparound' then 'wraparound'
    +             when a.query ~* '^vacuum' then 'user'
    +             when a.pid is null then null
    +             ELSE 'regular'
    +           END as mode,
    +           count(1) as workers_count
    +      FROM pg_stat_progress_vacuum v
    +      LEFT JOIN pg_stat_activity a using (pid)
    +     GROUP BY 1,2
    +  metrics:
    +    - phase:
    +        usage: LABEL
    +        description: Vacuum phase
    +    - mode:
    +        usage: LABEL
    +        description: Vacuum mode
    +    - workers_count:
    +        usage: GAUGE
    +        description: The number of active autovacuum workers in this state
    +
    +#
    +# This query extracts marginalia metadata from pg_stat_activity and provides a sampled summary about the long running transactions.
    +#
    +pg_long_running_transactions_marginalia:
    +  query: >
    +    SELECT
    +      activity.matches[1] AS application,
    +      activity.matches[2] AS endpoint,
    +      MAX(age_in_seconds) AS max_age_in_seconds
    +    FROM (
    +      SELECT
    +        regexp_matches(query, '^\s*(?:\/\*(?:application:(\w+),?)?(?:correlation_id:\w+,?)?(?:jid:\w+,?)?(?:endpoint_id:([\w/\-\.:\#\s]+),?)?.*?\*\/)?\s*(\w+)') AS matches,
    +        EXTRACT(EPOCH FROM (clock_timestamp() - xact_start)) AS age_in_seconds
    +      FROM
    +        pg_stat_activity
    +      WHERE state <> 'idle'
    +        AND (clock_timestamp() - xact_start) > '30 seconds'::interval
    +        AND query NOT LIKE 'autovacuum:%'
    +      ) activity
    +    GROUP BY application, endpoint
    +    ORDER BY max_age_in_seconds DESC
    +  metrics:
    +    - application:
    +        usage: LABEL
    +        description: Name of the application as presented in marginalia comment
    +    - endpoint:
    +        usage: LABEL
    +        description: Name of the web endpoint or sidekiq job as presented in marginalia comment
    +    - max_age_in_seconds:
    +        usage: GAUGE
    +        description: The current maximum transaction age in seconds[2024-11-03T19:52:55-05:00] INFO: template[/var/opt/gitlab/postgres-exporter/queries.yaml] owner changed to 996
[2024-11-03T19:52:55-05:00] INFO: template[/var/opt/gitlab/postgres-exporter/queries.yaml] mode changed to 644

    - change mode from '' to '0644'
    - change owner from '' to 'gitlab-psql'
  * execute[/opt/gitlab/bin/gitlab-ctl start postgres-exporter] action run
    [execute] ok: run: postgres-exporter: (pid 3862705) 0s
[2024-11-03T19:52:57-05:00] INFO: execute[/opt/gitlab/bin/gitlab-ctl start postgres-exporter] ran successfully
    - execute /opt/gitlab/bin/gitlab-ctl start postgres-exporter
  * consul_service[postgres-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/postgres-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: gitlab::gitlab-backup-cli_disable
  * template[/opt/gitlab/etc/gitlab-backup-cli-config.yml] action delete (up to date)
  * account[GitLab Backup User] action remove
    * linux_user[gitlab-backup] action remove (up to date)
     (up to date)
  * group[git] action manage (up to date)
  * group[gitlab-psql] action manage (up to date)
  * group[registry] action manage (up to date)
Recipe: gitlab::database_reindexing_disable
  * crond_job[database-reindexing] action delete
    * file[/var/opt/gitlab/crond/database-reindexing] action delete (up to date)
     (up to date)
Recipe: gitlab-ee::sentinel_disable
  * sentinel_service[redis] action disable
    * service[sentinel] action nothing (skipped due to action :nothing)
    * runit_service[sentinel] action disable
      * ruby_block[disable sentinel] action run (skipped due to only_if)
       (up to date)
    * file[/var/opt/gitlab/sentinel/sentinel.conf] action delete (up to date)
    * directory[/var/opt/gitlab/sentinel] action delete (up to date)
     (up to date)
Recipe: gitlab-ee::geo-postgresql_disable
  * service[geo-postgresql] action nothing (skipped due to action :nothing)
  * runit_service[geo-postgresql] action disable
    * ruby_block[disable geo-postgresql] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab-ee::geo-logcursor_disable
  * service[geo-logcursor] action nothing (skipped due to action :nothing)
  * runit_service[geo-logcursor] action disable
    * ruby_block[disable geo-logcursor] action run (skipped due to only_if)
     (up to date)
Recipe: consul::disable_daemon
  * service[consul] action nothing (skipped due to action :nothing)
  * runit_service[consul] action disable
    * ruby_block[disable consul] action run (skipped due to only_if)
     (up to date)
Recipe: pgbouncer::disable
  * service[pgbouncer] action nothing (skipped due to action :nothing)
  * runit_service[pgbouncer] action disable
    * ruby_block[disable pgbouncer] action run (skipped due to only_if)
     (up to date)
Recipe: patroni::disable
  * service[patroni] action nothing (skipped due to action :nothing)
  * runit_service[patroni] action disable
    * ruby_block[disable patroni] action run (skipped due to only_if)
     (up to date)
Recipe: spamcheck::disable
  * service[spamcheck] action nothing (skipped due to action :nothing)
  * runit_service[spamcheck] action disable
    * ruby_block[disable spamcheck] action run (skipped due to only_if)
     (up to date)
  * service[spam-classifier] action nothing (skipped due to action :nothing)
  * runit_service[spam-classifier] action disable
    * ruby_block[disable spam-classifier] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab-ee::geo-secondary_disable
  * templatesymlink[Removes the geo database settings from database.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/database.yml to /var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)
     (up to date)
Recipe: gitlab-ee::suggested_reviewers
  * templatesymlink[Create a gitlab_suggested_reviewers_secret and create a symlink to Rails root] action create[2024-11-03T19:52:57-05:00] WARN: only_if block for templatesymlink[Create a gitlab_suggested_revie
wers_secret and create a symlink to Rails root] returned a string, did you mean to run a command?

    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_suggested_reviewers_secret] action create[2024-11-03T19:52:57-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_suggested_reviewers_secret] crea
ted file /var/opt/gitlab/gitlab-rails/etc/gitlab_suggested_reviewers_secret

      - create new file /var/opt/gitlab/gitlab-rails/etc/gitlab_suggested_reviewers_secret[2024-11-03T19:52:57-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_suggested_reviewers_secret] updated fi
le contents /var/opt/gitlab/gitlab-rails/etc/gitlab_suggested_reviewers_secret

      - update content in file /var/opt/gitlab/gitlab-rails/etc/gitlab_suggested_reviewers_secret from none to 95ce5b
      - suppressed sensitive resource[2024-11-03T19:52:57-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_suggested_reviewers_secret] owner changed to 0
[2024-11-03T19:52:57-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_suggested_reviewers_secret] group changed to 0
[2024-11-03T19:52:57-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/gitlab_suggested_reviewers_secret] mode changed to 644

      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_suggested_reviewers_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_suggested_reviewers_secret] action create (up to date)
  
[2024-11-03T19:52:57-05:00] INFO: templatesymlink[Create a gitlab.yml and create a symlink to Rails root] sending run action to execute[clear the gitlab-rails cache] (delayed)
Recipe: gitlab::gitlab-rails
  * execute[clear the gitlab-rails cache] action run[2024-11-03T19:53:27-05:00] INFO: execute[clear the gitlab-rails cache] ran successfully

    - execute /opt/gitlab/bin/gitlab-rake cache:clear
[2024-11-03T19:53:27-05:00] INFO: version_file[Create version file for Gitaly] sending hup action to runit_service[gitaly] (delayed)
Recipe: gitaly::enable
  * runit_service[gitaly] action hup[2024-11-03T19:53:27-05:00] INFO: runit_service[gitaly] signalled (HUP)
[2024-11-03T19:53:27-05:00] INFO: runit_service[gitaly] sent hup

    - send hup to runit_service[gitaly]
[2024-11-03T19:53:27-05:00] INFO: directory[/var/opt/gitlab/gitlab-workhorse/sockets] sending restart action to runit_service[gitlab-workhorse] (delayed)
Recipe: gitlab::gitlab-workhorse
  * runit_service[gitlab-workhorse] action restart (up to date)
[2024-11-03T19:53:28-05:00] INFO: version_file[Create version file for NGINX] sending restart action to runit_service[nginx] (delayed)
Recipe: nginx::enable
  * runit_service[nginx] action restart (up to date)
[2024-11-03T19:53:28-05:00] INFO: template[/var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml] sending restart action to runit_service[gitlab-exporter] (delayed)
Recipe: monitoring::gitlab-exporter
  * runit_service[gitlab-exporter] action restart (up to date)
[2024-11-03T19:53:28-05:00] INFO: file[Prometheus config] sending run action to execute[reload prometheus] (delayed)
Recipe: monitoring::prometheus
  * execute[reload prometheus] action run[2024-11-03T19:53:30-05:00] INFO: execute[reload prometheus] ran successfully

    - execute /opt/gitlab/bin/gitlab-ctl hup prometheus
[2024-11-03T19:53:30-05:00] INFO: file[Alertmanager config] sending restart action to runit_service[alertmanager] (delayed)
Recipe: monitoring::alertmanager
  * runit_service[alertmanager] action restart (up to date)
[2024-11-03T19:53:30-05:00] INFO: template[/var/opt/gitlab/postgres-exporter/queries.yaml] sending restart action to runit_service[postgres-exporter] (delayed)
Recipe: monitoring::postgres-exporter
  * runit_service[postgres-exporter] action restart (up to date)
[2024-11-03T19:53:31-05:00] INFO: Cinc Client Run complete in 147.120490752 seconds

Running handlers:
[2024-11-03T19:53:31-05:00] INFO: Running report handlers
Running handlers complete
[2024-11-03T19:53:31-05:00] INFO: Report handlers complete
Infra Phase complete, 239/889 resources updated in 02 minutes 28 seconds

Notes:
Default admin account has been configured with following details:
Username: root
Password: You didn't opt-in to print initial root password to STDOUT.

NOTE: Because these credentials might be present in your log files in plain text, it is highly recommended to reset the password following https://docs.gitlab.com/ee/security/reset_user_password.html#reset-your-
root-password.

gitlab Reconfigured!

       *.                  *.
      ***                 ***
     *****               *****
    .******             *******
    ********            ********
   ,,,,,,,,,***********,,,,,,,,,
  ,,,,,,,,,,,*********,,,,,,,,,,,
  .,,,,,,,,,,,*******,,,,,,,,,,,,
      ,,,,,,,,,*****,,,,,,,,,.
         ,,,,,,,****,,,,,,
            .,,,***,,,,
                ,*,.
  


     _______ __  __          __
    / ____(_) /_/ /   ____ _/ /_
   / / __/ / __/ /   / __ `/ __ \
  / /_/ / / /_/ /___/ /_/ / /_/ /
  \____/_/\__/_____/\__,_/_.___/
  

Thank you for installing GitLab!
GitLab should be available at http://localhost:8080

For a comprehensive list of configuration options please see the Omnibus GitLab readme
https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/README.md

Help us improve the installation experience, let us know how we did with a 1 minute survey:
https://gitlab.fra1.qualtrics.com/jfe/form/SV_6kVqZANThUQ1bZb?installation=omnibus&release=17-5

Creating user...
WARNING: Active Record does not support composite primary key.

security_findings has composite primary key. Composite primary key is ignored.
Failed to create user:
Email has already been taken
Name can't be blank
Namespace can't be blank
Checking GitLab subtasks ...

Checking GitLab Shell ...

GitLab Shell: ... GitLab Shell version >= 14.39.0 ? ... OK (14.39.0)
Running /opt/gitlab/embedded/service/gitlab-shell/bin/gitlab-shell-check
Internal API available: FAILED - Internal API unreachable
gitlab-shell self-check failed
  Try fixing it:
  Make sure GitLab is running;
  Check the gitlab-shell configuration file:
  sudo -u git -H editor /opt/gitlab/embedded/service/gitlab-shell/config.yml
  Please fix the error above and rerun the checks.

Checking GitLab Shell ... Finished

Checking Gitaly ...

Gitaly: ... default ... OK

Checking Gitaly ... Finished

Checking Sidekiq ...

Sidekiq: ... Running? ... yes
Number of Sidekiq processes (cluster/worker) ... 1/1

Checking Sidekiq ... Finished

Checking Incoming Email ...

Incoming Email: ... Reply by email is disabled in config/gitlab.yml

Checking Incoming Email ... Finished

Checking LDAP ...

LDAP: ... LDAP is disabled in config/gitlab.yml

Checking LDAP ... Finished

Checking GitLab App ...

Database config exists? ... yes
Tables are truncated? ... skipped
All migrations up? ... yes
Database contains orphaned GroupMembers? ... no
GitLab config exists? ... yes
GitLab config up to date? ... yes
Cable config exists? ... yes
Resque config exists? ... yes
Log directory writable? ... yes
Tmp directory writable? ... yes
Uploads directory exists? ... yes
Uploads directory has correct permissions? ... yes
Uploads directory tmp has correct permissions? ... skipped (no tmp uploads folder yet)
Systemd unit files or init script exist? ... skipped (omnibus-gitlab has neither init script nor systemd units)
Systemd unit files or init script up-to-date? ... skipped (omnibus-gitlab has neither init script nor systemd units)
Projects have namespace: ... can't check, you have no projects
Redis version >= 6.2.14? ... yes
Ruby version >= 3.0.6 ? ... yes (3.2.5)
Git user has default SSH configuration? ... yes
Active users: ... 1
Is authorized keys file accessible? ... yes
GitLab configured to store new projects in hashed storage? ... yes
All projects are in hashed storage? ... yes
Elasticsearch version 7.x-8.x or OpenSearch version 1.x ... skipped (Advanced Search is disabled)
All migrations must be finished before doing a major upgrade ... skipped (Advanced Search is disabled)

Checking GitLab App ... Finished


Checking GitLab subtasks ... Finished

[2024-11-03T19:55:31-05:00] INFO: Started Cinc Zero at chefzero://localhost:1 with repository at /opt/gitlab/embedded (One version per cookbook)
Cinc Client, version 18.3.0
Patents: https://www.chef.io/patents
Infra Phase starting
[2024-11-03T19:55:31-05:00] INFO: *** Cinc Client 18.3.0 ***
[2024-11-03T19:55:31-05:00] INFO: Platform: x86_64-linux
[2024-11-03T19:55:31-05:00] INFO: Cinc-client pid: 3863553
/opt/gitlab/embedded/lib/ruby/gems/3.2.0/gems/ffi-yajl-2.6.0/lib/ffi_yajl/encoder.rb:42: warning: undefining the allocator of T_DATA class FFI_Yajl::Ext::Encoder::YajlGen
[2024-11-03T19:55:32-05:00] INFO: Setting the run_list to ["recipe[gitlab-ee]"] from CLI options
[2024-11-03T19:55:32-05:00] INFO: Run List is [recipe[gitlab-ee]]
[2024-11-03T19:55:32-05:00] INFO: Run List expands to [gitlab-ee]
[2024-11-03T19:55:32-05:00] INFO: Starting Cinc Client Run for impromise-OptiPlex-990
[2024-11-03T19:55:32-05:00] INFO: Running start handlers
[2024-11-03T19:55:32-05:00] INFO: Start handlers complete.
Resolving cookbooks for run list: ["gitlab-ee"]
[2024-11-03T19:55:33-05:00] INFO: Loading cookbooks [gitlab-ee@0.0.1, package@0.1.0, gitlab@0.0.1, consul@0.1.0, patroni@0.1.0, pgbouncer@0.1.0, spamcheck@0.1.0, runit@5.1.7, logrotate@0.1.0, postgresql@0.1.0, redis@0.1.0, monitoring@0.1.0, registry@0.1.0, mattermost@0.1.0, gitaly@0.1.0, praefect@0.1.0, gitlab-kas@0.1.0, gitlab-pages@0.1.0, letsencrypt@0.1.0, nginx@0.1.0, acme@4.1.6, crond@0.1.0]
Synchronizing cookbooks:
  - gitlab-ee (0.0.1)
  - package (0.1.0)
  - gitlab (0.0.1)
  - consul (0.1.0)
  - patroni (0.1.0)
  - pgbouncer (0.1.0)
  - spamcheck (0.1.0)
  - runit (5.1.7)
  - logrotate (0.1.0)
  - postgresql (0.1.0)
  - redis (0.1.0)
  - monitoring (0.1.0)
  - registry (0.1.0)
  - mattermost (0.1.0)
  - gitaly (0.1.0)
  - praefect (0.1.0)
  - gitlab-kas (0.1.0)
  - gitlab-pages (0.1.0)
  - letsencrypt (0.1.0)
  - nginx (0.1.0)
  - acme (4.1.6)
  - crond (0.1.0)
Installing cookbook gem dependencies:
Compiling cookbooks...
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/helpers/selinux_distro_helper.rb:2: warning: already initialized constant SELinuxDistroHelper::REDHAT_RELEASE_FILE
/opt/gitlab/embedded/cookbooks/package/libraries/helpers/selinux_distro_helper.rb:2: warning: previous definition of REDHAT_RELEASE_FILE was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/helpers/selinux_distro_helper.rb:3: warning: already initialized constant SELinuxDistroHelper::OS_RELEASE_FILE
/opt/gitlab/embedded/cookbooks/package/libraries/helpers/selinux_distro_helper.rb:3: warning: previous definition of OS_RELEASE_FILE was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/helpers/secrets_helper.rb:4: warning: already initialized constant SecretsHelper::SECRETS_FILE
/opt/gitlab/embedded/cookbooks/package/libraries/helpers/secrets_helper.rb:4: warning: previous definition of SECRETS_FILE was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/helpers/secrets_helper.rb:5: warning: already initialized constant SecretsHelper::SECRETS_FILE_CHEF_ATTR
/opt/gitlab/embedded/cookbooks/package/libraries/helpers/secrets_helper.rb:5: warning: previous definition of SECRETS_FILE_CHEF_ATTR was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/helpers/secrets_helper.rb:6: warning: already initialized constant SecretsHelper::SKIP_GENERATE_SECRETS_CHEF_ATTR
/opt/gitlab/embedded/cookbooks/package/libraries/helpers/secrets_helper.rb:6: warning: previous definition of SKIP_GENERATE_SECRETS_CHEF_ATTR was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/gitlab_cluster.rb:16: warning: already initialized constant GitlabCluster::CONFIG_PATH
/opt/gitlab/embedded/cookbooks/package/libraries/gitlab_cluster.rb:16: warning: previous definition of CONFIG_PATH was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/gitlab_cluster.rb:17: warning: already initialized constant GitlabCluster::JSON_FILE
/opt/gitlab/embedded/cookbooks/package/libraries/gitlab_cluster.rb:17: warning: previous definition of JSON_FILE was here
Loading Cinc Auditor profile files:
Loading Cinc Auditor input files:
Loading Cinc Auditor waiver files:
[2024-11-03T19:55:35-05:00] INFO: Generating default secrets
[2024-11-03T19:55:37-05:00] INFO: Generating /etc/gitlab/gitlab-secrets.json file
Recipe: gitlab::default
  * directory[/etc/gitlab] action create (up to date)
[2024-11-03T19:55:37-05:00] WARN: gitlab-rails does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: Selected systemd because /run/systemd/system/ exists
[2024-11-03T19:55:37-05:00] WARN: gitlab-shell does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: gitlab-sshd does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: logrotate does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: logrotate does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: puma does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: gitlab-rails does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: gitlab-shell does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: gitlab-workhorse does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: gitlab-pages does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: gitlab-kas does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: gitaly does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: mailroom does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: gitaly does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: postgresql does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: postgresql does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: gitlab-kas does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: puma does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: sidekiq does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: gitlab-workhorse does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: node-exporter does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: gitlab-exporter does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: redis-exporter does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: prometheus does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: alertmanager does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:37-05:00] WARN: postgres-exporter does not have a log_group or default logdir mode defined. Setting to 0700.
  Converging 300 resources
  * directory[/etc/gitlab] action create (up to date)
  * directory[Create /var/opt/gitlab] action create (up to date)
  * directory[Create /var/log/gitlab] action create (up to date)
  * directory[/opt/gitlab/embedded/etc] action create (up to date)
  * template[/opt/gitlab/embedded/etc/gitconfig] action create (up to date)
Recipe: gitlab::web-server
  * account[Webserver user and group] action create
    * group[Webserver user and group] action create (up to date)
    * linux_user[Webserver user and group] action create (up to date)
     (up to date)
Recipe: gitlab::users
  * directory[/var/opt/gitlab] action create (up to date)
  * account[GitLab user and group] action create
    * group[GitLab user and group] action create (up to date)
    * linux_user[GitLab user and group] action create (up to date)
     (up to date)
  * template[/var/opt/gitlab/.gitconfig] action create (up to date)
  * directory[/var/opt/gitlab/.bundle] action create (up to date)
Recipe: gitaly::git_data_dirs
  * storage_directory[/var/opt/gitlab/git-data] action create
    * ruby_block[directory resource: /var/opt/gitlab/git-data] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/git-data/repositories] action create
    * ruby_block[directory resource: /var/opt/gitlab/git-data/repositories] action run (skipped due to not_if)
     (up to date)
Recipe: gitlab::rails_pages_shared_path
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/pages] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/pages] action run (skipped due to not_if)
     (up to date)
Recipe: gitlab::gitlab-rails
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/artifacts] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/artifacts] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/external-diffs] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/external-diffs] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/lfs-objects] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/lfs-objects] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/packages] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/packages] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/terraform_state] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/terraform_state] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/ci_secure_files] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/ci_secure_files] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/encrypted_settings] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/encrypted_settings] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/uploads] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/uploads] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-ci/builds] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-ci/builds] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/cache] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/cache] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/tmp] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/tmp] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/opt/gitlab/embedded/service/gitlab-rails/public] action create (skipped due to only_if)
  * directory[create /var/opt/gitlab/gitlab-rails/etc] action create (up to date)
  * directory[create /opt/gitlab/etc/gitlab-rails] action create (up to date)
  * directory[create /var/opt/gitlab/gitlab-rails/working] action create (up to date)
  * directory[create /var/opt/gitlab/gitlab-rails/tmp] action create (up to date)
  * directory[create /var/opt/gitlab/gitlab-rails/upgrade-status] action create (up to date)
  * directory[/var/log/gitlab/gitlab-rails] action create (up to date)
  * storage_directory[/var/opt/gitlab/backups] action create
    * ruby_block[directory resource: /var/opt/gitlab/backups] action run (skipped due to not_if)
     (up to date)
  * directory[/var/opt/gitlab/gitlab-rails] action create (up to date)
  * directory[/var/opt/gitlab/gitlab-ci] action create (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/gitlab-registry.key] action create (skipped due to only_if)
  * template[/opt/gitlab/etc/gitlab-rails-rc] action create (up to date)
  * file[/opt/gitlab/embedded/service/gitlab-rails/.secret] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/secret] action delete (up to date)
  * templatesymlink[Create a database.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/database.yml to /var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a clickhouse.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/click_house.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/click_house.yml to /var/opt/gitlab/gitlab-rails/etc/click_house.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a secrets.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml to /var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a resque.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/resque.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/resque.yml to /var/opt/gitlab/gitlab-rails/etc/resque.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create an override redis.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/redis.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/redis.yml to /var/opt/gitlab/gitlab-rails/etc/redis.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a cable.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/cable.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/cable.yml to /var/opt/gitlab/gitlab-rails/etc/cable.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a redis.cache.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.cache.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.cache.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.queues.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.queues.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.queues.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.shared_state.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.shared_state.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.shared_state.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.trace_chunks.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.trace_chunks.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.trace_chunks.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.rate_limiting.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.rate_limiting.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.rate_limiting.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.sessions.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.sessions.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.sessions.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.repository_cache.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.repository_cache.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.repository_cache.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.cluster_rate_limiting.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.cluster_rate_limiting.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.cluster_rate_limiting.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.workhorse.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.workhorse.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.workhorse.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a session_store.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/session_store.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/session_store.yml to /var/opt/gitlab/gitlab-rails/etc/session_store.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a smtp_settings.rb and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/smtp_settings.rb] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/smtp_settings.rb] action delete (up to date)
     (up to date)
  * templatesymlink[Create a gitlab.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml to /var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_workhorse_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_workhorse_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_shell_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_shell_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_incoming_email_secret and create a symlink to Rails root] action create (skipped due to only_if)
  * templatesymlink[Create a gitlab_service_desk_email_secret and create a symlink to Rails root] action create (skipped due to only_if)
  * templatesymlink[Create a gitlab_pages_secret and create a symlink to Rails root] action create[2024-11-03T19:55:39-05:00] WARN: only_if block for templatesymlink[Create a gitlab_pages_secret and create a symlink to Rails root] returned a string, did you mean to run a command?

    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_pages_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_kas_secret and create a symlink to Rails root] action create[2024-11-03T19:55:39-05:00] WARN: only_if block for templatesymlink[Create a gitlab_kas_secret and create a symlink to Rails root] returned a string, did you mean to run a command?

    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_kas_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] action create (up to date)
     (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/relative_url.rb] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/relative_url.rb] action delete (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-rails/env] action create
    * directory[/opt/gitlab/etc/gitlab-rails/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/RAILS_ENV] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/BUNDLE_GEMFILE] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/PUMA_WORKER_MAX_MEMORY] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/SIDEKIQ_MEMORY_KILLER_MAX_RSS] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/ICU_DATA] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/PYTHONPATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/EXECJS_RUNTIME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/TZ] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/SSL_CERT_FILE] action create (up to date)
     (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/tmp] action create (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/public/uploads] action create (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/log] action create (up to date)
  * link[/var/log/gitlab/gitlab-rails/sidekiq.log] action delete (skipped due to only_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/db/structure.sql] action create (up to date)
  * remote_file[/var/opt/gitlab/gitlab-rails/VERSION] action create (up to date)
  * remote_file[/var/opt/gitlab/gitlab-rails/REVISION] action create (up to date)
  * version_file[Create version file for Rails] action create
    * file[/var/opt/gitlab/gitlab-rails/RUBY_VERSION] action create (up to date)
     (up to date)
  * execute[clear the gitlab-rails cache] action nothing (skipped due to action :nothing)
  * file[/var/opt/gitlab/gitlab-rails/config.ru] action delete (up to date)
Recipe: gitlab::selinux
  * bash[Set proper security context on ssh files for selinux] action nothing (skipped due to action :nothing)
Recipe: gitlab::add_trusted_certs
  * directory[/etc/gitlab/trusted-certs] action create (up to date)
  * directory[/opt/gitlab/embedded/ssl/certs] action create (up to date)
  * file[/opt/gitlab/embedded/ssl/certs/README] action create (up to date)
  * ruby_block[Move existing certs and link to /opt/gitlab/embedded/ssl/certs] action run (skipped due to only_if)
Recipe: gitlab::default
  * service[create a temporary puma service] action nothing (skipped due to action :nothing)
  * service[create a temporary sidekiq service] action nothing (skipped due to action :nothing)
  * service[create a temporary mailroom service] action nothing (skipped due to action :nothing)
Recipe: package::runit_systemd
  * directory[/usr/lib/systemd/system] action create (up to date)
  * template[/usr/lib/systemd/system/gitlab-runsvdir.service] action create (up to date)
  * file[/etc/systemd/system/default.target.wants/gitlab-runsvdir.service] action delete (up to date)
  * file[/etc/systemd/system/basic.target.wants/gitlab-runsvdir.service] action delete (up to date)
  * execute[systemctl daemon-reload] action nothing (skipped due to action :nothing)
  * execute[systemctl enable gitlab-runsvdir] action nothing (skipped due to action :nothing)
  * execute[systemctl start gitlab-runsvdir] action nothing (skipped due to action :nothing)
Recipe: gitlab::gitlab-shell
  * storage_directory[/var/opt/gitlab/.ssh] action create
    * ruby_block[directory resource: /var/opt/gitlab/.ssh] action run (skipped due to not_if)
     (up to date)
  * directory[/var/opt/gitlab/gitlab-shell] action create (up to date)
  * directory[/var/log/gitlab/gitlab-shell] action create (up to date)
  * bash[generate gitlab-sshd host keys] action run (skipped due to only_if)
  * templatesymlink[Create a config.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-shell/config.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-shell/config.yml to /var/opt/gitlab/gitlab-shell/config.yml] action create (up to date)
     (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-shell/.gitlab_shell_secret] action create (up to date)
  * file[/var/opt/gitlab/.ssh/authorized_keys] action create_if_missing (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-sshd/env] action nothing (skipped due to action :nothing)
  * service[gitlab-sshd] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-sshd] action disable
    * ruby_block[disable gitlab-sshd] action run (skipped due to only_if)
     (up to date)
Recipe: package::sysctl
  * execute[reload all sysctl conf] action nothing (skipped due to action :nothing)
Recipe: logrotate::folders_and_configs
  * directory[/var/opt/gitlab/logrotate] action create (up to date)
  * directory[/var/opt/gitlab/logrotate/logrotate.d] action create (up to date)
  * directory[/var/log/gitlab/logrotate] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.conf] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/nginx] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/puma] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-rails] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-shell] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-pages] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-kas] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitaly] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/mailroom] action create (up to date)
Recipe: logrotate::enable
  * service[logrotate] action nothing (skipped due to action :nothing)
  * runit_service[logrotate] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/logrotate] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/run] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/log] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/log/main] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_logrotate] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/logrotate/config] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for logrotate service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/logrotate/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/logrotate/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/logrotate/control] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/control/t] action create (up to date)
    * link[/opt/gitlab/init/logrotate] action create (up to date)
    * file[/opt/gitlab/sv/logrotate/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/logrotate] action create (up to date)
    * ruby_block[wait for logrotate service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/logrotate/current] action touch (skipped due to only_if)
     (up to date)
Recipe: redis::enable
  * redis_service[redis] action create[2024-11-03T19:55:39-05:00] WARN: redis does not have a log_group or default logdir mode defined. Setting to 0700.

    * account[user and group for redis] action create
      * group[user and group for redis] action create (up to date)
      * linux_user[user and group for redis] action create (up to date)
       (up to date)
    * group[Socket group] action create (up to date)
    * directory[/var/opt/gitlab/redis] action create (up to date)
    * directory[/var/log/gitlab/redis] action create (up to date)
    * template[/var/opt/gitlab/redis/redis.conf] action create (up to date)
    * service[redis] action nothing (skipped due to action :nothing)
    * runit_service[redis] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/redis] action create (up to date)
      * template[/opt/gitlab/sv/redis/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis/log] action create (up to date)
      * directory[/opt/gitlab/sv/redis/log/main] action create (up to date)
      * template[/opt/gitlab/sv/redis/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_redis] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/redis/config] action create (up to date)
      * template[/opt/gitlab/sv/redis/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for redis service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/redis/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/redis/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/redis/control] action create (up to date)
      * link[/opt/gitlab/init/redis] action create (up to date)
      * file[/opt/gitlab/sv/redis/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/redis] action create (up to date)
      * ruby_block[wait for redis service socket] action run (skipped due to not_if)
      * file[/var/log/gitlab/redis/current] action touch (skipped due to only_if)
       (up to date)
    * ruby_block[warn pending redis restart] action run (skipped due to only_if)
     (up to date)
  * template[/opt/gitlab/etc/gitlab-redis-cli-rc] action create (up to date)
Recipe: gitaly::enable
  * directory[/var/opt/gitlab/gitaly] action create (up to date)
  * directory[/var/opt/gitlab/gitaly/run] action create (up to date)
  * directory[/var/log/gitlab/gitaly] action create (up to date)
  * directory[/var/opt/gitlab/gitaly/internal_sockets] action delete (up to date)
  * env_dir[/opt/gitlab/etc/gitaly/env] action create
    * directory[/opt/gitlab/etc/gitaly/env] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/TZ] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/PYTHONPATH] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/ICU_DATA] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/GITALY_PID_FILE] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/WRAPPER_JSON_LOGGING] action create (up to date)
     (up to date)
  * file[/var/opt/gitlab/gitaly/.gitlab_secret] action create (up to date)
  * template[Create Gitaly config.toml] action create (up to date)
  * service[gitaly] action nothing (skipped due to action :nothing)
  * runit_service[gitaly] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitaly] action create (up to date)
    * template[/opt/gitlab/sv/gitaly/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitaly/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitaly] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitaly/config] action create (up to date)
    * template[/opt/gitlab/sv/gitaly/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitaly service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitaly/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitaly/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitaly/control] action create (up to date)
    * link[/opt/gitlab/init/gitaly] action create (up to date)
    * file[/opt/gitlab/sv/gitaly/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitaly] action create (up to date)
    * ruby_block[wait for gitaly service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/gitaly/current] action touch (skipped due to only_if)
     (up to date)
  * version_file[Create version file for Gitaly] action create
    * file[/var/opt/gitlab/gitaly/VERSION] action create (up to date)
     (up to date)
  * consul_service[gitaly] action delete
    * file[/var/opt/gitlab/consul/config.d/gitaly-service.json] action delete (up to date)
     (up to date)
Recipe: postgresql::bin
  * ruby_block[check_postgresql_version] action run (skipped due to not_if)
  * ruby_block[check_postgresql_version_is_deprecated] action run (skipped due to not_if)
  * ruby_block[Link postgresql bin files to the correct version] action run (skipped due to only_if)
  * template[/opt/gitlab/etc/gitlab-psql-rc] action create (up to date)
Recipe: postgresql::user
  * account[Postgresql user and group] action create
    * group[Postgresql user and group] action create (up to date)
    * linux_user[Postgresql user and group] action create (up to date)
     (up to date)
  * directory[/var/opt/gitlab/postgresql] action create (up to date)
  * file[/var/opt/gitlab/postgresql/.profile] action create (up to date)
Recipe: postgresql::sysctl
  * gitlab_sysctl[kernel.shmmax] action create
    * directory[create /etc/sysctl.d for kernel.shmmax] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmmax.conf kernel.shmmax] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmmax.conf] action create (up to date)
    * execute[load sysctl conf kernel.shmmax] action nothing (skipped due to action :nothing)
     (up to date)
  * gitlab_sysctl[kernel.shmall] action create
    * directory[create /etc/sysctl.d for kernel.shmall] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmall.conf kernel.shmall] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmall.conf] action create (up to date)
    * execute[load sysctl conf kernel.shmall] action nothing (skipped due to action :nothing)
     (up to date)
  * gitlab_sysctl[kernel.sem] action create
    * directory[create /etc/sysctl.d for kernel.sem] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.sem.conf kernel.sem] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.sem.conf] action create (up to date)
    * execute[load sysctl conf kernel.sem] action nothing (skipped due to action :nothing)
     (up to date)
Recipe: postgresql::enable
  * directory[/var/opt/gitlab/postgresql] action create (up to date)
  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)
  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)
  * directory[/var/log/gitlab/postgresql] action create (up to date)
  * execute[/opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8] action run (skipped due to not_if)
  * file[/var/opt/gitlab/postgresql/data/server.crt] action create (up to date)
  * file[/var/opt/gitlab/postgresql/data/server.key] action create (up to date)
  * postgresql_config[gitlab] action create
    * template[/var/opt/gitlab/postgresql/data/postgresql.conf] action create (up to date)
    * template[/var/opt/gitlab/postgresql/data/runtime.conf] action create (up to date)
    * template[/var/opt/gitlab/postgresql/data/pg_hba.conf] action create (up to date)
    * template[/var/opt/gitlab/postgresql/data/pg_ident.conf] action create (up to date)
     (up to date)
Recipe: postgresql::standalone
  * service[postgresql] action nothing (skipped due to action :nothing)
  * runit_service[postgresql] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/postgresql] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/log] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/log/main] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_postgresql] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/postgresql/config] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for postgresql service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/postgresql/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/postgresql/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/postgresql/control] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/control/t] action create (up to date)
    * link[/opt/gitlab/init/postgresql] action create (up to date)
    * file[/opt/gitlab/sv/postgresql/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/postgresql] action create (up to date)
    * ruby_block[wait for postgresql service socket] action run (skipped due to not_if)
    * directory[/opt/gitlab/service/postgresql/supervise] action create (up to date)
    * directory[/opt/gitlab/service/postgresql/log/supervise] action create (up to date)
    * file[/opt/gitlab/service/postgresql/supervise/ok] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/ok] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/supervise/status] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/status] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/supervise/control] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/control] action touch (skipped due to only_if)
    * file[/var/log/gitlab/postgresql/current] action touch (skipped due to only_if)
     (up to date)
  * database_objects[postgresql] action create
    * postgresql_user[gitlab] action create
      * execute[create gitlab postgresql user] action run (skipped due to not_if)
       (up to date)
    * postgresql_user[gitlab_replicator] action create
      * execute[create gitlab_replicator postgresql user] action run (skipped due to not_if)
      * execute[set options for gitlab_replicator postgresql user] action run (skipped due to not_if)
       (up to date)
    * postgresql_database[gitlabhq_production] action create
      * execute[create database gitlabhq_production] action run (skipped due to not_if)
       (up to date)
    * postgresql_extension[pg_trgm] action enable
      * postgresql_query[enable pg_trgm extension] action run (skipped due to only_if)
       (up to date)
    * postgresql_extension[btree_gist] action enable
      * postgresql_query[enable btree_gist extension] action run (skipped due to only_if)
       (up to date)
    * postgresql_database[gitlabhq_production] action create
      * execute[create database gitlabhq_production] action run (skipped due to not_if)
       (up to date)
    * postgresql_extension[pg_trgm] action enable
      * postgresql_query[enable pg_trgm extension] action run (skipped due to only_if)
       (up to date)
    * postgresql_extension[btree_gist] action enable
      * postgresql_query[enable btree_gist extension] action run (skipped due to only_if)
       (up to date)
     (up to date)
  * version_file[Create version file for PostgreSQL] action create
    * file[/var/opt/gitlab/postgresql/VERSION] action create (up to date)
     (up to date)
  * ruby_block[warn pending postgresql restart] action run (skipped due to only_if)
  * execute[reload postgresql] action nothing (skipped due to action :nothing)
  * execute[start postgresql] action nothing (skipped due to action :nothing)
Recipe: praefect::disable
  * service[praefect] action nothing (skipped due to action :nothing)
  * runit_service[praefect] action disable
    * ruby_block[disable praefect] action run (skipped due to only_if)
     (up to date)
  * consul_service[praefect] action delete
    * file[/var/opt/gitlab/consul/config.d/praefect-service.json] action delete (up to date)
     (up to date)
Recipe: gitlab-kas::enable
  * directory[/var/opt/gitlab/gitlab-kas] action create (up to date)
  * directory[/opt/gitlab/etc/gitlab-kas] action create (up to date)
  * directory[/var/log/gitlab/gitlab-kas] action create (up to date)
  * version_file[Create version file for Gitlab KAS] action create
    * file[/var/opt/gitlab/gitlab-kas/VERSION] action create (up to date)
     (up to date)
  * file[/var/opt/gitlab/gitlab-kas/authentication_secret_file] action create (up to date)
  * file[/var/opt/gitlab/gitlab-kas/private_api_authentication_secret_file] action create (up to date)
  * file[/var/opt/gitlab/gitlab-kas/redis_password_file] action create (skipped due to only_if)
  * file[/var/opt/gitlab/gitlab-kas/redis_sentinels_password_file] action create (skipped due to only_if)
  * template[/var/opt/gitlab/gitlab-kas/gitlab-kas-config.yml] action create (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-kas/env] action create
    * directory[/opt/gitlab/etc/gitlab-kas/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-kas/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-kas/env/OWN_PRIVATE_API_URL] action create (up to date)
     (up to date)
  * service[gitlab-kas] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-kas] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitlab-kas] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-kas/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-kas/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-kas/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-kas/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitlab-kas] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitlab-kas/config] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-kas/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-kas/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitlab-kas service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-kas/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-kas/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitlab-kas/control] action create (up to date)
    * link[/opt/gitlab/init/gitlab-kas] action create (up to date)
    * file[/opt/gitlab/sv/gitlab-kas/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitlab-kas] action create (up to date)
    * ruby_block[wait for gitlab-kas service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/gitlab-kas/current] action touch (skipped due to only_if)
     (up to date)
Recipe: gitlab::database_migrations
  * ruby_block[check remote PG version] action nothing (skipped due to action :nothing)
  * rails_migration[gitlab-rails] action run[2024-11-03T19:55:43-05:00] WARN: gitlab-rails does not have a log_group or default logdir mode defined. Setting to 0700.

    * bash_hide_env[migrate gitlab-rails database] action run (skipped due to not_if)
     (up to date)
Recipe: crond::disable
  * service[crond] action nothing (skipped due to action :nothing)
  * runit_service[crond] action disable
    * ruby_block[disable crond] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::puma
  * directory[/opt/gitlab/var/puma] action create (up to date)
  * directory[/var/log/gitlab/puma] action create (up to date)
  * directory[/var/opt/gitlab/gitlab-rails/sockets] action create (up to date)
  * puma_config[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create
    * directory[/var/opt/gitlab/gitlab-rails/etc] action create (up to date)
    * template[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create (up to date)
     (up to date)
  * service[puma] action nothing (skipped due to action :nothing)
  * runit_service[puma] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/puma] action create (up to date)
    * template[/opt/gitlab/sv/puma/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log/main] action create (up to date)
    * template[/opt/gitlab/sv/puma/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_puma] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/puma/config] action create (up to date)
    * template[/opt/gitlab/sv/puma/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for puma service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/puma/control] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/t] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/h] action create (up to date)
    * link[/opt/gitlab/init/puma] action create (up to date)
    * file[/opt/gitlab/sv/puma/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/puma] action create (up to date)
    * ruby_block[wait for puma service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/puma/current] action touch (skipped due to only_if)
     (up to date)
  * consul_service[rails] action delete
    * file[/var/opt/gitlab/consul/config.d/rails-service.json] action delete (up to date)
     (up to date)
  * gitlab_sysctl[net.core.somaxconn] action create
    * directory[create /etc/sysctl.d for net.core.somaxconn] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-net.core.somaxconn.conf net.core.somaxconn] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-net.core.somaxconn.conf] action create (up to date)
    * execute[load sysctl conf net.core.somaxconn] action nothing (skipped due to action :nothing)
     (up to date)
Recipe: gitlab::sidekiq
  * sidekiq_service[sidekiq] action enable[2024-11-03T19:55:43-05:00] WARN: sidekiq does not have a log_group or default logdir mode defined. Setting to 0700.

    * directory[/var/log/gitlab/sidekiq] action create (up to date)
    * service[sidekiq] action nothing (skipped due to action :nothing)
    * runit_service[sidekiq] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/sidekiq] action create (up to date)
      * template[/opt/gitlab/sv/sidekiq/run] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/log] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/log/main] action create (up to date)
      * template[/opt/gitlab/sv/sidekiq/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_sidekiq] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/sidekiq/config] action create (up to date)
      * template[/opt/gitlab/sv/sidekiq/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for sidekiq service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/sidekiq/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/sidekiq/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/sidekiq/control] action create (up to date)
      * link[/opt/gitlab/init/sidekiq] action create (up to date)
      * file[/opt/gitlab/sv/sidekiq/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/sidekiq] action create (up to date)
      * ruby_block[wait for sidekiq service socket] action run (skipped due to not_if)
      * file[/var/log/gitlab/sidekiq/current] action touch (skipped due to only_if)
       (up to date)
     (up to date)
  * consul_service[sidekiq] action delete
    * file[/var/opt/gitlab/consul/config.d/sidekiq-service.json] action delete (up to date)
     (up to date)
Recipe: gitlab::gitlab-workhorse
  * directory[/var/opt/gitlab/gitlab-workhorse] action create (up to date)
  * directory[/var/opt/gitlab/gitlab-workhorse/sockets] action create (up to date)
  * directory[/var/log/gitlab/gitlab-workhorse] action create (up to date)
  * directory[/opt/gitlab/etc/gitlab-workhorse] action create (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-workhorse/env] action create
    * directory[/opt/gitlab/etc/gitlab-workhorse/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * service[gitlab-workhorse] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-workhorse] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitlab-workhorse] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-workhorse/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-workhorse/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-workhorse/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-workhorse/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitlab-workhorse] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitlab-workhorse/config] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-workhorse/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-workhorse/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitlab-workhorse service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-workhorse/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-workhorse/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitlab-workhorse/control] action create (up to date)
    * link[/opt/gitlab/init/gitlab-workhorse] action create (up to date)
    * file[/opt/gitlab/sv/gitlab-workhorse/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitlab-workhorse] action create (up to date)
    * ruby_block[wait for gitlab-workhorse service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/gitlab-workhorse/current] action touch (skipped due to only_if)
     (up to date)
  * consul_service[workhorse] action delete
    * file[/var/opt/gitlab/consul/config.d/workhorse-service.json] action delete (up to date)
     (up to date)
  * version_file[Create version file for Workhorse] action create
    * file[/var/opt/gitlab/gitlab-workhorse/VERSION] action create (up to date)
     (up to date)
  * template[/var/opt/gitlab/gitlab-workhorse/config.toml] action create (up to date)
Recipe: gitlab::mailroom_disable
  * service[mailroom] action nothing (skipped due to action :nothing)
  * runit_service[mailroom] action disable
    * ruby_block[disable mailroom] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::nginx
  * directory[/var/opt/gitlab/nginx] action create (up to date)
  * directory[/var/opt/gitlab/nginx/conf] action create (up to date)
  * directory[/var/log/gitlab/nginx] action create (up to date)
  * link[/var/opt/gitlab/nginx/logs] action create (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-http.conf] action create (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-smartcard-http.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-health.conf] action create (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-pages.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-registry.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-mattermost-http.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-kas.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/nginx-status.conf] action create (up to date)
  * consul_service[nginx] action delete
    * file[/var/opt/gitlab/consul/config.d/nginx-service.json] action delete (up to date)
     (up to date)
  * template[/var/opt/gitlab/nginx/conf/nginx.conf] action create (up to date)
Recipe: nginx::enable
  * service[nginx] action nothing (skipped due to action :nothing)
  * runit_service[nginx] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/nginx] action create (up to date)
    * template[/opt/gitlab/sv/nginx/run] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/log] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/log/main] action create (up to date)
    * template[/opt/gitlab/sv/nginx/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_nginx] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/nginx/config] action create (up to date)
    * template[/opt/gitlab/sv/nginx/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/nginx/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/nginx/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/nginx/control] action create (up to date)
    * link[/opt/gitlab/init/nginx] action create (up to date)
    * file[/opt/gitlab/sv/nginx/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/nginx] action create (up to date)
    * ruby_block[wait for nginx service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/nginx/current] action touch (skipped due to only_if)
     (up to date)
  * version_file[Create version file for NGINX] action create
    * file[/var/opt/gitlab/nginx/VERSION] action create (up to date)
     (up to date)
  * execute[reload nginx] action nothing (skipped due to action :nothing)
Recipe: gitlab::remote-syslog_disable
  * service[remote-syslog] action nothing (skipped due to action :nothing)
  * runit_service[remote-syslog] action disable
    * ruby_block[disable remote-syslog] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::storage-check_disable
  * service[storage-check] action nothing (skipped due to action :nothing)
  * runit_service[storage-check] action disable
    * ruby_block[disable storage-check] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab-pages::disable
  * service[gitlab-pages] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-pages] action disable
    * ruby_block[disable gitlab-pages] action run (skipped due to only_if)
     (up to date)
Recipe: registry::disable
  * service[registry] action nothing (skipped due to action :nothing)
  * runit_service[registry] action disable
    * ruby_block[disable registry] action run (skipped due to only_if)
     (up to date)
Recipe: mattermost::disable
  * service[mattermost] action nothing (skipped due to action :nothing)
  * runit_service[mattermost] action disable
    * ruby_block[disable mattermost] action run (skipped due to only_if)
     (up to date)
Recipe: letsencrypt::disable
  * crond_job[letsencrypt-renew] action delete
    * file[/var/opt/gitlab/crond/letsencrypt-renew] action delete (up to date)
     (up to date)
Recipe: gitlab::gitlab-healthcheck
  * template[/opt/gitlab/etc/gitlab-healthcheck-rc] action create (up to date)
Recipe: monitoring::pgbouncer-exporter_disable
  * service[pgbouncer-exporter] action nothing (skipped due to action :nothing)
  * runit_service[pgbouncer-exporter] action disable
    * ruby_block[disable pgbouncer-exporter] action run (skipped due to only_if)
     (up to date)
Recipe: monitoring::user
  * account[Prometheus user and group] action create
    * group[Prometheus user and group] action create (up to date)
    * linux_user[Prometheus user and group] action create (up to date)
     (up to date)
Recipe: monitoring::node-exporter
  * directory[/var/log/gitlab/node-exporter] action create (up to date)
  * directory[/opt/gitlab/etc/node-exporter/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/node-exporter/env] action create
    * directory[/opt/gitlab/etc/node-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/node-exporter/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * directory[/var/opt/gitlab/node-exporter/textfile_collector] action create (up to date)
  * service[node-exporter] action nothing (skipped due to action :nothing)
  * runit_service[node-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/node-exporter] action create (up to date)
    * template[/opt/gitlab/sv/node-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/node-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/node-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/node-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_node-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/node-exporter/config] action create (up to date)
    * template[/opt/gitlab/sv/node-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/node-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for node-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/node-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/node-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/node-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/node-exporter] action create (up to date)
    * file[/opt/gitlab/sv/node-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/node-exporter] action create (up to date)
    * ruby_block[wait for node-exporter service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/node-exporter/current] action touch (skipped due to only_if)
     (up to date)
  * consul_service[node-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/node-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::gitlab-exporter
  * directory[/var/opt/gitlab/gitlab-exporter] action create (up to date)
  * directory[/var/log/gitlab/gitlab-exporter] action create (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-exporter/env] action create
    * directory[/opt/gitlab/etc/gitlab-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/MALLOC_CONF] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_INIT_SLOTS] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/SSL_CERT_FILE] action create (up to date)
     (up to date)
  * template[/var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml] action create (up to date)
  * version_file[Create version file for GitLab-Exporter] action create
    * file[/var/opt/gitlab/gitlab-exporter/RUBY_VERSION] action create (up to date)
     (up to date)
  * service[gitlab-exporter] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitlab-exporter] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitlab-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitlab-exporter/config] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitlab-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitlab-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/gitlab-exporter] action create (up to date)
    * file[/opt/gitlab/sv/gitlab-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitlab-exporter] action create (up to date)
    * ruby_block[wait for gitlab-exporter service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/gitlab-exporter/current] action touch (skipped due to only_if)
     (up to date)
  * consul_service[gitlab-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/gitlab-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::redis-exporter
  * directory[/var/log/gitlab/redis-exporter] action create (up to date)
  * directory[/opt/gitlab/etc/redis-exporter/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/redis-exporter/env] action create
    * directory[/opt/gitlab/etc/redis-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/redis-exporter/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * service[redis-exporter] action nothing (skipped due to action :nothing)
  * runit_service[redis-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/redis-exporter] action create (up to date)
    * template[/opt/gitlab/sv/redis-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/redis-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_redis-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/redis-exporter/config] action create (up to date)
    * template[/opt/gitlab/sv/redis-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for redis-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/redis-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/redis-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/redis-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/redis-exporter] action create (up to date)
    * file[/opt/gitlab/sv/redis-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/redis-exporter] action create (up to date)
    * ruby_block[wait for redis-exporter service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/redis-exporter/current] action touch (skipped due to only_if)
     (up to date)
  * consul_service[redis-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/redis-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::prometheus
  * directory[/var/opt/gitlab/prometheus] action create (up to date)
  * directory[/var/opt/gitlab/prometheus/rules] action create (up to date)
  * directory[/var/log/gitlab/prometheus] action create (up to date)
  * directory[/opt/gitlab/etc/prometheus/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/prometheus/env] action create
    * directory[/opt/gitlab/etc/prometheus/env] action create (up to date)
    * file[/opt/gitlab/etc/prometheus/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * execute[reload prometheus] action nothing (skipped due to action :nothing)
  * file[Prometheus config] action create (up to date)
  * service[prometheus] action nothing (skipped due to action :nothing)
  * runit_service[prometheus] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/prometheus] action create (up to date)
    * template[/opt/gitlab/sv/prometheus/run] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/log] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/log/main] action create (up to date)
    * template[/opt/gitlab/sv/prometheus/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_prometheus] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/prometheus/config] action create (up to date)
    * template[/opt/gitlab/sv/prometheus/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for prometheus service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/prometheus/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/prometheus/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/prometheus/control] action create (up to date)
    * link[/opt/gitlab/init/prometheus] action create (up to date)
    * file[/opt/gitlab/sv/prometheus/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/prometheus] action create (up to date)
    * ruby_block[wait for prometheus service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/prometheus/current] action touch (skipped due to only_if)
     (up to date)
  * consul_service[prometheus] action delete
    * file[/var/opt/gitlab/consul/config.d/prometheus-service.json] action delete (up to date)
     (up to date)
  * template[/var/opt/gitlab/prometheus/rules/gitlab.rules] action create (up to date)
  * template[/var/opt/gitlab/prometheus/rules/node.rules] action create (up to date)
Recipe: monitoring::alertmanager
  * directory[/var/opt/gitlab/alertmanager] action create (up to date)
  * directory[/var/log/gitlab/alertmanager] action create (up to date)
  * directory[/opt/gitlab/etc/alertmanager/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/alertmanager/env] action create
    * directory[/opt/gitlab/etc/alertmanager/env] action create (up to date)
    * file[/opt/gitlab/etc/alertmanager/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * file[Alertmanager config] action create (up to date)
  * service[alertmanager] action nothing (skipped due to action :nothing)
  * runit_service[alertmanager] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/alertmanager] action create (up to date)
    * template[/opt/gitlab/sv/alertmanager/run] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/log] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/log/main] action create (up to date)
    * template[/opt/gitlab/sv/alertmanager/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_alertmanager] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/alertmanager/config] action create (up to date)
    * template[/opt/gitlab/sv/alertmanager/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for alertmanager service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/alertmanager/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/alertmanager/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/alertmanager/control] action create (up to date)
    * link[/opt/gitlab/init/alertmanager] action create (up to date)
    * file[/opt/gitlab/sv/alertmanager/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/alertmanager] action create (up to date)
    * ruby_block[wait for alertmanager service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/alertmanager/current] action touch (skipped due to only_if)
     (up to date)
Recipe: monitoring::postgres-exporter
  * directory[/var/log/gitlab/postgres-exporter] action create (up to date)
  * directory[/var/opt/gitlab/postgres-exporter] action create (up to date)
  * env_dir[/opt/gitlab/etc/postgres-exporter/env] action create
    * directory[/opt/gitlab/etc/postgres-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/postgres-exporter/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/postgres-exporter/env/DATA_SOURCE_NAME] action create (up to date)
     (up to date)
  * service[postgres-exporter] action nothing (skipped due to action :nothing)
  * runit_service[postgres-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/postgres-exporter] action create (up to date)
    * template[/opt/gitlab/sv/postgres-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/postgres-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_postgres-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/postgres-exporter/config] action create (up to date)
    * template[/opt/gitlab/sv/postgres-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for postgres-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/postgres-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/postgres-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/postgres-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/postgres-exporter] action create (up to date)
    * file[/opt/gitlab/sv/postgres-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/postgres-exporter] action create (up to date)
    * ruby_block[wait for postgres-exporter service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/postgres-exporter/current] action touch (skipped due to only_if)
     (up to date)
  * template[/var/opt/gitlab/postgres-exporter/queries.yaml] action create (up to date)
  * consul_service[postgres-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/postgres-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: gitlab::gitlab-backup-cli_disable
  * template[/opt/gitlab/etc/gitlab-backup-cli-config.yml] action delete (up to date)
  * account[GitLab Backup User] action remove
    * linux_user[gitlab-backup] action remove (up to date)
     (up to date)
  * group[git] action manage (up to date)
  * group[gitlab-psql] action manage (up to date)
  * group[registry] action manage (up to date)
Recipe: gitlab::database_reindexing_disable
  * crond_job[database-reindexing] action delete
    * file[/var/opt/gitlab/crond/database-reindexing] action delete (up to date)
     (up to date)
Recipe: gitlab-ee::sentinel_disable
  * sentinel_service[redis] action disable
    * service[sentinel] action nothing (skipped due to action :nothing)
    * runit_service[sentinel] action disable
      * ruby_block[disable sentinel] action run (skipped due to only_if)
       (up to date)
    * file[/var/opt/gitlab/sentinel/sentinel.conf] action delete (up to date)
    * directory[/var/opt/gitlab/sentinel] action delete (up to date)
     (up to date)
Recipe: gitlab-ee::geo-postgresql_disable
  * service[geo-postgresql] action nothing (skipped due to action :nothing)
  * runit_service[geo-postgresql] action disable
    * ruby_block[disable geo-postgresql] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab-ee::geo-logcursor_disable
  * service[geo-logcursor] action nothing (skipped due to action :nothing)
  * runit_service[geo-logcursor] action disable
    * ruby_block[disable geo-logcursor] action run (skipped due to only_if)
     (up to date)
Recipe: consul::disable_daemon
  * service[consul] action nothing (skipped due to action :nothing)
  * runit_service[consul] action disable
    * ruby_block[disable consul] action run (skipped due to only_if)
     (up to date)
Recipe: pgbouncer::disable
  * service[pgbouncer] action nothing (skipped due to action :nothing)
  * runit_service[pgbouncer] action disable
    * ruby_block[disable pgbouncer] action run (skipped due to only_if)
     (up to date)
Recipe: patroni::disable
  * service[patroni] action nothing (skipped due to action :nothing)
  * runit_service[patroni] action disable
    * ruby_block[disable patroni] action run (skipped due to only_if)
     (up to date)
Recipe: spamcheck::disable
  * service[spamcheck] action nothing (skipped due to action :nothing)
  * runit_service[spamcheck] action disable
    * ruby_block[disable spamcheck] action run (skipped due to only_if)
     (up to date)
  * service[spam-classifier] action nothing (skipped due to action :nothing)
  * runit_service[spam-classifier] action disable
    * ruby_block[disable spam-classifier] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab-ee::geo-secondary_disable
  * templatesymlink[Removes the geo database settings from database.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/database.yml to /var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)
     (up to date)
Recipe: gitlab-ee::suggested_reviewers
  * templatesymlink[Create a gitlab_suggested_reviewers_secret and create a symlink to Rails root] action create[2024-11-03T19:55:44-05:00] WARN: only_if block for templatesymlink[Create a gitlab_suggested_reviewers_secret and create a symlink to Rails root] returned a string, did you mean to run a command?

    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_suggested_reviewers_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_suggested_reviewers_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_suggested_reviewers_secret] action create (up to date)
     (up to date)
[2024-11-03T19:55:44-05:00] INFO: Cinc Client Run complete in 11.519024109 seconds

Running handlers:
[2024-11-03T19:55:44-05:00] INFO: Running report handlers
Running handlers complete
[2024-11-03T19:55:44-05:00] INFO: Report handlers complete
Infra Phase complete, 0/862 resources updated in 12 seconds
gitlab Reconfigured!

# Disable Puma from binding to a TCP port
puma['port'] = nil

# Ensure Puma only binds to a Unix socket
puma['listen'] = '/var/opt/gitlab/gitlab-rails/sockets/gitlab.socket'

# Adjust the number of workers based on system resources
puma['worker_processes'] = 2

Reconfiguring GitLab...
[2024-11-03T19:55:47-05:00] INFO: Started Cinc Zero at chefzero://localhost:1 with repository at /opt/gitlab/embedded (One version per cookbook)
Cinc Client, version 18.3.0
Patents: https://www.chef.io/patents
Infra Phase starting
[2024-11-03T19:55:47-05:00] INFO: *** Cinc Client 18.3.0 ***
[2024-11-03T19:55:47-05:00] INFO: Platform: x86_64-linux
[2024-11-03T19:55:47-05:00] INFO: Cinc-client pid: 3864056
/opt/gitlab/embedded/lib/ruby/gems/3.2.0/gems/ffi-yajl-2.6.0/lib/ffi_yajl/encoder.rb:42: warning: undefining the allocator of T_DATA class FFI_Yajl::Ext::Encoder::YajlGen
[2024-11-03T19:55:48-05:00] INFO: Setting the run_list to ["recipe[gitlab-ee]"] from CLI options
[2024-11-03T19:55:48-05:00] INFO: Run List is [recipe[gitlab-ee]]
[2024-11-03T19:55:48-05:00] INFO: Run List expands to [gitlab-ee]
[2024-11-03T19:55:48-05:00] INFO: Starting Cinc Client Run for impromise-OptiPlex-990
[2024-11-03T19:55:48-05:00] INFO: Running start handlers
[2024-11-03T19:55:48-05:00] INFO: Start handlers complete.
Resolving cookbooks for run list: ["gitlab-ee"]
[2024-11-03T19:55:49-05:00] INFO: Loading cookbooks [gitlab-ee@0.0.1, package@0.1.0, gitlab@0.0.1, consul@0.1.0, patroni@0.1.0, pgbouncer@0.1.0, spamcheck@0.1.0, runit@5.1.7, logrotate@0.1.0, postgresql@0.1.0, redis@0.1.0, monitoring@0.1.0, registry@0.1.0, mattermost@0.1.0, gitaly@0.1.0, praefect@0.1.0, gitlab-kas@0.1.0, gitlab-pages@0.1.0, letsencrypt@0.1.0, nginx@0.1.0, acme@4.1.6, crond@0.1.0]
Synchronizing cookbooks:
  - gitlab-ee (0.0.1)
  - package (0.1.0)
  - gitlab (0.0.1)
  - consul (0.1.0)
  - patroni (0.1.0)
  - pgbouncer (0.1.0)
  - spamcheck (0.1.0)
  - runit (5.1.7)
  - logrotate (0.1.0)
  - postgresql (0.1.0)
  - redis (0.1.0)
  - monitoring (0.1.0)
  - registry (0.1.0)
  - mattermost (0.1.0)
  - gitaly (0.1.0)
  - praefect (0.1.0)
  - gitlab-kas (0.1.0)
  - gitlab-pages (0.1.0)
  - nginx (0.1.0)
  - letsencrypt (0.1.0)
  - acme (4.1.6)
  - crond (0.1.0)
Installing cookbook gem dependencies:
Compiling cookbooks...
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/helpers/selinux_distro_helper.rb:2: warning: already initialized constant SELinuxDistroHelper::REDHAT_RELEASE_FILE
/opt/gitlab/embedded/cookbooks/package/libraries/helpers/selinux_distro_helper.rb:2: warning: previous definition of REDHAT_RELEASE_FILE was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/helpers/selinux_distro_helper.rb:3: warning: already initialized constant SELinuxDistroHelper::OS_RELEASE_FILE
/opt/gitlab/embedded/cookbooks/package/libraries/helpers/selinux_distro_helper.rb:3: warning: previous definition of OS_RELEASE_FILE was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/helpers/secrets_helper.rb:4: warning: already initialized constant SecretsHelper::SECRETS_FILE
/opt/gitlab/embedded/cookbooks/package/libraries/helpers/secrets_helper.rb:4: warning: previous definition of SECRETS_FILE was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/helpers/secrets_helper.rb:5: warning: already initialized constant SecretsHelper::SECRETS_FILE_CHEF_ATTR
/opt/gitlab/embedded/cookbooks/package/libraries/helpers/secrets_helper.rb:5: warning: previous definition of SECRETS_FILE_CHEF_ATTR was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/helpers/secrets_helper.rb:6: warning: already initialized constant SecretsHelper::SKIP_GENERATE_SECRETS_CHEF_ATTR
/opt/gitlab/embedded/cookbooks/package/libraries/helpers/secrets_helper.rb:6: warning: previous definition of SKIP_GENERATE_SECRETS_CHEF_ATTR was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/gitlab_cluster.rb:16: warning: already initialized constant GitlabCluster::CONFIG_PATH
/opt/gitlab/embedded/cookbooks/package/libraries/gitlab_cluster.rb:16: warning: previous definition of CONFIG_PATH was here
/opt/gitlab/embedded/cookbooks/cache/cookbooks/package/libraries/gitlab_cluster.rb:17: warning: already initialized constant GitlabCluster::JSON_FILE
/opt/gitlab/embedded/cookbooks/package/libraries/gitlab_cluster.rb:17: warning: previous definition of JSON_FILE was here
Loading Cinc Auditor profile files:
Loading Cinc Auditor input files:
Loading Cinc Auditor waiver files:
[2024-11-03T19:55:50-05:00] INFO: Generating default secrets
[2024-11-03T19:55:52-05:00] INFO: Generating /etc/gitlab/gitlab-secrets.json file
Recipe: gitlab::default
  * directory[/etc/gitlab] action create (up to date)
[2024-11-03T19:55:52-05:00] WARN: gitlab-rails does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:52-05:00] WARN: Selected systemd because /run/systemd/system/ exists
[2024-11-03T19:55:53-05:00] WARN: gitlab-shell does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: gitlab-sshd does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: logrotate does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: logrotate does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: puma does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: gitlab-rails does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: gitlab-shell does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: gitlab-workhorse does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: gitlab-pages does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: gitlab-kas does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: gitaly does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: mailroom does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: gitaly does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: postgresql does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: postgresql does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: gitlab-kas does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: puma does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: sidekiq does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: gitlab-workhorse does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: node-exporter does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: gitlab-exporter does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: redis-exporter does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: prometheus does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: alertmanager does not have a log_group or default logdir mode defined. Setting to 0700.
[2024-11-03T19:55:53-05:00] WARN: postgres-exporter does not have a log_group or default logdir mode defined. Setting to 0700.
  Converging 300 resources
  * directory[/etc/gitlab] action create (up to date)
  * directory[Create /var/opt/gitlab] action create (up to date)
  * directory[Create /var/log/gitlab] action create (up to date)
  * directory[/opt/gitlab/embedded/etc] action create (up to date)
  * template[/opt/gitlab/embedded/etc/gitconfig] action create (up to date)
Recipe: gitlab::web-server
  * account[Webserver user and group] action create
    * group[Webserver user and group] action create (up to date)
    * linux_user[Webserver user and group] action create (up to date)
     (up to date)
Recipe: gitlab::users
  * directory[/var/opt/gitlab] action create (up to date)
  * account[GitLab user and group] action create
    * group[GitLab user and group] action create (up to date)
    * linux_user[GitLab user and group] action create (up to date)
     (up to date)
  * template[/var/opt/gitlab/.gitconfig] action create (up to date)
  * directory[/var/opt/gitlab/.bundle] action create (up to date)
Recipe: gitaly::git_data_dirs
  * storage_directory[/var/opt/gitlab/git-data] action create
    * ruby_block[directory resource: /var/opt/gitlab/git-data] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/git-data/repositories] action create
    * ruby_block[directory resource: /var/opt/gitlab/git-data/repositories] action run (skipped due to not_if)
     (up to date)
Recipe: gitlab::rails_pages_shared_path
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/pages] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/pages] action run (skipped due to not_if)
     (up to date)
Recipe: gitlab::gitlab-rails
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/artifacts] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/artifacts] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/external-diffs] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/external-diffs] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/lfs-objects] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/lfs-objects] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/packages] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/packages] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/dependency_proxy] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/terraform_state] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/terraform_state] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/ci_secure_files] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/ci_secure_files] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/encrypted_settings] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/encrypted_settings] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/uploads] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/uploads] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-ci/builds] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-ci/builds] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/cache] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/cache] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/var/opt/gitlab/gitlab-rails/shared/tmp] action create
    * ruby_block[directory resource: /var/opt/gitlab/gitlab-rails/shared/tmp] action run (skipped due to not_if)
     (up to date)
  * storage_directory[/opt/gitlab/embedded/service/gitlab-rails/public] action create (skipped due to only_if)
  * directory[create /var/opt/gitlab/gitlab-rails/etc] action create (up to date)
  * directory[create /opt/gitlab/etc/gitlab-rails] action create (up to date)
  * directory[create /var/opt/gitlab/gitlab-rails/working] action create (up to date)
  * directory[create /var/opt/gitlab/gitlab-rails/tmp] action create (up to date)
  * directory[create /var/opt/gitlab/gitlab-rails/upgrade-status] action create (up to date)
  * directory[/var/log/gitlab/gitlab-rails] action create (up to date)
  * storage_directory[/var/opt/gitlab/backups] action create
    * ruby_block[directory resource: /var/opt/gitlab/backups] action run (skipped due to not_if)
     (up to date)
  * directory[/var/opt/gitlab/gitlab-rails] action create (up to date)
  * directory[/var/opt/gitlab/gitlab-ci] action create (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/gitlab-registry.key] action create (skipped due to only_if)
  * template[/opt/gitlab/etc/gitlab-rails-rc] action create (up to date)
  * file[/opt/gitlab/embedded/service/gitlab-rails/.secret] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/secret] action delete (up to date)
  * templatesymlink[Create a database.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/database.yml to /var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a clickhouse.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/click_house.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/click_house.yml to /var/opt/gitlab/gitlab-rails/etc/click_house.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a secrets.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/secrets.yml to /var/opt/gitlab/gitlab-rails/etc/secrets.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a resque.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/resque.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/resque.yml to /var/opt/gitlab/gitlab-rails/etc/resque.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create an override redis.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/redis.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/redis.yml to /var/opt/gitlab/gitlab-rails/etc/redis.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a cable.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/cable.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/cable.yml to /var/opt/gitlab/gitlab-rails/etc/cable.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a redis.cache.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.cache.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.cache.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.queues.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.queues.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.queues.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.shared_state.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.shared_state.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.shared_state.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.trace_chunks.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.trace_chunks.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.trace_chunks.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.rate_limiting.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.rate_limiting.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.rate_limiting.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.sessions.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.sessions.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.sessions.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.repository_cache.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.repository_cache.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.repository_cache.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.cluster_rate_limiting.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.cluster_rate_limiting.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.cluster_rate_limiting.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a redis.workhorse.yml and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/redis.workhorse.yml] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/redis.workhorse.yml] action delete (up to date)
     (up to date)
  * templatesymlink[Create a session_store.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/session_store.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/session_store.yml to /var/opt/gitlab/gitlab-rails/etc/session_store.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a smtp_settings.rb and create a symlink to Rails root] action delete
    * file[/var/opt/gitlab/gitlab-rails/etc/smtp_settings.rb] action delete (up to date)
    * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/smtp_settings.rb] action delete (up to date)
     (up to date)
  * templatesymlink[Create a gitlab.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml to /var/opt/gitlab/gitlab-rails/etc/gitlab.yml] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_workhorse_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_workhorse_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_workhorse_secret] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_shell_secret and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_shell_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_shell_secret] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_incoming_email_secret and create a symlink to Rails root] action create (skipped due to only_if)
  * templatesymlink[Create a gitlab_service_desk_email_secret and create a symlink to Rails root] action create (skipped due to only_if)
  * templatesymlink[Create a gitlab_pages_secret and create a symlink to Rails root] action create[2024-11-03T19:55:54-05:00] WARN: only_if block for templatesymlink[Create a gitlab_pages_secret and create a symlink to Rails root] returned a string, did you mean to run a command?

    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_pages_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_pages_secret] action create (up to date)
     (up to date)
  * templatesymlink[Create a gitlab_kas_secret and create a symlink to Rails root] action create[2024-11-03T19:55:54-05:00] WARN: only_if block for templatesymlink[Create a gitlab_kas_secret and create a symlink to Rails root] returned a string, did you mean to run a command?

    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_kas_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_kas_secret] action create (up to date)
     (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/config/initializers/relative_url.rb] action delete (up to date)
  * file[/var/opt/gitlab/gitlab-rails/etc/relative_url.rb] action delete (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-rails/env] action create
    * directory[/opt/gitlab/etc/gitlab-rails/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/RAILS_ENV] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/BUNDLE_GEMFILE] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/PUMA_WORKER_MAX_MEMORY] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/SIDEKIQ_MEMORY_KILLER_MAX_RSS] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/ICU_DATA] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/PYTHONPATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/EXECJS_RUNTIME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/TZ] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-rails/env/SSL_CERT_FILE] action create (up to date)
     (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/tmp] action create (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/public/uploads] action create (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-rails/log] action create (up to date)
  * link[/var/log/gitlab/gitlab-rails/sidekiq.log] action delete (skipped due to only_if)
  * file[/opt/gitlab/embedded/service/gitlab-rails/db/structure.sql] action create (up to date)
  * remote_file[/var/opt/gitlab/gitlab-rails/VERSION] action create (up to date)
  * remote_file[/var/opt/gitlab/gitlab-rails/REVISION] action create (up to date)
  * version_file[Create version file for Rails] action create
    * file[/var/opt/gitlab/gitlab-rails/RUBY_VERSION] action create (up to date)
     (up to date)
  * execute[clear the gitlab-rails cache] action nothing (skipped due to action :nothing)
  * file[/var/opt/gitlab/gitlab-rails/config.ru] action delete (up to date)
Recipe: gitlab::selinux
  * bash[Set proper security context on ssh files for selinux] action nothing (skipped due to action :nothing)
Recipe: gitlab::add_trusted_certs
  * directory[/etc/gitlab/trusted-certs] action create (up to date)
  * directory[/opt/gitlab/embedded/ssl/certs] action create (up to date)
  * file[/opt/gitlab/embedded/ssl/certs/README] action create (up to date)
  * ruby_block[Move existing certs and link to /opt/gitlab/embedded/ssl/certs] action run (skipped due to only_if)
Recipe: gitlab::default
  * service[create a temporary puma service] action nothing (skipped due to action :nothing)
  * service[create a temporary sidekiq service] action nothing (skipped due to action :nothing)
  * service[create a temporary mailroom service] action nothing (skipped due to action :nothing)
Recipe: package::runit_systemd
  * directory[/usr/lib/systemd/system] action create (up to date)
  * template[/usr/lib/systemd/system/gitlab-runsvdir.service] action create (up to date)
  * file[/etc/systemd/system/default.target.wants/gitlab-runsvdir.service] action delete (up to date)
  * file[/etc/systemd/system/basic.target.wants/gitlab-runsvdir.service] action delete (up to date)
  * execute[systemctl daemon-reload] action nothing (skipped due to action :nothing)
  * execute[systemctl enable gitlab-runsvdir] action nothing (skipped due to action :nothing)
  * execute[systemctl start gitlab-runsvdir] action nothing (skipped due to action :nothing)
Recipe: gitlab::gitlab-shell
  * storage_directory[/var/opt/gitlab/.ssh] action create
    * ruby_block[directory resource: /var/opt/gitlab/.ssh] action run (skipped due to not_if)
     (up to date)
  * directory[/var/opt/gitlab/gitlab-shell] action create (up to date)
  * directory[/var/log/gitlab/gitlab-shell] action create (up to date)
  * bash[generate gitlab-sshd host keys] action run (skipped due to only_if)
  * templatesymlink[Create a config.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-shell/config.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-shell/config.yml to /var/opt/gitlab/gitlab-shell/config.yml] action create (up to date)
     (up to date)
  * link[/opt/gitlab/embedded/service/gitlab-shell/.gitlab_shell_secret] action create (up to date)
  * file[/var/opt/gitlab/.ssh/authorized_keys] action create_if_missing (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-sshd/env] action nothing (skipped due to action :nothing)
  * service[gitlab-sshd] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-sshd] action disable
    * ruby_block[disable gitlab-sshd] action run (skipped due to only_if)
     (up to date)
Recipe: package::sysctl
  * execute[reload all sysctl conf] action nothing (skipped due to action :nothing)
Recipe: logrotate::folders_and_configs
  * directory[/var/opt/gitlab/logrotate] action create (up to date)
  * directory[/var/opt/gitlab/logrotate/logrotate.d] action create (up to date)
  * directory[/var/log/gitlab/logrotate] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.conf] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/nginx] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/puma] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-rails] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-shell] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-workhorse] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-pages] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitlab-kas] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/gitaly] action create (up to date)
  * template[/var/opt/gitlab/logrotate/logrotate.d/mailroom] action create (up to date)
Recipe: logrotate::enable
  * service[logrotate] action nothing (skipped due to action :nothing)
  * runit_service[logrotate] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/logrotate] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/run] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/log] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/log/main] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_logrotate] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/logrotate/config] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/logrotate/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for logrotate service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/logrotate/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/logrotate/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/logrotate/control] action create (up to date)
    * template[/opt/gitlab/sv/logrotate/control/t] action create (up to date)
    * link[/opt/gitlab/init/logrotate] action create (up to date)
    * file[/opt/gitlab/sv/logrotate/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/logrotate] action create (up to date)
    * ruby_block[wait for logrotate service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/logrotate/current] action touch (skipped due to only_if)
     (up to date)
Recipe: redis::enable
  * redis_service[redis] action create[2024-11-03T19:55:55-05:00] WARN: redis does not have a log_group or default logdir mode defined. Setting to 0700.

    * account[user and group for redis] action create
      * group[user and group for redis] action create (up to date)
      * linux_user[user and group for redis] action create (up to date)
       (up to date)
    * group[Socket group] action create (up to date)
    * directory[/var/opt/gitlab/redis] action create (up to date)
    * directory[/var/log/gitlab/redis] action create (up to date)
    * template[/var/opt/gitlab/redis/redis.conf] action create (up to date)
    * service[redis] action nothing (skipped due to action :nothing)
    * runit_service[redis] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/redis] action create (up to date)
      * template[/opt/gitlab/sv/redis/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis/log] action create (up to date)
      * directory[/opt/gitlab/sv/redis/log/main] action create (up to date)
      * template[/opt/gitlab/sv/redis/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_redis] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/redis/config] action create (up to date)
      * template[/opt/gitlab/sv/redis/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/redis/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for redis service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/redis/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/redis/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/redis/control] action create (up to date)
      * link[/opt/gitlab/init/redis] action create (up to date)
      * file[/opt/gitlab/sv/redis/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/redis] action create (up to date)
      * ruby_block[wait for redis service socket] action run (skipped due to not_if)
      * file[/var/log/gitlab/redis/current] action touch (skipped due to only_if)
       (up to date)
    * ruby_block[warn pending redis restart] action run (skipped due to only_if)
     (up to date)
  * template[/opt/gitlab/etc/gitlab-redis-cli-rc] action create (up to date)
Recipe: gitaly::enable
  * directory[/var/opt/gitlab/gitaly] action create (up to date)
  * directory[/var/opt/gitlab/gitaly/run] action create (up to date)
  * directory[/var/log/gitlab/gitaly] action create (up to date)
  * directory[/var/opt/gitlab/gitaly/internal_sockets] action delete (up to date)
  * env_dir[/opt/gitlab/etc/gitaly/env] action create
    * directory[/opt/gitlab/etc/gitaly/env] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/TZ] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/PYTHONPATH] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/ICU_DATA] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/GITALY_PID_FILE] action create (up to date)
    * file[/opt/gitlab/etc/gitaly/env/WRAPPER_JSON_LOGGING] action create (up to date)
     (up to date)
  * file[/var/opt/gitlab/gitaly/.gitlab_secret] action create (up to date)
  * template[Create Gitaly config.toml] action create (up to date)
  * service[gitaly] action nothing (skipped due to action :nothing)
  * runit_service[gitaly] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitaly] action create (up to date)
    * template[/opt/gitlab/sv/gitaly/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitaly/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitaly] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitaly/config] action create (up to date)
    * template[/opt/gitlab/sv/gitaly/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitaly/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitaly service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitaly/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitaly/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitaly/control] action create (up to date)
    * link[/opt/gitlab/init/gitaly] action create (up to date)
    * file[/opt/gitlab/sv/gitaly/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitaly] action create (up to date)
    * ruby_block[wait for gitaly service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/gitaly/current] action touch (skipped due to only_if)
     (up to date)
  * version_file[Create version file for Gitaly] action create
    * file[/var/opt/gitlab/gitaly/VERSION] action create (up to date)
     (up to date)
  * consul_service[gitaly] action delete
    * file[/var/opt/gitlab/consul/config.d/gitaly-service.json] action delete (up to date)
     (up to date)
Recipe: postgresql::bin
  * ruby_block[check_postgresql_version] action run (skipped due to not_if)
  * ruby_block[check_postgresql_version_is_deprecated] action run (skipped due to not_if)
  * ruby_block[Link postgresql bin files to the correct version] action run (skipped due to only_if)
  * template[/opt/gitlab/etc/gitlab-psql-rc] action create (up to date)
Recipe: postgresql::user
  * account[Postgresql user and group] action create
    * group[Postgresql user and group] action create (up to date)
    * linux_user[Postgresql user and group] action create (up to date)
     (up to date)
  * directory[/var/opt/gitlab/postgresql] action create (up to date)
  * file[/var/opt/gitlab/postgresql/.profile] action create (up to date)
Recipe: postgresql::sysctl
  * gitlab_sysctl[kernel.shmmax] action create
    * directory[create /etc/sysctl.d for kernel.shmmax] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmmax.conf kernel.shmmax] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmmax.conf] action create (up to date)
    * execute[load sysctl conf kernel.shmmax] action nothing (skipped due to action :nothing)
     (up to date)
  * gitlab_sysctl[kernel.shmall] action create
    * directory[create /etc/sysctl.d for kernel.shmall] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.shmall.conf kernel.shmall] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.shmall.conf] action create (up to date)
    * execute[load sysctl conf kernel.shmall] action nothing (skipped due to action :nothing)
     (up to date)
  * gitlab_sysctl[kernel.sem] action create
    * directory[create /etc/sysctl.d for kernel.sem] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-kernel.sem.conf kernel.sem] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-kernel.sem.conf] action create (up to date)
    * execute[load sysctl conf kernel.sem] action nothing (skipped due to action :nothing)
     (up to date)
Recipe: postgresql::enable
  * directory[/var/opt/gitlab/postgresql] action create (up to date)
  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)
  * directory[/var/opt/gitlab/postgresql/data] action create (up to date)
  * directory[/var/log/gitlab/postgresql] action create (up to date)
  * execute[/opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8] action run (skipped due to not_if)
  * file[/var/opt/gitlab/postgresql/data/server.crt] action create (up to date)
  * file[/var/opt/gitlab/postgresql/data/server.key] action create (up to date)
  * postgresql_config[gitlab] action create
    * template[/var/opt/gitlab/postgresql/data/postgresql.conf] action create (up to date)
    * template[/var/opt/gitlab/postgresql/data/runtime.conf] action create (up to date)
    * template[/var/opt/gitlab/postgresql/data/pg_hba.conf] action create (up to date)
    * template[/var/opt/gitlab/postgresql/data/pg_ident.conf] action create (up to date)
     (up to date)
Recipe: postgresql::standalone
  * service[postgresql] action nothing (skipped due to action :nothing)
  * runit_service[postgresql] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/postgresql] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/log] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/log/main] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_postgresql] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/postgresql/config] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgresql/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for postgresql service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/postgresql/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/postgresql/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/postgresql/control] action create (up to date)
    * template[/opt/gitlab/sv/postgresql/control/t] action create (up to date)
    * link[/opt/gitlab/init/postgresql] action create (up to date)
    * file[/opt/gitlab/sv/postgresql/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/postgresql] action create (up to date)
    * ruby_block[wait for postgresql service socket] action run (skipped due to not_if)
    * directory[/opt/gitlab/service/postgresql/supervise] action create (up to date)
    * directory[/opt/gitlab/service/postgresql/log/supervise] action create (up to date)
    * file[/opt/gitlab/service/postgresql/supervise/ok] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/ok] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/supervise/status] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/status] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/supervise/control] action touch (skipped due to only_if)
    * file[/opt/gitlab/service/postgresql/log/supervise/control] action touch (skipped due to only_if)
    * file[/var/log/gitlab/postgresql/current] action touch (skipped due to only_if)
     (up to date)
  * database_objects[postgresql] action create
    * postgresql_user[gitlab] action create
      * execute[create gitlab postgresql user] action run (skipped due to not_if)
       (up to date)
    * postgresql_user[gitlab_replicator] action create
      * execute[create gitlab_replicator postgresql user] action run (skipped due to not_if)
      * execute[set options for gitlab_replicator postgresql user] action run (skipped due to not_if)
       (up to date)
    * postgresql_database[gitlabhq_production] action create
      * execute[create database gitlabhq_production] action run (skipped due to not_if)
       (up to date)
    * postgresql_extension[pg_trgm] action enable
      * postgresql_query[enable pg_trgm extension] action run (skipped due to only_if)
       (up to date)
    * postgresql_extension[btree_gist] action enable
      * postgresql_query[enable btree_gist extension] action run (skipped due to only_if)
       (up to date)
    * postgresql_database[gitlabhq_production] action create
      * execute[create database gitlabhq_production] action run (skipped due to not_if)
       (up to date)
    * postgresql_extension[pg_trgm] action enable
      * postgresql_query[enable pg_trgm extension] action run (skipped due to only_if)
       (up to date)
    * postgresql_extension[btree_gist] action enable
      * postgresql_query[enable btree_gist extension] action run (skipped due to only_if)
       (up to date)
     (up to date)
  * version_file[Create version file for PostgreSQL] action create
    * file[/var/opt/gitlab/postgresql/VERSION] action create (up to date)
     (up to date)
  * ruby_block[warn pending postgresql restart] action run (skipped due to only_if)
  * execute[reload postgresql] action nothing (skipped due to action :nothing)
  * execute[start postgresql] action nothing (skipped due to action :nothing)
Recipe: praefect::disable
  * service[praefect] action nothing (skipped due to action :nothing)
  * runit_service[praefect] action disable
    * ruby_block[disable praefect] action run (skipped due to only_if)
     (up to date)
  * consul_service[praefect] action delete
    * file[/var/opt/gitlab/consul/config.d/praefect-service.json] action delete (up to date)
     (up to date)
Recipe: gitlab-kas::enable
  * directory[/var/opt/gitlab/gitlab-kas] action create (up to date)
  * directory[/opt/gitlab/etc/gitlab-kas] action create (up to date)
  * directory[/var/log/gitlab/gitlab-kas] action create (up to date)
  * version_file[Create version file for Gitlab KAS] action create
    * file[/var/opt/gitlab/gitlab-kas/VERSION] action create (up to date)
     (up to date)
  * file[/var/opt/gitlab/gitlab-kas/authentication_secret_file] action create (up to date)
  * file[/var/opt/gitlab/gitlab-kas/private_api_authentication_secret_file] action create (up to date)
  * file[/var/opt/gitlab/gitlab-kas/redis_password_file] action create (skipped due to only_if)
  * file[/var/opt/gitlab/gitlab-kas/redis_sentinels_password_file] action create (skipped due to only_if)
  * template[/var/opt/gitlab/gitlab-kas/gitlab-kas-config.yml] action create (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-kas/env] action create
    * directory[/opt/gitlab/etc/gitlab-kas/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-kas/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-kas/env/OWN_PRIVATE_API_URL] action create (up to date)
     (up to date)
  * service[gitlab-kas] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-kas] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitlab-kas] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-kas/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-kas/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-kas/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-kas/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitlab-kas] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitlab-kas/config] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-kas/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-kas/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitlab-kas service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-kas/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-kas/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitlab-kas/control] action create (up to date)
    * link[/opt/gitlab/init/gitlab-kas] action create (up to date)
    * file[/opt/gitlab/sv/gitlab-kas/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitlab-kas] action create (up to date)
    * ruby_block[wait for gitlab-kas service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/gitlab-kas/current] action touch (skipped due to only_if)
     (up to date)
Recipe: gitlab::database_migrations
  * ruby_block[check remote PG version] action nothing (skipped due to action :nothing)
  * rails_migration[gitlab-rails] action run[2024-11-03T19:55:58-05:00] WARN: gitlab-rails does not have a log_group or default logdir mode defined. Setting to 0700.

    * bash_hide_env[migrate gitlab-rails database] action run (skipped due to not_if)
     (up to date)
Recipe: crond::disable
  * service[crond] action nothing (skipped due to action :nothing)
  * runit_service[crond] action disable
    * ruby_block[disable crond] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::puma
  * directory[/opt/gitlab/var/puma] action create (up to date)
  * directory[/var/log/gitlab/puma] action create (up to date)
  * directory[/var/opt/gitlab/gitlab-rails/sockets] action create (up to date)
  * puma_config[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create
    * directory[/var/opt/gitlab/gitlab-rails/etc] action create (up to date)
    * template[/var/opt/gitlab/gitlab-rails/etc/puma.rb] action create[2024-11-03T19:55:58-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/puma.rb] backed up to /opt/gitlab/embedded/cookbooks/cache/backup/var/opt/gitlab/gitlab-rails/etc/puma.rb.chef-20241103195558.671352
[2024-11-03T19:55:58-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/puma.rb] updated file contents /var/opt/gitlab/gitlab-rails/etc/puma.rb

      - update content in file /var/opt/gitlab/gitlab-rails/etc/puma.rb from cb0d17 to 6ed10c
      --- /var/opt/gitlab/gitlab-rails/etc/puma.rb	2024-11-03 19:52:42.429997518 -0500
      +++ /var/opt/gitlab/gitlab-rails/etc/.chef-puma20241103-3864056-5s7jd.rb	2024-11-03 19:55:58.653057437 -0500
      @@ -36,12 +36,12 @@
       # accepted protocols.
       bind 'unix:///var/opt/gitlab/gitlab-rails/sockets/gitlab.socket'
       
      -bind 'tcp://127.0.0.1:8080'
      +bind 'tcp:///var/opt/gitlab/gitlab-rails/sockets/gitlab.socket:8080'
       
       
       directory '/var/opt/gitlab/gitlab-rails/working'
       
      -workers 8
      +workers 2
       
       require "/opt/gitlab/embedded/service/gitlab-rails/lib/gitlab/cluster/lifecycle_events"
       
      @@ -50,7 +50,7 @@
         Gitlab::Cluster::LifecycleEvents.do_before_master_restart
       end
       
      -options = { workers: 8 }
      +options = { workers: 2 }
       
       before_fork do
         # Signal application hooks that we're about to fork
  
  * service[puma] action nothing (skipped due to action :nothing)
  * runit_service[puma] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/puma] action create (up to date)
    * template[/opt/gitlab/sv/puma/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log] action create (up to date)
    * directory[/opt/gitlab/sv/puma/log/main] action create (up to date)
    * template[/opt/gitlab/sv/puma/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_puma] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/puma/config] action create (up to date)
    * template[/opt/gitlab/sv/puma/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/puma/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for puma service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/puma/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/puma/control] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/t] action create (up to date)
    * template[/opt/gitlab/sv/puma/control/h] action create (up to date)
    * link[/opt/gitlab/init/puma] action create (up to date)
    * file[/opt/gitlab/sv/puma/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/puma] action create (up to date)
    * ruby_block[wait for puma service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/puma/current] action touch (skipped due to only_if)
     (up to date)
  * consul_service[rails] action delete
    * file[/var/opt/gitlab/consul/config.d/rails-service.json] action delete (up to date)
     (up to date)
  * gitlab_sysctl[net.core.somaxconn] action create
    * directory[create /etc/sysctl.d for net.core.somaxconn] action create (up to date)
    * file[create /opt/gitlab/embedded/etc/90-omnibus-gitlab-net.core.somaxconn.conf net.core.somaxconn] action create (up to date)
    * link[/etc/sysctl.d/90-omnibus-gitlab-net.core.somaxconn.conf] action create (up to date)
    * execute[load sysctl conf net.core.somaxconn] action nothing (skipped due to action :nothing)
     (up to date)
Recipe: gitlab::sidekiq
  * sidekiq_service[sidekiq] action enable[2024-11-03T19:55:58-05:00] WARN: sidekiq does not have a log_group or default logdir mode defined. Setting to 0700.

    * directory[/var/log/gitlab/sidekiq] action create (up to date)
    * service[sidekiq] action nothing (skipped due to action :nothing)
    * runit_service[sidekiq] action enable
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/sv/sidekiq] action create (up to date)
      * template[/opt/gitlab/sv/sidekiq/run] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/log] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/log/main] action create (up to date)
      * template[/opt/gitlab/sv/sidekiq/log/config] action create (up to date)
      * ruby_block[verify_chown_persisted_on_sidekiq] action nothing (skipped due to action :nothing)
      * link[/var/log/gitlab/sidekiq/config] action create (up to date)
      * template[/opt/gitlab/sv/sidekiq/log/run] action create (up to date)
      * directory[/opt/gitlab/sv/sidekiq/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for sidekiq service] action run (skipped due to only_if)
      * template[/opt/gitlab/sv/sidekiq/check] action create (skipped due to only_if)
      * template[/opt/gitlab/sv/sidekiq/finish] action create (skipped due to only_if)
      * directory[/opt/gitlab/sv/sidekiq/control] action create (up to date)
      * link[/opt/gitlab/init/sidekiq] action create (up to date)
      * file[/opt/gitlab/sv/sidekiq/down] action nothing (skipped due to action :nothing)
      * directory[/opt/gitlab/service] action create (up to date)
      * link[/opt/gitlab/service/sidekiq] action create (up to date)
      * ruby_block[wait for sidekiq service socket] action run (skipped due to not_if)
      * file[/var/log/gitlab/sidekiq/current] action touch (skipped due to only_if)
       (up to date)
     (up to date)
  * consul_service[sidekiq] action delete
    * file[/var/opt/gitlab/consul/config.d/sidekiq-service.json] action delete (up to date)
     (up to date)
Recipe: gitlab::gitlab-workhorse
  * directory[/var/opt/gitlab/gitlab-workhorse] action create (up to date)
  * directory[/var/opt/gitlab/gitlab-workhorse/sockets] action create (up to date)
  * directory[/var/log/gitlab/gitlab-workhorse] action create (up to date)
  * directory[/opt/gitlab/etc/gitlab-workhorse] action create (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-workhorse/env] action create
    * directory[/opt/gitlab/etc/gitlab-workhorse/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/PATH] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/HOME] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-workhorse/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * service[gitlab-workhorse] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-workhorse] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitlab-workhorse] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-workhorse/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-workhorse/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-workhorse/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-workhorse/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitlab-workhorse] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitlab-workhorse/config] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-workhorse/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-workhorse/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitlab-workhorse service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-workhorse/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-workhorse/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitlab-workhorse/control] action create (up to date)
    * link[/opt/gitlab/init/gitlab-workhorse] action create (up to date)
    * file[/opt/gitlab/sv/gitlab-workhorse/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitlab-workhorse] action create (up to date)
    * ruby_block[wait for gitlab-workhorse service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/gitlab-workhorse/current] action touch (skipped due to only_if)
     (up to date)
  * consul_service[workhorse] action delete
    * file[/var/opt/gitlab/consul/config.d/workhorse-service.json] action delete (up to date)
     (up to date)
  * version_file[Create version file for Workhorse] action create
    * file[/var/opt/gitlab/gitlab-workhorse/VERSION] action create (up to date)
     (up to date)
  * template[/var/opt/gitlab/gitlab-workhorse/config.toml] action create (up to date)
Recipe: gitlab::mailroom_disable
  * service[mailroom] action nothing (skipped due to action :nothing)
  * runit_service[mailroom] action disable
    * ruby_block[disable mailroom] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::nginx
  * directory[/var/opt/gitlab/nginx] action create (up to date)
  * directory[/var/opt/gitlab/nginx/conf] action create (up to date)
  * directory[/var/log/gitlab/nginx] action create (up to date)
  * link[/var/opt/gitlab/nginx/logs] action create (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-http.conf] action create (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-smartcard-http.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-health.conf] action create (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-pages.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-registry.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-mattermost-http.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/gitlab-kas.conf] action delete (up to date)
  * template[/var/opt/gitlab/nginx/conf/nginx-status.conf] action create (up to date)
  * consul_service[nginx] action delete
    * file[/var/opt/gitlab/consul/config.d/nginx-service.json] action delete (up to date)
     (up to date)
  * template[/var/opt/gitlab/nginx/conf/nginx.conf] action create (up to date)
Recipe: nginx::enable
  * service[nginx] action nothing (skipped due to action :nothing)
  * runit_service[nginx] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/nginx] action create (up to date)
    * template[/opt/gitlab/sv/nginx/run] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/log] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/log/main] action create (up to date)
    * template[/opt/gitlab/sv/nginx/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_nginx] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/nginx/config] action create (up to date)
    * template[/opt/gitlab/sv/nginx/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/nginx/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/nginx/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/nginx/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/nginx/control] action create (up to date)
    * link[/opt/gitlab/init/nginx] action create (up to date)
    * file[/opt/gitlab/sv/nginx/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/nginx] action create (up to date)
    * ruby_block[wait for nginx service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/nginx/current] action touch (skipped due to only_if)
     (up to date)
  * version_file[Create version file for NGINX] action create
    * file[/var/opt/gitlab/nginx/VERSION] action create (up to date)
     (up to date)
  * execute[reload nginx] action nothing (skipped due to action :nothing)
Recipe: gitlab::remote-syslog_disable
  * service[remote-syslog] action nothing (skipped due to action :nothing)
  * runit_service[remote-syslog] action disable
    * ruby_block[disable remote-syslog] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab::storage-check_disable
  * service[storage-check] action nothing (skipped due to action :nothing)
  * runit_service[storage-check] action disable
    * ruby_block[disable storage-check] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab-pages::disable
  * service[gitlab-pages] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-pages] action disable
    * ruby_block[disable gitlab-pages] action run (skipped due to only_if)
     (up to date)
Recipe: registry::disable
  * service[registry] action nothing (skipped due to action :nothing)
  * runit_service[registry] action disable
    * ruby_block[disable registry] action run (skipped due to only_if)
     (up to date)
Recipe: mattermost::disable
  * service[mattermost] action nothing (skipped due to action :nothing)
  * runit_service[mattermost] action disable
    * ruby_block[disable mattermost] action run (skipped due to only_if)
     (up to date)
Recipe: letsencrypt::disable
  * crond_job[letsencrypt-renew] action delete
    * file[/var/opt/gitlab/crond/letsencrypt-renew] action delete (up to date)
     (up to date)
Recipe: gitlab::gitlab-healthcheck
  * template[/opt/gitlab/etc/gitlab-healthcheck-rc] action create (up to date)
Recipe: monitoring::pgbouncer-exporter_disable
  * service[pgbouncer-exporter] action nothing (skipped due to action :nothing)
  * runit_service[pgbouncer-exporter] action disable
    * ruby_block[disable pgbouncer-exporter] action run (skipped due to only_if)
     (up to date)
Recipe: monitoring::user
  * account[Prometheus user and group] action create
    * group[Prometheus user and group] action create (up to date)
    * linux_user[Prometheus user and group] action create (up to date)
     (up to date)
Recipe: monitoring::node-exporter
  * directory[/var/log/gitlab/node-exporter] action create (up to date)
  * directory[/opt/gitlab/etc/node-exporter/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/node-exporter/env] action create
    * directory[/opt/gitlab/etc/node-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/node-exporter/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * directory[/var/opt/gitlab/node-exporter/textfile_collector] action create (up to date)
  * service[node-exporter] action nothing (skipped due to action :nothing)
  * runit_service[node-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/node-exporter] action create (up to date)
    * template[/opt/gitlab/sv/node-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/node-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/node-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/node-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_node-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/node-exporter/config] action create (up to date)
    * template[/opt/gitlab/sv/node-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/node-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for node-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/node-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/node-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/node-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/node-exporter] action create (up to date)
    * file[/opt/gitlab/sv/node-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/node-exporter] action create (up to date)
    * ruby_block[wait for node-exporter service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/node-exporter/current] action touch (skipped due to only_if)
     (up to date)
  * consul_service[node-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/node-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::gitlab-exporter
  * directory[/var/opt/gitlab/gitlab-exporter] action create (up to date)
  * directory[/var/log/gitlab/gitlab-exporter] action create (up to date)
  * env_dir[/opt/gitlab/etc/gitlab-exporter/env] action create
    * directory[/opt/gitlab/etc/gitlab-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/MALLOC_CONF] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_INIT_SLOTS] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MIN_RATIO] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/RUBY_GC_HEAP_FREE_SLOTS_MAX_RATIO] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/gitlab-exporter/env/SSL_CERT_FILE] action create (up to date)
     (up to date)
  * template[/var/opt/gitlab/gitlab-exporter/gitlab-exporter.yml] action create (up to date)
  * version_file[Create version file for GitLab-Exporter] action create
    * file[/var/opt/gitlab/gitlab-exporter/RUBY_VERSION] action create (up to date)
     (up to date)
  * service[gitlab-exporter] action nothing (skipped due to action :nothing)
  * runit_service[gitlab-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/gitlab-exporter] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_gitlab-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/gitlab-exporter/config] action create (up to date)
    * template[/opt/gitlab/sv/gitlab-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/gitlab-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for gitlab-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/gitlab-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/gitlab-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/gitlab-exporter] action create (up to date)
    * file[/opt/gitlab/sv/gitlab-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/gitlab-exporter] action create (up to date)
    * ruby_block[wait for gitlab-exporter service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/gitlab-exporter/current] action touch (skipped due to only_if)
     (up to date)
  * consul_service[gitlab-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/gitlab-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::redis-exporter
  * directory[/var/log/gitlab/redis-exporter] action create (up to date)
  * directory[/opt/gitlab/etc/redis-exporter/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/redis-exporter/env] action create
    * directory[/opt/gitlab/etc/redis-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/redis-exporter/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * service[redis-exporter] action nothing (skipped due to action :nothing)
  * runit_service[redis-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/redis-exporter] action create (up to date)
    * template[/opt/gitlab/sv/redis-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/redis-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_redis-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/redis-exporter/config] action create (up to date)
    * template[/opt/gitlab/sv/redis-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/redis-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for redis-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/redis-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/redis-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/redis-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/redis-exporter] action create (up to date)
    * file[/opt/gitlab/sv/redis-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/redis-exporter] action create (up to date)
    * ruby_block[wait for redis-exporter service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/redis-exporter/current] action touch (skipped due to only_if)
     (up to date)
  * consul_service[redis-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/redis-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: monitoring::prometheus
  * directory[/var/opt/gitlab/prometheus] action create (up to date)
  * directory[/var/opt/gitlab/prometheus/rules] action create (up to date)
  * directory[/var/log/gitlab/prometheus] action create (up to date)
  * directory[/opt/gitlab/etc/prometheus/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/prometheus/env] action create
    * directory[/opt/gitlab/etc/prometheus/env] action create (up to date)
    * file[/opt/gitlab/etc/prometheus/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * execute[reload prometheus] action nothing (skipped due to action :nothing)
  * file[Prometheus config] action create[2024-11-03T19:55:59-05:00] INFO: file[Prometheus config] backed up to /opt/gitlab/embedded/cookbooks/cache/backup/var/opt/gitlab/prometheus/prometheus.yml.chef-20241103195559.329302
[2024-11-03T19:55:59-05:00] INFO: file[Prometheus config] updated file contents /var/opt/gitlab/prometheus/prometheus.yml

    - update content in file /var/opt/gitlab/prometheus/prometheus.yml from 0fbf9e to 9ad15a
    --- /var/opt/gitlab/prometheus/prometheus.yml	2024-11-03 19:52:52.486649057 -0500
    +++ /var/opt/gitlab/prometheus/.chef-prometheus20241103-3864056-c3wu37.yml	2024-11-03 19:55:59.326039824 -0500
    @@ -36,7 +36,7 @@
       metrics_path: "/-/metrics"
       static_configs:
       - targets:
    -    - 127.0.0.1:8080
    +    - "/var/opt/gitlab/gitlab-rails/sockets/gitlab.socket:8080"
       relabel_configs:
       - source_labels:
         - __address__
  * service[prometheus] action nothing (skipped due to action :nothing)
  * runit_service[prometheus] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/prometheus] action create (up to date)
    * template[/opt/gitlab/sv/prometheus/run] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/log] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/log/main] action create (up to date)
    * template[/opt/gitlab/sv/prometheus/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_prometheus] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/prometheus/config] action create (up to date)
    * template[/opt/gitlab/sv/prometheus/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/prometheus/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for prometheus service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/prometheus/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/prometheus/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/prometheus/control] action create (up to date)
    * link[/opt/gitlab/init/prometheus] action create (up to date)
    * file[/opt/gitlab/sv/prometheus/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/prometheus] action create (up to date)
    * ruby_block[wait for prometheus service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/prometheus/current] action touch (skipped due to only_if)
     (up to date)
  * consul_service[prometheus] action delete
    * file[/var/opt/gitlab/consul/config.d/prometheus-service.json] action delete (up to date)
     (up to date)
  * template[/var/opt/gitlab/prometheus/rules/gitlab.rules] action create (up to date)
  * template[/var/opt/gitlab/prometheus/rules/node.rules] action create (up to date)
Recipe: monitoring::alertmanager
  * directory[/var/opt/gitlab/alertmanager] action create (up to date)
  * directory[/var/log/gitlab/alertmanager] action create (up to date)
  * directory[/opt/gitlab/etc/alertmanager/env] action create (up to date)
  * env_dir[/opt/gitlab/etc/alertmanager/env] action create
    * directory[/opt/gitlab/etc/alertmanager/env] action create (up to date)
    * file[/opt/gitlab/etc/alertmanager/env/SSL_CERT_DIR] action create (up to date)
     (up to date)
  * file[Alertmanager config] action create (up to date)
  * service[alertmanager] action nothing (skipped due to action :nothing)
  * runit_service[alertmanager] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/alertmanager] action create (up to date)
    * template[/opt/gitlab/sv/alertmanager/run] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/log] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/log/main] action create (up to date)
    * template[/opt/gitlab/sv/alertmanager/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_alertmanager] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/alertmanager/config] action create (up to date)
    * template[/opt/gitlab/sv/alertmanager/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/alertmanager/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for alertmanager service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/alertmanager/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/alertmanager/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/alertmanager/control] action create (up to date)
    * link[/opt/gitlab/init/alertmanager] action create (up to date)
    * file[/opt/gitlab/sv/alertmanager/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/alertmanager] action create (up to date)
    * ruby_block[wait for alertmanager service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/alertmanager/current] action touch (skipped due to only_if)
     (up to date)
Recipe: monitoring::postgres-exporter
  * directory[/var/log/gitlab/postgres-exporter] action create (up to date)
  * directory[/var/opt/gitlab/postgres-exporter] action create (up to date)
  * env_dir[/opt/gitlab/etc/postgres-exporter/env] action create
    * directory[/opt/gitlab/etc/postgres-exporter/env] action create (up to date)
    * file[/opt/gitlab/etc/postgres-exporter/env/SSL_CERT_DIR] action create (up to date)
    * file[/opt/gitlab/etc/postgres-exporter/env/DATA_SOURCE_NAME] action create (up to date)
     (up to date)
  * service[postgres-exporter] action nothing (skipped due to action :nothing)
  * runit_service[postgres-exporter] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * ruby_block[reload_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/sv/postgres-exporter] action create (up to date)
    * template[/opt/gitlab/sv/postgres-exporter/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/log] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/log/main] action create (up to date)
    * template[/opt/gitlab/sv/postgres-exporter/log/config] action create (up to date)
    * ruby_block[verify_chown_persisted_on_postgres-exporter] action nothing (skipped due to action :nothing)
    * link[/var/log/gitlab/postgres-exporter/config] action create (up to date)
    * template[/opt/gitlab/sv/postgres-exporter/log/run] action create (up to date)
    * directory[/opt/gitlab/sv/postgres-exporter/env] action create (up to date)
    * ruby_block[Delete unmanaged env files for postgres-exporter service] action run (skipped due to only_if)
    * template[/opt/gitlab/sv/postgres-exporter/check] action create (skipped due to only_if)
    * template[/opt/gitlab/sv/postgres-exporter/finish] action create (skipped due to only_if)
    * directory[/opt/gitlab/sv/postgres-exporter/control] action create (up to date)
    * link[/opt/gitlab/init/postgres-exporter] action create (up to date)
    * file[/opt/gitlab/sv/postgres-exporter/down] action nothing (skipped due to action :nothing)
    * directory[/opt/gitlab/service] action create (up to date)
    * link[/opt/gitlab/service/postgres-exporter] action create (up to date)
    * ruby_block[wait for postgres-exporter service socket] action run (skipped due to not_if)
    * file[/var/log/gitlab/postgres-exporter/current] action touch (skipped due to only_if)
     (up to date)
  * template[/var/opt/gitlab/postgres-exporter/queries.yaml] action create (up to date)
  * consul_service[postgres-exporter] action delete
    * file[/var/opt/gitlab/consul/config.d/postgres-exporter-service.json] action delete (up to date)
     (up to date)
Recipe: gitlab::gitlab-backup-cli_disable
  * template[/opt/gitlab/etc/gitlab-backup-cli-config.yml] action delete (up to date)
  * account[GitLab Backup User] action remove
    * linux_user[gitlab-backup] action remove (up to date)
     (up to date)
  * group[git] action manage (up to date)
  * group[gitlab-psql] action manage (up to date)
  * group[registry] action manage (up to date)
Recipe: gitlab::database_reindexing_disable
  * crond_job[database-reindexing] action delete
    * file[/var/opt/gitlab/crond/database-reindexing] action delete (up to date)
     (up to date)
Recipe: gitlab-ee::sentinel_disable
  * sentinel_service[redis] action disable
    * service[sentinel] action nothing (skipped due to action :nothing)
    * runit_service[sentinel] action disable
      * ruby_block[disable sentinel] action run (skipped due to only_if)
       (up to date)
    * file[/var/opt/gitlab/sentinel/sentinel.conf] action delete (up to date)
    * directory[/var/opt/gitlab/sentinel] action delete (up to date)
     (up to date)
Recipe: gitlab-ee::geo-postgresql_disable
  * service[geo-postgresql] action nothing (skipped due to action :nothing)
  * runit_service[geo-postgresql] action disable
    * ruby_block[disable geo-postgresql] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab-ee::geo-logcursor_disable
  * service[geo-logcursor] action nothing (skipped due to action :nothing)
  * runit_service[geo-logcursor] action disable
    * ruby_block[disable geo-logcursor] action run (skipped due to only_if)
     (up to date)
Recipe: consul::disable_daemon
  * service[consul] action nothing (skipped due to action :nothing)
  * runit_service[consul] action disable
    * ruby_block[disable consul] action run (skipped due to only_if)
     (up to date)
Recipe: pgbouncer::disable
  * service[pgbouncer] action nothing (skipped due to action :nothing)
  * runit_service[pgbouncer] action disable
    * ruby_block[disable pgbouncer] action run (skipped due to only_if)
     (up to date)
Recipe: patroni::disable
  * service[patroni] action nothing (skipped due to action :nothing)
  * runit_service[patroni] action disable
    * ruby_block[disable patroni] action run (skipped due to only_if)
     (up to date)
Recipe: spamcheck::disable
  * service[spamcheck] action nothing (skipped due to action :nothing)
  * runit_service[spamcheck] action disable
    * ruby_block[disable spamcheck] action run (skipped due to only_if)
     (up to date)
  * service[spam-classifier] action nothing (skipped due to action :nothing)
  * runit_service[spam-classifier] action disable
    * ruby_block[disable spam-classifier] action run (skipped due to only_if)
     (up to date)
Recipe: gitlab-ee::geo-secondary_disable
  * templatesymlink[Removes the geo database settings from database.yml and create a symlink to Rails root] action create
    * template[/var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/config/database.yml to /var/opt/gitlab/gitlab-rails/etc/database.yml] action create (up to date)
     (up to date)
Recipe: gitlab-ee::suggested_reviewers
  * templatesymlink[Create a gitlab_suggested_reviewers_secret and create a symlink to Rails root] action create[2024-11-03T19:55:59-05:00] WARN: only_if block for templatesymlink[Create a gitlab_suggested_reviewers_secret and create a symlink to Rails root] returned a string, did you mean to run a command?

    * template[/var/opt/gitlab/gitlab-rails/etc/gitlab_suggested_reviewers_secret] action create (up to date)
    * link[Link /opt/gitlab/embedded/service/gitlab-rails/.gitlab_suggested_reviewers_secret to /var/opt/gitlab/gitlab-rails/etc/gitlab_suggested_reviewers_secret] action create (up to date)
     (up to date)
[2024-11-03T19:55:59-05:00] INFO: template[/var/opt/gitlab/gitlab-rails/etc/puma.rb] sending restart action to runit_service[puma] (delayed)
Recipe: gitlab::puma
  * runit_service[puma] action restart (up to date)
[2024-11-03T19:55:59-05:00] INFO: file[Prometheus config] sending run action to execute[reload prometheus] (delayed)
Recipe: monitoring::prometheus
  * execute[reload prometheus] action run[2024-11-03T19:56:00-05:00] INFO: execute[reload prometheus] ran successfully

    - execute /opt/gitlab/bin/gitlab-ctl hup prometheus
[2024-11-03T19:56:00-05:00] INFO: Cinc Client Run complete in 12.81222462 seconds

Running handlers:
[2024-11-03T19:56:00-05:00] INFO: Running report handlers
Running handlers complete
[2024-11-03T19:56:00-05:00] INFO: Report handlers complete
Infra Phase complete, 4/864 resources updated in 13 seconds
gitlab Reconfigured!

Restarting GitLab...
ok: run: alertmanager: (pid 3864567) 0s
ok: run: gitaly: (pid 3864586) 0s
ok: run: gitlab-exporter: (pid 3864616) 0s
ok: run: gitlab-kas: (pid 3864618) 1s
ok: run: gitlab-workhorse: (pid 3864644) 0s
ok: run: logrotate: (pid 3864659) 1s
ok: run: nginx: (pid 3864691) 0s
ok: run: node-exporter: (pid 3864707) 1s
ok: run: postgres-exporter: (pid 3864717) 0s
ok: run: postgresql: (pid 3864743) 0s
ok: run: prometheus: (pid 3864752) 1s
ok: run: puma: (pid 3864771) 0s
ok: run: redis: (pid 3864782) 0s
ok: run: redis-exporter: (pid 3864789) 1s
ok: run: sidekiq: (pid 3864808) 0s
Waiting for GitLab to be ready...
......Creating access token...
WARNING: Active Record does not support composite primary key.

security_findings has composite primary key. Composite primary key is ignored.
Please specify a valid ruby command or the path of a script to run.
Run 'rails runner -h' for help.

undefined method `group_managed_account?' for nil:NilClass
impromise@impromise-OptiPlex-990:~/oldhome/home/impromise/Downloads/Telegram Desktop/nostr-w-relay-main/agu-app/src/odoo-nostr-project$
